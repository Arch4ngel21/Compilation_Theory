Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> { instructions }
Rule 7     instruction -> if
Rule 8     instruction -> return ;
Rule 9     instruction -> BREAK ;
Rule 10    instruction -> CONTINUE ;
Rule 11    instruction -> for_loop
Rule 12    instruction -> while_loop
Rule 13    instruction -> assignment ;
Rule 14    instruction -> print
Rule 15    if -> IF ( expression ) instruction
Rule 16    if -> IF ( expression ) instruction ELSE instruction
Rule 17    while_loop -> WHILE ( expression ) instruction
Rule 18    for_loop -> FOR ID = expression : expression instruction
Rule 19    return -> RETURN expression
Rule 20    return -> RETURN
Rule 21    print -> PRINT ( list_for_print ) ;
Rule 22    print -> PRINT list_for_print ;
Rule 23    list_for_print -> expression , list_for_print
Rule 24    list_for_print -> expression
Rule 25    expression -> var
Rule 26    expression -> ( expression )
Rule 27    expression -> INTNUM
Rule 28    expression -> FLOATNUM
Rule 29    expression -> STRING
Rule 30    var -> ID
Rule 31    var -> ID [ expression , expression ]
Rule 32    assignment -> var = expression
Rule 33    assignment -> var ADDASSIGN expression
Rule 34    assignment -> var SUBASSIGN expression
Rule 35    assignment -> var MULASSIGN expression
Rule 36    assignment -> var DIVASSIGN expression
Rule 37    expression -> expression '
Rule 38    expression -> - expression
Rule 39    expression -> expression + expression
Rule 40    expression -> expression - expression
Rule 41    expression -> expression * expression
Rule 42    expression -> expression / expression
Rule 43    expression -> expression DOTADD expression
Rule 44    expression -> expression DOTSUB expression
Rule 45    expression -> expression DOTMUL expression
Rule 46    expression -> expression DOTDIV expression
Rule 47    expression -> expression < expression
Rule 48    expression -> expression > expression
Rule 49    expression -> expression LESSEQ expression
Rule 50    expression -> expression MOREEQ expression
Rule 51    expression -> expression EQUAL expression
Rule 52    expression -> expression NOTEQUAL expression
Rule 53    expression -> matrix
Rule 54    matrix -> [ matrix ]
Rule 55    matrix -> [ sub_string_1 ]
Rule 56    matrix -> [ sub_string_1 , matrix ]
Rule 57    sub_string_1 -> sub_string_1 , expression
Rule 58    sub_string_1 -> expression
Rule 59    expression -> matrix_creation ( expression )
Rule 60    matrix_creation -> ZEROS
Rule 61    matrix_creation -> ONES
Rule 62    matrix_creation -> EYE

Terminals, with rules where they appear

'                    : 37
(                    : 15 16 17 21 26 59
)                    : 15 16 17 21 26 59
*                    : 41
+                    : 39
,                    : 23 31 56 57
-                    : 38 40
/                    : 42
:                    : 18
;                    : 8 9 10 13 21 22
<                    : 47
=                    : 18 32
>                    : 48
ADDASSIGN            : 33
BREAK                : 9
CONTINUE             : 10
DIVASSIGN            : 36
DOTADD               : 43
DOTDIV               : 46
DOTMUL               : 45
DOTSUB               : 44
ELSE                 : 16
EQUAL                : 51
EYE                  : 62
FLOATNUM             : 28
FOR                  : 18
ID                   : 18 30 31
IF                   : 15 16
INTNUM               : 27
LESSEQ               : 49
MOREEQ               : 50
MULASSIGN            : 35
NOTEQUAL             : 52
ONES                 : 61
PRINT                : 21 22
RETURN               : 19 20
STRING               : 29
SUBASSIGN            : 34
WHILE                : 17
ZEROS                : 60
[                    : 31 54 55 56
]                    : 31 54 55 56
error                : 
{                    : 6
}                    : 6

Nonterminals, with rules where they appear

assignment           : 13
expression           : 15 16 17 18 18 19 23 24 26 31 31 32 33 34 35 36 37 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 57 58 59
for_loop             : 11
if                   : 7
instruction          : 4 5 15 16 16 17 18
instructions         : 2 4 6
instructions_opt     : 1
list_for_print       : 21 22 23
matrix               : 53 54 56
matrix_creation      : 59
print                : 14
program              : 0
return               : 8
sub_string_1         : 55 56 57
var                  : 25 32 33 34 35 36
while_loop           : 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction
    (16) if -> . IF ( expression ) instruction ELSE instruction
    (19) return -> . RETURN expression
    (20) return -> . RETURN
    (18) for_loop -> . FOR ID = expression : expression instruction
    (17) while_loop -> . WHILE ( expression ) instruction
    (32) assignment -> . var = expression
    (33) assignment -> . var ADDASSIGN expression
    (34) assignment -> . var SUBASSIGN expression
    (35) assignment -> . var MULASSIGN expression
    (36) assignment -> . var DIVASSIGN expression
    (21) print -> . PRINT ( list_for_print ) ;
    (22) print -> . PRINT list_for_print ;
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]

    $end            reduce using rule 3 (instructions_opt -> .)
    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction
    (16) if -> . IF ( expression ) instruction ELSE instruction
    (19) return -> . RETURN expression
    (20) return -> . RETURN
    (18) for_loop -> . FOR ID = expression : expression instruction
    (17) while_loop -> . WHILE ( expression ) instruction
    (32) assignment -> . var = expression
    (33) assignment -> . var ADDASSIGN expression
    (34) assignment -> . var SUBASSIGN expression
    (35) assignment -> . var MULASSIGN expression
    (36) assignment -> . var DIVASSIGN expression
    (21) print -> . PRINT ( list_for_print ) ;
    (22) print -> . PRINT list_for_print ;
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 21
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 4

    (5) instructions -> instruction .

    {               reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)
    }               reduce using rule 5 (instructions -> instruction .)


state 5

    (6) instruction -> { . instructions }
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction
    (16) if -> . IF ( expression ) instruction ELSE instruction
    (19) return -> . RETURN expression
    (20) return -> . RETURN
    (18) for_loop -> . FOR ID = expression : expression instruction
    (17) while_loop -> . WHILE ( expression ) instruction
    (32) assignment -> . var = expression
    (33) assignment -> . var ADDASSIGN expression
    (34) assignment -> . var SUBASSIGN expression
    (35) assignment -> . var MULASSIGN expression
    (36) assignment -> . var DIVASSIGN expression
    (21) print -> . PRINT ( list_for_print ) ;
    (22) print -> . PRINT list_for_print ;
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]

    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instructions                   shift and go to state 22
    instruction                    shift and go to state 4
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 6

    (7) instruction -> if .

    {               reduce using rule 7 (instruction -> if .)
    BREAK           reduce using rule 7 (instruction -> if .)
    CONTINUE        reduce using rule 7 (instruction -> if .)
    IF              reduce using rule 7 (instruction -> if .)
    RETURN          reduce using rule 7 (instruction -> if .)
    FOR             reduce using rule 7 (instruction -> if .)
    WHILE           reduce using rule 7 (instruction -> if .)
    PRINT           reduce using rule 7 (instruction -> if .)
    ID              reduce using rule 7 (instruction -> if .)
    $end            reduce using rule 7 (instruction -> if .)
    }               reduce using rule 7 (instruction -> if .)
    ELSE            reduce using rule 7 (instruction -> if .)


state 7

    (8) instruction -> return . ;

    ;               shift and go to state 23


state 8

    (9) instruction -> BREAK . ;

    ;               shift and go to state 24


state 9

    (10) instruction -> CONTINUE . ;

    ;               shift and go to state 25


state 10

    (11) instruction -> for_loop .

    {               reduce using rule 11 (instruction -> for_loop .)
    BREAK           reduce using rule 11 (instruction -> for_loop .)
    CONTINUE        reduce using rule 11 (instruction -> for_loop .)
    IF              reduce using rule 11 (instruction -> for_loop .)
    RETURN          reduce using rule 11 (instruction -> for_loop .)
    FOR             reduce using rule 11 (instruction -> for_loop .)
    WHILE           reduce using rule 11 (instruction -> for_loop .)
    PRINT           reduce using rule 11 (instruction -> for_loop .)
    ID              reduce using rule 11 (instruction -> for_loop .)
    $end            reduce using rule 11 (instruction -> for_loop .)
    }               reduce using rule 11 (instruction -> for_loop .)
    ELSE            reduce using rule 11 (instruction -> for_loop .)


state 11

    (12) instruction -> while_loop .

    {               reduce using rule 12 (instruction -> while_loop .)
    BREAK           reduce using rule 12 (instruction -> while_loop .)
    CONTINUE        reduce using rule 12 (instruction -> while_loop .)
    IF              reduce using rule 12 (instruction -> while_loop .)
    RETURN          reduce using rule 12 (instruction -> while_loop .)
    FOR             reduce using rule 12 (instruction -> while_loop .)
    WHILE           reduce using rule 12 (instruction -> while_loop .)
    PRINT           reduce using rule 12 (instruction -> while_loop .)
    ID              reduce using rule 12 (instruction -> while_loop .)
    $end            reduce using rule 12 (instruction -> while_loop .)
    }               reduce using rule 12 (instruction -> while_loop .)
    ELSE            reduce using rule 12 (instruction -> while_loop .)


state 12

    (13) instruction -> assignment . ;

    ;               shift and go to state 26


state 13

    (14) instruction -> print .

    {               reduce using rule 14 (instruction -> print .)
    BREAK           reduce using rule 14 (instruction -> print .)
    CONTINUE        reduce using rule 14 (instruction -> print .)
    IF              reduce using rule 14 (instruction -> print .)
    RETURN          reduce using rule 14 (instruction -> print .)
    FOR             reduce using rule 14 (instruction -> print .)
    WHILE           reduce using rule 14 (instruction -> print .)
    PRINT           reduce using rule 14 (instruction -> print .)
    ID              reduce using rule 14 (instruction -> print .)
    $end            reduce using rule 14 (instruction -> print .)
    }               reduce using rule 14 (instruction -> print .)
    ELSE            reduce using rule 14 (instruction -> print .)


state 14

    (15) if -> IF . ( expression ) instruction
    (16) if -> IF . ( expression ) instruction ELSE instruction

    (               shift and go to state 27


state 15

    (19) return -> RETURN . expression
    (20) return -> RETURN .
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    ;               reduce using rule 20 (return -> RETURN .)
    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 28
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 16

    (18) for_loop -> FOR . ID = expression : expression instruction

    ID              shift and go to state 41


state 17

    (30) var -> ID .
    (31) var -> ID . [ expression , expression ]

    =               reduce using rule 30 (var -> ID .)
    ADDASSIGN       reduce using rule 30 (var -> ID .)
    SUBASSIGN       reduce using rule 30 (var -> ID .)
    MULASSIGN       reduce using rule 30 (var -> ID .)
    DIVASSIGN       reduce using rule 30 (var -> ID .)
    '               reduce using rule 30 (var -> ID .)
    +               reduce using rule 30 (var -> ID .)
    -               reduce using rule 30 (var -> ID .)
    *               reduce using rule 30 (var -> ID .)
    /               reduce using rule 30 (var -> ID .)
    DOTADD          reduce using rule 30 (var -> ID .)
    DOTSUB          reduce using rule 30 (var -> ID .)
    DOTMUL          reduce using rule 30 (var -> ID .)
    DOTDIV          reduce using rule 30 (var -> ID .)
    <               reduce using rule 30 (var -> ID .)
    >               reduce using rule 30 (var -> ID .)
    LESSEQ          reduce using rule 30 (var -> ID .)
    MOREEQ          reduce using rule 30 (var -> ID .)
    EQUAL           reduce using rule 30 (var -> ID .)
    NOTEQUAL        reduce using rule 30 (var -> ID .)
    ;               reduce using rule 30 (var -> ID .)
    ,               reduce using rule 30 (var -> ID .)
    )               reduce using rule 30 (var -> ID .)
    ]               reduce using rule 30 (var -> ID .)
    :               reduce using rule 30 (var -> ID .)
    {               reduce using rule 30 (var -> ID .)
    BREAK           reduce using rule 30 (var -> ID .)
    CONTINUE        reduce using rule 30 (var -> ID .)
    IF              reduce using rule 30 (var -> ID .)
    RETURN          reduce using rule 30 (var -> ID .)
    FOR             reduce using rule 30 (var -> ID .)
    WHILE           reduce using rule 30 (var -> ID .)
    PRINT           reduce using rule 30 (var -> ID .)
    ID              reduce using rule 30 (var -> ID .)
    [               shift and go to state 42


state 18

    (17) while_loop -> WHILE . ( expression ) instruction

    (               shift and go to state 43


state 19

    (32) assignment -> var . = expression
    (33) assignment -> var . ADDASSIGN expression
    (34) assignment -> var . SUBASSIGN expression
    (35) assignment -> var . MULASSIGN expression
    (36) assignment -> var . DIVASSIGN expression

    =               shift and go to state 44
    ADDASSIGN       shift and go to state 45
    SUBASSIGN       shift and go to state 46
    MULASSIGN       shift and go to state 47
    DIVASSIGN       shift and go to state 48


state 20

    (21) print -> PRINT . ( list_for_print ) ;
    (22) print -> PRINT . list_for_print ;
    (23) list_for_print -> . expression , list_for_print
    (24) list_for_print -> . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 49
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    list_for_print                 shift and go to state 50
    expression                     shift and go to state 51
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 21

    (4) instructions -> instructions instruction .

    {               reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    }               reduce using rule 4 (instructions -> instructions instruction .)


state 22

    (6) instruction -> { instructions . }
    (4) instructions -> instructions . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction
    (16) if -> . IF ( expression ) instruction ELSE instruction
    (19) return -> . RETURN expression
    (20) return -> . RETURN
    (18) for_loop -> . FOR ID = expression : expression instruction
    (17) while_loop -> . WHILE ( expression ) instruction
    (32) assignment -> . var = expression
    (33) assignment -> . var ADDASSIGN expression
    (34) assignment -> . var SUBASSIGN expression
    (35) assignment -> . var MULASSIGN expression
    (36) assignment -> . var DIVASSIGN expression
    (21) print -> . PRINT ( list_for_print ) ;
    (22) print -> . PRINT list_for_print ;
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]

    }               shift and go to state 52
    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 21
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 23

    (8) instruction -> return ; .

    {               reduce using rule 8 (instruction -> return ; .)
    BREAK           reduce using rule 8 (instruction -> return ; .)
    CONTINUE        reduce using rule 8 (instruction -> return ; .)
    IF              reduce using rule 8 (instruction -> return ; .)
    RETURN          reduce using rule 8 (instruction -> return ; .)
    FOR             reduce using rule 8 (instruction -> return ; .)
    WHILE           reduce using rule 8 (instruction -> return ; .)
    PRINT           reduce using rule 8 (instruction -> return ; .)
    ID              reduce using rule 8 (instruction -> return ; .)
    $end            reduce using rule 8 (instruction -> return ; .)
    }               reduce using rule 8 (instruction -> return ; .)
    ELSE            reduce using rule 8 (instruction -> return ; .)


state 24

    (9) instruction -> BREAK ; .

    {               reduce using rule 9 (instruction -> BREAK ; .)
    BREAK           reduce using rule 9 (instruction -> BREAK ; .)
    CONTINUE        reduce using rule 9 (instruction -> BREAK ; .)
    IF              reduce using rule 9 (instruction -> BREAK ; .)
    RETURN          reduce using rule 9 (instruction -> BREAK ; .)
    FOR             reduce using rule 9 (instruction -> BREAK ; .)
    WHILE           reduce using rule 9 (instruction -> BREAK ; .)
    PRINT           reduce using rule 9 (instruction -> BREAK ; .)
    ID              reduce using rule 9 (instruction -> BREAK ; .)
    $end            reduce using rule 9 (instruction -> BREAK ; .)
    }               reduce using rule 9 (instruction -> BREAK ; .)
    ELSE            reduce using rule 9 (instruction -> BREAK ; .)


state 25

    (10) instruction -> CONTINUE ; .

    {               reduce using rule 10 (instruction -> CONTINUE ; .)
    BREAK           reduce using rule 10 (instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 10 (instruction -> CONTINUE ; .)
    IF              reduce using rule 10 (instruction -> CONTINUE ; .)
    RETURN          reduce using rule 10 (instruction -> CONTINUE ; .)
    FOR             reduce using rule 10 (instruction -> CONTINUE ; .)
    WHILE           reduce using rule 10 (instruction -> CONTINUE ; .)
    PRINT           reduce using rule 10 (instruction -> CONTINUE ; .)
    ID              reduce using rule 10 (instruction -> CONTINUE ; .)
    $end            reduce using rule 10 (instruction -> CONTINUE ; .)
    }               reduce using rule 10 (instruction -> CONTINUE ; .)
    ELSE            reduce using rule 10 (instruction -> CONTINUE ; .)


state 26

    (13) instruction -> assignment ; .

    {               reduce using rule 13 (instruction -> assignment ; .)
    BREAK           reduce using rule 13 (instruction -> assignment ; .)
    CONTINUE        reduce using rule 13 (instruction -> assignment ; .)
    IF              reduce using rule 13 (instruction -> assignment ; .)
    RETURN          reduce using rule 13 (instruction -> assignment ; .)
    FOR             reduce using rule 13 (instruction -> assignment ; .)
    WHILE           reduce using rule 13 (instruction -> assignment ; .)
    PRINT           reduce using rule 13 (instruction -> assignment ; .)
    ID              reduce using rule 13 (instruction -> assignment ; .)
    $end            reduce using rule 13 (instruction -> assignment ; .)
    }               reduce using rule 13 (instruction -> assignment ; .)
    ELSE            reduce using rule 13 (instruction -> assignment ; .)


state 27

    (15) if -> IF ( . expression ) instruction
    (16) if -> IF ( . expression ) instruction ELSE instruction
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 53
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 28

    (19) return -> RETURN expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    ;               reduce using rule 19 (return -> RETURN expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 29

    (25) expression -> var .

    '               reduce using rule 25 (expression -> var .)
    +               reduce using rule 25 (expression -> var .)
    -               reduce using rule 25 (expression -> var .)
    *               reduce using rule 25 (expression -> var .)
    /               reduce using rule 25 (expression -> var .)
    DOTADD          reduce using rule 25 (expression -> var .)
    DOTSUB          reduce using rule 25 (expression -> var .)
    DOTMUL          reduce using rule 25 (expression -> var .)
    DOTDIV          reduce using rule 25 (expression -> var .)
    <               reduce using rule 25 (expression -> var .)
    >               reduce using rule 25 (expression -> var .)
    LESSEQ          reduce using rule 25 (expression -> var .)
    MOREEQ          reduce using rule 25 (expression -> var .)
    EQUAL           reduce using rule 25 (expression -> var .)
    NOTEQUAL        reduce using rule 25 (expression -> var .)
    ;               reduce using rule 25 (expression -> var .)
    ,               reduce using rule 25 (expression -> var .)
    )               reduce using rule 25 (expression -> var .)
    ]               reduce using rule 25 (expression -> var .)
    :               reduce using rule 25 (expression -> var .)
    {               reduce using rule 25 (expression -> var .)
    BREAK           reduce using rule 25 (expression -> var .)
    CONTINUE        reduce using rule 25 (expression -> var .)
    IF              reduce using rule 25 (expression -> var .)
    RETURN          reduce using rule 25 (expression -> var .)
    FOR             reduce using rule 25 (expression -> var .)
    WHILE           reduce using rule 25 (expression -> var .)
    PRINT           reduce using rule 25 (expression -> var .)
    ID              reduce using rule 25 (expression -> var .)


state 30

    (26) expression -> ( . expression )
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 69
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 31

    (27) expression -> INTNUM .

    '               reduce using rule 27 (expression -> INTNUM .)
    +               reduce using rule 27 (expression -> INTNUM .)
    -               reduce using rule 27 (expression -> INTNUM .)
    *               reduce using rule 27 (expression -> INTNUM .)
    /               reduce using rule 27 (expression -> INTNUM .)
    DOTADD          reduce using rule 27 (expression -> INTNUM .)
    DOTSUB          reduce using rule 27 (expression -> INTNUM .)
    DOTMUL          reduce using rule 27 (expression -> INTNUM .)
    DOTDIV          reduce using rule 27 (expression -> INTNUM .)
    <               reduce using rule 27 (expression -> INTNUM .)
    >               reduce using rule 27 (expression -> INTNUM .)
    LESSEQ          reduce using rule 27 (expression -> INTNUM .)
    MOREEQ          reduce using rule 27 (expression -> INTNUM .)
    EQUAL           reduce using rule 27 (expression -> INTNUM .)
    NOTEQUAL        reduce using rule 27 (expression -> INTNUM .)
    ;               reduce using rule 27 (expression -> INTNUM .)
    ,               reduce using rule 27 (expression -> INTNUM .)
    )               reduce using rule 27 (expression -> INTNUM .)
    ]               reduce using rule 27 (expression -> INTNUM .)
    :               reduce using rule 27 (expression -> INTNUM .)
    {               reduce using rule 27 (expression -> INTNUM .)
    BREAK           reduce using rule 27 (expression -> INTNUM .)
    CONTINUE        reduce using rule 27 (expression -> INTNUM .)
    IF              reduce using rule 27 (expression -> INTNUM .)
    RETURN          reduce using rule 27 (expression -> INTNUM .)
    FOR             reduce using rule 27 (expression -> INTNUM .)
    WHILE           reduce using rule 27 (expression -> INTNUM .)
    PRINT           reduce using rule 27 (expression -> INTNUM .)
    ID              reduce using rule 27 (expression -> INTNUM .)


state 32

    (28) expression -> FLOATNUM .

    '               reduce using rule 28 (expression -> FLOATNUM .)
    +               reduce using rule 28 (expression -> FLOATNUM .)
    -               reduce using rule 28 (expression -> FLOATNUM .)
    *               reduce using rule 28 (expression -> FLOATNUM .)
    /               reduce using rule 28 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 28 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 28 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 28 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 28 (expression -> FLOATNUM .)
    <               reduce using rule 28 (expression -> FLOATNUM .)
    >               reduce using rule 28 (expression -> FLOATNUM .)
    LESSEQ          reduce using rule 28 (expression -> FLOATNUM .)
    MOREEQ          reduce using rule 28 (expression -> FLOATNUM .)
    EQUAL           reduce using rule 28 (expression -> FLOATNUM .)
    NOTEQUAL        reduce using rule 28 (expression -> FLOATNUM .)
    ;               reduce using rule 28 (expression -> FLOATNUM .)
    ,               reduce using rule 28 (expression -> FLOATNUM .)
    )               reduce using rule 28 (expression -> FLOATNUM .)
    ]               reduce using rule 28 (expression -> FLOATNUM .)
    :               reduce using rule 28 (expression -> FLOATNUM .)
    {               reduce using rule 28 (expression -> FLOATNUM .)
    BREAK           reduce using rule 28 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 28 (expression -> FLOATNUM .)
    IF              reduce using rule 28 (expression -> FLOATNUM .)
    RETURN          reduce using rule 28 (expression -> FLOATNUM .)
    FOR             reduce using rule 28 (expression -> FLOATNUM .)
    WHILE           reduce using rule 28 (expression -> FLOATNUM .)
    PRINT           reduce using rule 28 (expression -> FLOATNUM .)
    ID              reduce using rule 28 (expression -> FLOATNUM .)


state 33

    (29) expression -> STRING .

    '               reduce using rule 29 (expression -> STRING .)
    +               reduce using rule 29 (expression -> STRING .)
    -               reduce using rule 29 (expression -> STRING .)
    *               reduce using rule 29 (expression -> STRING .)
    /               reduce using rule 29 (expression -> STRING .)
    DOTADD          reduce using rule 29 (expression -> STRING .)
    DOTSUB          reduce using rule 29 (expression -> STRING .)
    DOTMUL          reduce using rule 29 (expression -> STRING .)
    DOTDIV          reduce using rule 29 (expression -> STRING .)
    <               reduce using rule 29 (expression -> STRING .)
    >               reduce using rule 29 (expression -> STRING .)
    LESSEQ          reduce using rule 29 (expression -> STRING .)
    MOREEQ          reduce using rule 29 (expression -> STRING .)
    EQUAL           reduce using rule 29 (expression -> STRING .)
    NOTEQUAL        reduce using rule 29 (expression -> STRING .)
    ;               reduce using rule 29 (expression -> STRING .)
    ,               reduce using rule 29 (expression -> STRING .)
    )               reduce using rule 29 (expression -> STRING .)
    ]               reduce using rule 29 (expression -> STRING .)
    :               reduce using rule 29 (expression -> STRING .)
    {               reduce using rule 29 (expression -> STRING .)
    BREAK           reduce using rule 29 (expression -> STRING .)
    CONTINUE        reduce using rule 29 (expression -> STRING .)
    IF              reduce using rule 29 (expression -> STRING .)
    RETURN          reduce using rule 29 (expression -> STRING .)
    FOR             reduce using rule 29 (expression -> STRING .)
    WHILE           reduce using rule 29 (expression -> STRING .)
    PRINT           reduce using rule 29 (expression -> STRING .)
    ID              reduce using rule 29 (expression -> STRING .)


state 34

    (38) expression -> - . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 70
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 35

    (53) expression -> matrix .

    '               reduce using rule 53 (expression -> matrix .)
    +               reduce using rule 53 (expression -> matrix .)
    -               reduce using rule 53 (expression -> matrix .)
    *               reduce using rule 53 (expression -> matrix .)
    /               reduce using rule 53 (expression -> matrix .)
    DOTADD          reduce using rule 53 (expression -> matrix .)
    DOTSUB          reduce using rule 53 (expression -> matrix .)
    DOTMUL          reduce using rule 53 (expression -> matrix .)
    DOTDIV          reduce using rule 53 (expression -> matrix .)
    <               reduce using rule 53 (expression -> matrix .)
    >               reduce using rule 53 (expression -> matrix .)
    LESSEQ          reduce using rule 53 (expression -> matrix .)
    MOREEQ          reduce using rule 53 (expression -> matrix .)
    EQUAL           reduce using rule 53 (expression -> matrix .)
    NOTEQUAL        reduce using rule 53 (expression -> matrix .)
    ;               reduce using rule 53 (expression -> matrix .)
    ,               reduce using rule 53 (expression -> matrix .)
    )               reduce using rule 53 (expression -> matrix .)
    ]               reduce using rule 53 (expression -> matrix .)
    :               reduce using rule 53 (expression -> matrix .)
    {               reduce using rule 53 (expression -> matrix .)
    BREAK           reduce using rule 53 (expression -> matrix .)
    CONTINUE        reduce using rule 53 (expression -> matrix .)
    IF              reduce using rule 53 (expression -> matrix .)
    RETURN          reduce using rule 53 (expression -> matrix .)
    FOR             reduce using rule 53 (expression -> matrix .)
    WHILE           reduce using rule 53 (expression -> matrix .)
    PRINT           reduce using rule 53 (expression -> matrix .)
    ID              reduce using rule 53 (expression -> matrix .)


state 36

    (59) expression -> matrix_creation . ( expression )

    (               shift and go to state 71


state 37

    (54) matrix -> [ . matrix ]
    (55) matrix -> [ . sub_string_1 ]
    (56) matrix -> [ . sub_string_1 , matrix ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (57) sub_string_1 -> . sub_string_1 , expression
    (58) sub_string_1 -> . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    [               shift and go to state 37
    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    matrix                         shift and go to state 72
    sub_string_1                   shift and go to state 73
    expression                     shift and go to state 74
    var                            shift and go to state 29
    matrix_creation                shift and go to state 36

state 38

    (60) matrix_creation -> ZEROS .

    (               reduce using rule 60 (matrix_creation -> ZEROS .)


state 39

    (61) matrix_creation -> ONES .

    (               reduce using rule 61 (matrix_creation -> ONES .)


state 40

    (62) matrix_creation -> EYE .

    (               reduce using rule 62 (matrix_creation -> EYE .)


state 41

    (18) for_loop -> FOR ID . = expression : expression instruction

    =               shift and go to state 75


state 42

    (31) var -> ID [ . expression , expression ]
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 76
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 43

    (17) while_loop -> WHILE ( . expression ) instruction
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 77
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 44

    (32) assignment -> var = . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    var                            shift and go to state 29
    expression                     shift and go to state 78
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 45

    (33) assignment -> var ADDASSIGN . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    var                            shift and go to state 29
    expression                     shift and go to state 79
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 46

    (34) assignment -> var SUBASSIGN . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    var                            shift and go to state 29
    expression                     shift and go to state 80
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 47

    (35) assignment -> var MULASSIGN . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    var                            shift and go to state 29
    expression                     shift and go to state 81
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 48

    (36) assignment -> var DIVASSIGN . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    var                            shift and go to state 29
    expression                     shift and go to state 82
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 49

    (21) print -> PRINT ( . list_for_print ) ;
    (26) expression -> ( . expression )
    (23) list_for_print -> . expression , list_for_print
    (24) list_for_print -> . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    list_for_print                 shift and go to state 83
    expression                     shift and go to state 84
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 50

    (22) print -> PRINT list_for_print . ;

    ;               shift and go to state 85


state 51

    (23) list_for_print -> expression . , list_for_print
    (24) list_for_print -> expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    ,               shift and go to state 86
    ;               reduce using rule 24 (list_for_print -> expression .)
    )               reduce using rule 24 (list_for_print -> expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 52

    (6) instruction -> { instructions } .

    {               reduce using rule 6 (instruction -> { instructions } .)
    BREAK           reduce using rule 6 (instruction -> { instructions } .)
    CONTINUE        reduce using rule 6 (instruction -> { instructions } .)
    IF              reduce using rule 6 (instruction -> { instructions } .)
    RETURN          reduce using rule 6 (instruction -> { instructions } .)
    FOR             reduce using rule 6 (instruction -> { instructions } .)
    WHILE           reduce using rule 6 (instruction -> { instructions } .)
    PRINT           reduce using rule 6 (instruction -> { instructions } .)
    ID              reduce using rule 6 (instruction -> { instructions } .)
    $end            reduce using rule 6 (instruction -> { instructions } .)
    }               reduce using rule 6 (instruction -> { instructions } .)
    ELSE            reduce using rule 6 (instruction -> { instructions } .)


state 53

    (15) if -> IF ( expression . ) instruction
    (16) if -> IF ( expression . ) instruction ELSE instruction
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    )               shift and go to state 87
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 54

    (37) expression -> expression ' .

    '               reduce using rule 37 (expression -> expression ' .)
    +               reduce using rule 37 (expression -> expression ' .)
    -               reduce using rule 37 (expression -> expression ' .)
    *               reduce using rule 37 (expression -> expression ' .)
    /               reduce using rule 37 (expression -> expression ' .)
    DOTADD          reduce using rule 37 (expression -> expression ' .)
    DOTSUB          reduce using rule 37 (expression -> expression ' .)
    DOTMUL          reduce using rule 37 (expression -> expression ' .)
    DOTDIV          reduce using rule 37 (expression -> expression ' .)
    <               reduce using rule 37 (expression -> expression ' .)
    >               reduce using rule 37 (expression -> expression ' .)
    LESSEQ          reduce using rule 37 (expression -> expression ' .)
    MOREEQ          reduce using rule 37 (expression -> expression ' .)
    EQUAL           reduce using rule 37 (expression -> expression ' .)
    NOTEQUAL        reduce using rule 37 (expression -> expression ' .)
    ;               reduce using rule 37 (expression -> expression ' .)
    ,               reduce using rule 37 (expression -> expression ' .)
    )               reduce using rule 37 (expression -> expression ' .)
    ]               reduce using rule 37 (expression -> expression ' .)
    :               reduce using rule 37 (expression -> expression ' .)
    {               reduce using rule 37 (expression -> expression ' .)
    BREAK           reduce using rule 37 (expression -> expression ' .)
    CONTINUE        reduce using rule 37 (expression -> expression ' .)
    IF              reduce using rule 37 (expression -> expression ' .)
    RETURN          reduce using rule 37 (expression -> expression ' .)
    FOR             reduce using rule 37 (expression -> expression ' .)
    WHILE           reduce using rule 37 (expression -> expression ' .)
    PRINT           reduce using rule 37 (expression -> expression ' .)
    ID              reduce using rule 37 (expression -> expression ' .)


state 55

    (39) expression -> expression + . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 88
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 56

    (40) expression -> expression - . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 89
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 57

    (41) expression -> expression * . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 90
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 58

    (42) expression -> expression / . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 91
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 59

    (43) expression -> expression DOTADD . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 92
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 60

    (44) expression -> expression DOTSUB . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 93
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 61

    (45) expression -> expression DOTMUL . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 94
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 62

    (46) expression -> expression DOTDIV . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 95
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 63

    (47) expression -> expression < . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 96
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 64

    (48) expression -> expression > . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 97
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 65

    (49) expression -> expression LESSEQ . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 98
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 66

    (50) expression -> expression MOREEQ . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 99
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 67

    (51) expression -> expression EQUAL . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 100
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 68

    (52) expression -> expression NOTEQUAL . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 101
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 69

    (26) expression -> ( expression . )
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    )               shift and go to state 102
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 70

    (38) expression -> - expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    '               reduce using rule 38 (expression -> - expression .)
    +               reduce using rule 38 (expression -> - expression .)
    -               reduce using rule 38 (expression -> - expression .)
    *               reduce using rule 38 (expression -> - expression .)
    /               reduce using rule 38 (expression -> - expression .)
    DOTADD          reduce using rule 38 (expression -> - expression .)
    DOTSUB          reduce using rule 38 (expression -> - expression .)
    DOTMUL          reduce using rule 38 (expression -> - expression .)
    DOTDIV          reduce using rule 38 (expression -> - expression .)
    <               reduce using rule 38 (expression -> - expression .)
    >               reduce using rule 38 (expression -> - expression .)
    LESSEQ          reduce using rule 38 (expression -> - expression .)
    MOREEQ          reduce using rule 38 (expression -> - expression .)
    EQUAL           reduce using rule 38 (expression -> - expression .)
    NOTEQUAL        reduce using rule 38 (expression -> - expression .)
    ;               reduce using rule 38 (expression -> - expression .)
    ,               reduce using rule 38 (expression -> - expression .)
    )               reduce using rule 38 (expression -> - expression .)
    ]               reduce using rule 38 (expression -> - expression .)
    :               reduce using rule 38 (expression -> - expression .)
    {               reduce using rule 38 (expression -> - expression .)
    BREAK           reduce using rule 38 (expression -> - expression .)
    CONTINUE        reduce using rule 38 (expression -> - expression .)
    IF              reduce using rule 38 (expression -> - expression .)
    RETURN          reduce using rule 38 (expression -> - expression .)
    FOR             reduce using rule 38 (expression -> - expression .)
    WHILE           reduce using rule 38 (expression -> - expression .)
    PRINT           reduce using rule 38 (expression -> - expression .)
    ID              reduce using rule 38 (expression -> - expression .)

  ! '               [ shift and go to state 54 ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIV          [ shift and go to state 62 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 71

    (59) expression -> matrix_creation ( . expression )
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    matrix_creation                shift and go to state 36
    expression                     shift and go to state 103
    var                            shift and go to state 29
    matrix                         shift and go to state 35

state 72

    (54) matrix -> [ matrix . ]
    (53) expression -> matrix .

  ! shift/reduce conflict for ] resolved as shift
    ]               shift and go to state 104
    '               reduce using rule 53 (expression -> matrix .)
    +               reduce using rule 53 (expression -> matrix .)
    -               reduce using rule 53 (expression -> matrix .)
    *               reduce using rule 53 (expression -> matrix .)
    /               reduce using rule 53 (expression -> matrix .)
    DOTADD          reduce using rule 53 (expression -> matrix .)
    DOTSUB          reduce using rule 53 (expression -> matrix .)
    DOTMUL          reduce using rule 53 (expression -> matrix .)
    DOTDIV          reduce using rule 53 (expression -> matrix .)
    <               reduce using rule 53 (expression -> matrix .)
    >               reduce using rule 53 (expression -> matrix .)
    LESSEQ          reduce using rule 53 (expression -> matrix .)
    MOREEQ          reduce using rule 53 (expression -> matrix .)
    EQUAL           reduce using rule 53 (expression -> matrix .)
    NOTEQUAL        reduce using rule 53 (expression -> matrix .)
    ,               reduce using rule 53 (expression -> matrix .)

  ! ]               [ reduce using rule 53 (expression -> matrix .) ]


state 73

    (55) matrix -> [ sub_string_1 . ]
    (56) matrix -> [ sub_string_1 . , matrix ]
    (57) sub_string_1 -> sub_string_1 . , expression

    ]               shift and go to state 105
    ,               shift and go to state 106


state 74

    (58) sub_string_1 -> expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    ]               reduce using rule 58 (sub_string_1 -> expression .)
    ,               reduce using rule 58 (sub_string_1 -> expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 75

    (18) for_loop -> FOR ID = . expression : expression instruction
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 107
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 76

    (31) var -> ID [ expression . , expression ]
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    ,               shift and go to state 108
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 77

    (17) while_loop -> WHILE ( expression . ) instruction
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    )               shift and go to state 109
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 78

    (32) assignment -> var = expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    ;               reduce using rule 32 (assignment -> var = expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 79

    (33) assignment -> var ADDASSIGN expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    ;               reduce using rule 33 (assignment -> var ADDASSIGN expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 80

    (34) assignment -> var SUBASSIGN expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    ;               reduce using rule 34 (assignment -> var SUBASSIGN expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 81

    (35) assignment -> var MULASSIGN expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    ;               reduce using rule 35 (assignment -> var MULASSIGN expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 82

    (36) assignment -> var DIVASSIGN expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    ;               reduce using rule 36 (assignment -> var DIVASSIGN expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 83

    (21) print -> PRINT ( list_for_print . ) ;

    )               shift and go to state 110


state 84

    (26) expression -> ( expression . )
    (23) list_for_print -> expression . , list_for_print
    (24) list_for_print -> expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 102
    ,               shift and go to state 86
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68

  ! )               [ reduce using rule 24 (list_for_print -> expression .) ]


state 85

    (22) print -> PRINT list_for_print ; .

    {               reduce using rule 22 (print -> PRINT list_for_print ; .)
    BREAK           reduce using rule 22 (print -> PRINT list_for_print ; .)
    CONTINUE        reduce using rule 22 (print -> PRINT list_for_print ; .)
    IF              reduce using rule 22 (print -> PRINT list_for_print ; .)
    RETURN          reduce using rule 22 (print -> PRINT list_for_print ; .)
    FOR             reduce using rule 22 (print -> PRINT list_for_print ; .)
    WHILE           reduce using rule 22 (print -> PRINT list_for_print ; .)
    PRINT           reduce using rule 22 (print -> PRINT list_for_print ; .)
    ID              reduce using rule 22 (print -> PRINT list_for_print ; .)
    $end            reduce using rule 22 (print -> PRINT list_for_print ; .)
    }               reduce using rule 22 (print -> PRINT list_for_print ; .)
    ELSE            reduce using rule 22 (print -> PRINT list_for_print ; .)


state 86

    (23) list_for_print -> expression , . list_for_print
    (23) list_for_print -> . expression , list_for_print
    (24) list_for_print -> . expression
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 51
    list_for_print                 shift and go to state 111
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 87

    (15) if -> IF ( expression ) . instruction
    (16) if -> IF ( expression ) . instruction ELSE instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction
    (16) if -> . IF ( expression ) instruction ELSE instruction
    (19) return -> . RETURN expression
    (20) return -> . RETURN
    (18) for_loop -> . FOR ID = expression : expression instruction
    (17) while_loop -> . WHILE ( expression ) instruction
    (32) assignment -> . var = expression
    (33) assignment -> . var ADDASSIGN expression
    (34) assignment -> . var SUBASSIGN expression
    (35) assignment -> . var MULASSIGN expression
    (36) assignment -> . var DIVASSIGN expression
    (21) print -> . PRINT ( list_for_print ) ;
    (22) print -> . PRINT list_for_print ;
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]

    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 112
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 88

    (39) expression -> expression + expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    +               reduce using rule 39 (expression -> expression + expression .)
    -               reduce using rule 39 (expression -> expression + expression .)
    DOTADD          reduce using rule 39 (expression -> expression + expression .)
    DOTSUB          reduce using rule 39 (expression -> expression + expression .)
    <               reduce using rule 39 (expression -> expression + expression .)
    >               reduce using rule 39 (expression -> expression + expression .)
    LESSEQ          reduce using rule 39 (expression -> expression + expression .)
    MOREEQ          reduce using rule 39 (expression -> expression + expression .)
    EQUAL           reduce using rule 39 (expression -> expression + expression .)
    NOTEQUAL        reduce using rule 39 (expression -> expression + expression .)
    ;               reduce using rule 39 (expression -> expression + expression .)
    ,               reduce using rule 39 (expression -> expression + expression .)
    )               reduce using rule 39 (expression -> expression + expression .)
    ]               reduce using rule 39 (expression -> expression + expression .)
    :               reduce using rule 39 (expression -> expression + expression .)
    {               reduce using rule 39 (expression -> expression + expression .)
    BREAK           reduce using rule 39 (expression -> expression + expression .)
    CONTINUE        reduce using rule 39 (expression -> expression + expression .)
    IF              reduce using rule 39 (expression -> expression + expression .)
    RETURN          reduce using rule 39 (expression -> expression + expression .)
    FOR             reduce using rule 39 (expression -> expression + expression .)
    WHILE           reduce using rule 39 (expression -> expression + expression .)
    PRINT           reduce using rule 39 (expression -> expression + expression .)
    ID              reduce using rule 39 (expression -> expression + expression .)
    '               shift and go to state 54
    *               shift and go to state 57
    /               shift and go to state 58
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62

  ! '               [ reduce using rule 39 (expression -> expression + expression .) ]
  ! *               [ reduce using rule 39 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 39 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 39 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 39 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 89

    (40) expression -> expression - expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    +               reduce using rule 40 (expression -> expression - expression .)
    -               reduce using rule 40 (expression -> expression - expression .)
    DOTADD          reduce using rule 40 (expression -> expression - expression .)
    DOTSUB          reduce using rule 40 (expression -> expression - expression .)
    <               reduce using rule 40 (expression -> expression - expression .)
    >               reduce using rule 40 (expression -> expression - expression .)
    LESSEQ          reduce using rule 40 (expression -> expression - expression .)
    MOREEQ          reduce using rule 40 (expression -> expression - expression .)
    EQUAL           reduce using rule 40 (expression -> expression - expression .)
    NOTEQUAL        reduce using rule 40 (expression -> expression - expression .)
    ;               reduce using rule 40 (expression -> expression - expression .)
    ,               reduce using rule 40 (expression -> expression - expression .)
    )               reduce using rule 40 (expression -> expression - expression .)
    ]               reduce using rule 40 (expression -> expression - expression .)
    :               reduce using rule 40 (expression -> expression - expression .)
    {               reduce using rule 40 (expression -> expression - expression .)
    BREAK           reduce using rule 40 (expression -> expression - expression .)
    CONTINUE        reduce using rule 40 (expression -> expression - expression .)
    IF              reduce using rule 40 (expression -> expression - expression .)
    RETURN          reduce using rule 40 (expression -> expression - expression .)
    FOR             reduce using rule 40 (expression -> expression - expression .)
    WHILE           reduce using rule 40 (expression -> expression - expression .)
    PRINT           reduce using rule 40 (expression -> expression - expression .)
    ID              reduce using rule 40 (expression -> expression - expression .)
    '               shift and go to state 54
    *               shift and go to state 57
    /               shift and go to state 58
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62

  ! '               [ reduce using rule 40 (expression -> expression - expression .) ]
  ! *               [ reduce using rule 40 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 40 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 40 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 40 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 90

    (41) expression -> expression * expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    +               reduce using rule 41 (expression -> expression * expression .)
    -               reduce using rule 41 (expression -> expression * expression .)
    *               reduce using rule 41 (expression -> expression * expression .)
    /               reduce using rule 41 (expression -> expression * expression .)
    DOTADD          reduce using rule 41 (expression -> expression * expression .)
    DOTSUB          reduce using rule 41 (expression -> expression * expression .)
    DOTMUL          reduce using rule 41 (expression -> expression * expression .)
    DOTDIV          reduce using rule 41 (expression -> expression * expression .)
    <               reduce using rule 41 (expression -> expression * expression .)
    >               reduce using rule 41 (expression -> expression * expression .)
    LESSEQ          reduce using rule 41 (expression -> expression * expression .)
    MOREEQ          reduce using rule 41 (expression -> expression * expression .)
    EQUAL           reduce using rule 41 (expression -> expression * expression .)
    NOTEQUAL        reduce using rule 41 (expression -> expression * expression .)
    ;               reduce using rule 41 (expression -> expression * expression .)
    ,               reduce using rule 41 (expression -> expression * expression .)
    )               reduce using rule 41 (expression -> expression * expression .)
    ]               reduce using rule 41 (expression -> expression * expression .)
    :               reduce using rule 41 (expression -> expression * expression .)
    {               reduce using rule 41 (expression -> expression * expression .)
    BREAK           reduce using rule 41 (expression -> expression * expression .)
    CONTINUE        reduce using rule 41 (expression -> expression * expression .)
    IF              reduce using rule 41 (expression -> expression * expression .)
    RETURN          reduce using rule 41 (expression -> expression * expression .)
    FOR             reduce using rule 41 (expression -> expression * expression .)
    WHILE           reduce using rule 41 (expression -> expression * expression .)
    PRINT           reduce using rule 41 (expression -> expression * expression .)
    ID              reduce using rule 41 (expression -> expression * expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 41 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIV          [ shift and go to state 62 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 91

    (42) expression -> expression / expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    +               reduce using rule 42 (expression -> expression / expression .)
    -               reduce using rule 42 (expression -> expression / expression .)
    *               reduce using rule 42 (expression -> expression / expression .)
    /               reduce using rule 42 (expression -> expression / expression .)
    DOTADD          reduce using rule 42 (expression -> expression / expression .)
    DOTSUB          reduce using rule 42 (expression -> expression / expression .)
    DOTMUL          reduce using rule 42 (expression -> expression / expression .)
    DOTDIV          reduce using rule 42 (expression -> expression / expression .)
    <               reduce using rule 42 (expression -> expression / expression .)
    >               reduce using rule 42 (expression -> expression / expression .)
    LESSEQ          reduce using rule 42 (expression -> expression / expression .)
    MOREEQ          reduce using rule 42 (expression -> expression / expression .)
    EQUAL           reduce using rule 42 (expression -> expression / expression .)
    NOTEQUAL        reduce using rule 42 (expression -> expression / expression .)
    ;               reduce using rule 42 (expression -> expression / expression .)
    ,               reduce using rule 42 (expression -> expression / expression .)
    )               reduce using rule 42 (expression -> expression / expression .)
    ]               reduce using rule 42 (expression -> expression / expression .)
    :               reduce using rule 42 (expression -> expression / expression .)
    {               reduce using rule 42 (expression -> expression / expression .)
    BREAK           reduce using rule 42 (expression -> expression / expression .)
    CONTINUE        reduce using rule 42 (expression -> expression / expression .)
    IF              reduce using rule 42 (expression -> expression / expression .)
    RETURN          reduce using rule 42 (expression -> expression / expression .)
    FOR             reduce using rule 42 (expression -> expression / expression .)
    WHILE           reduce using rule 42 (expression -> expression / expression .)
    PRINT           reduce using rule 42 (expression -> expression / expression .)
    ID              reduce using rule 42 (expression -> expression / expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 42 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIV          [ shift and go to state 62 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 92

    (43) expression -> expression DOTADD expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    +               reduce using rule 43 (expression -> expression DOTADD expression .)
    -               reduce using rule 43 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 43 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 43 (expression -> expression DOTADD expression .)
    <               reduce using rule 43 (expression -> expression DOTADD expression .)
    >               reduce using rule 43 (expression -> expression DOTADD expression .)
    LESSEQ          reduce using rule 43 (expression -> expression DOTADD expression .)
    MOREEQ          reduce using rule 43 (expression -> expression DOTADD expression .)
    EQUAL           reduce using rule 43 (expression -> expression DOTADD expression .)
    NOTEQUAL        reduce using rule 43 (expression -> expression DOTADD expression .)
    ;               reduce using rule 43 (expression -> expression DOTADD expression .)
    ,               reduce using rule 43 (expression -> expression DOTADD expression .)
    )               reduce using rule 43 (expression -> expression DOTADD expression .)
    ]               reduce using rule 43 (expression -> expression DOTADD expression .)
    :               reduce using rule 43 (expression -> expression DOTADD expression .)
    {               reduce using rule 43 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 43 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 43 (expression -> expression DOTADD expression .)
    IF              reduce using rule 43 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 43 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 43 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 43 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 43 (expression -> expression DOTADD expression .)
    ID              reduce using rule 43 (expression -> expression DOTADD expression .)
    '               shift and go to state 54
    *               shift and go to state 57
    /               shift and go to state 58
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62

  ! '               [ reduce using rule 43 (expression -> expression DOTADD expression .) ]
  ! *               [ reduce using rule 43 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 43 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 43 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 43 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 93

    (44) expression -> expression DOTSUB expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    +               reduce using rule 44 (expression -> expression DOTSUB expression .)
    -               reduce using rule 44 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 44 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 44 (expression -> expression DOTSUB expression .)
    <               reduce using rule 44 (expression -> expression DOTSUB expression .)
    >               reduce using rule 44 (expression -> expression DOTSUB expression .)
    LESSEQ          reduce using rule 44 (expression -> expression DOTSUB expression .)
    MOREEQ          reduce using rule 44 (expression -> expression DOTSUB expression .)
    EQUAL           reduce using rule 44 (expression -> expression DOTSUB expression .)
    NOTEQUAL        reduce using rule 44 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 44 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 44 (expression -> expression DOTSUB expression .)
    )               reduce using rule 44 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 44 (expression -> expression DOTSUB expression .)
    :               reduce using rule 44 (expression -> expression DOTSUB expression .)
    {               reduce using rule 44 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 44 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 44 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 44 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 44 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 44 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 44 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 44 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 44 (expression -> expression DOTSUB expression .)
    '               shift and go to state 54
    *               shift and go to state 57
    /               shift and go to state 58
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62

  ! '               [ reduce using rule 44 (expression -> expression DOTSUB expression .) ]
  ! *               [ reduce using rule 44 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 44 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 44 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 44 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 94

    (45) expression -> expression DOTMUL expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    +               reduce using rule 45 (expression -> expression DOTMUL expression .)
    -               reduce using rule 45 (expression -> expression DOTMUL expression .)
    *               reduce using rule 45 (expression -> expression DOTMUL expression .)
    /               reduce using rule 45 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 45 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 45 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 45 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 45 (expression -> expression DOTMUL expression .)
    <               reduce using rule 45 (expression -> expression DOTMUL expression .)
    >               reduce using rule 45 (expression -> expression DOTMUL expression .)
    LESSEQ          reduce using rule 45 (expression -> expression DOTMUL expression .)
    MOREEQ          reduce using rule 45 (expression -> expression DOTMUL expression .)
    EQUAL           reduce using rule 45 (expression -> expression DOTMUL expression .)
    NOTEQUAL        reduce using rule 45 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 45 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 45 (expression -> expression DOTMUL expression .)
    )               reduce using rule 45 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 45 (expression -> expression DOTMUL expression .)
    :               reduce using rule 45 (expression -> expression DOTMUL expression .)
    {               reduce using rule 45 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 45 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 45 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 45 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 45 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 45 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 45 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 45 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 45 (expression -> expression DOTMUL expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 45 (expression -> expression DOTMUL expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIV          [ shift and go to state 62 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 95

    (46) expression -> expression DOTDIV expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    +               reduce using rule 46 (expression -> expression DOTDIV expression .)
    -               reduce using rule 46 (expression -> expression DOTDIV expression .)
    *               reduce using rule 46 (expression -> expression DOTDIV expression .)
    /               reduce using rule 46 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 46 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 46 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 46 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 46 (expression -> expression DOTDIV expression .)
    <               reduce using rule 46 (expression -> expression DOTDIV expression .)
    >               reduce using rule 46 (expression -> expression DOTDIV expression .)
    LESSEQ          reduce using rule 46 (expression -> expression DOTDIV expression .)
    MOREEQ          reduce using rule 46 (expression -> expression DOTDIV expression .)
    EQUAL           reduce using rule 46 (expression -> expression DOTDIV expression .)
    NOTEQUAL        reduce using rule 46 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 46 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 46 (expression -> expression DOTDIV expression .)
    )               reduce using rule 46 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 46 (expression -> expression DOTDIV expression .)
    :               reduce using rule 46 (expression -> expression DOTDIV expression .)
    {               reduce using rule 46 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 46 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 46 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 46 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 46 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 46 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 46 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 46 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 46 (expression -> expression DOTDIV expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 46 (expression -> expression DOTDIV expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIV          [ shift and go to state 62 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 96

    (47) expression -> expression < expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    <               reduce using rule 47 (expression -> expression < expression .)
    >               reduce using rule 47 (expression -> expression < expression .)
    LESSEQ          reduce using rule 47 (expression -> expression < expression .)
    MOREEQ          reduce using rule 47 (expression -> expression < expression .)
    EQUAL           reduce using rule 47 (expression -> expression < expression .)
    NOTEQUAL        reduce using rule 47 (expression -> expression < expression .)
    ;               reduce using rule 47 (expression -> expression < expression .)
    ,               reduce using rule 47 (expression -> expression < expression .)
    )               reduce using rule 47 (expression -> expression < expression .)
    ]               reduce using rule 47 (expression -> expression < expression .)
    :               reduce using rule 47 (expression -> expression < expression .)
    {               reduce using rule 47 (expression -> expression < expression .)
    BREAK           reduce using rule 47 (expression -> expression < expression .)
    CONTINUE        reduce using rule 47 (expression -> expression < expression .)
    IF              reduce using rule 47 (expression -> expression < expression .)
    RETURN          reduce using rule 47 (expression -> expression < expression .)
    FOR             reduce using rule 47 (expression -> expression < expression .)
    WHILE           reduce using rule 47 (expression -> expression < expression .)
    PRINT           reduce using rule 47 (expression -> expression < expression .)
    ID              reduce using rule 47 (expression -> expression < expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62

  ! '               [ reduce using rule 47 (expression -> expression < expression .) ]
  ! +               [ reduce using rule 47 (expression -> expression < expression .) ]
  ! -               [ reduce using rule 47 (expression -> expression < expression .) ]
  ! *               [ reduce using rule 47 (expression -> expression < expression .) ]
  ! /               [ reduce using rule 47 (expression -> expression < expression .) ]
  ! DOTADD          [ reduce using rule 47 (expression -> expression < expression .) ]
  ! DOTSUB          [ reduce using rule 47 (expression -> expression < expression .) ]
  ! DOTMUL          [ reduce using rule 47 (expression -> expression < expression .) ]
  ! DOTDIV          [ reduce using rule 47 (expression -> expression < expression .) ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 97

    (48) expression -> expression > expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    <               reduce using rule 48 (expression -> expression > expression .)
    >               reduce using rule 48 (expression -> expression > expression .)
    LESSEQ          reduce using rule 48 (expression -> expression > expression .)
    MOREEQ          reduce using rule 48 (expression -> expression > expression .)
    EQUAL           reduce using rule 48 (expression -> expression > expression .)
    NOTEQUAL        reduce using rule 48 (expression -> expression > expression .)
    ;               reduce using rule 48 (expression -> expression > expression .)
    ,               reduce using rule 48 (expression -> expression > expression .)
    )               reduce using rule 48 (expression -> expression > expression .)
    ]               reduce using rule 48 (expression -> expression > expression .)
    :               reduce using rule 48 (expression -> expression > expression .)
    {               reduce using rule 48 (expression -> expression > expression .)
    BREAK           reduce using rule 48 (expression -> expression > expression .)
    CONTINUE        reduce using rule 48 (expression -> expression > expression .)
    IF              reduce using rule 48 (expression -> expression > expression .)
    RETURN          reduce using rule 48 (expression -> expression > expression .)
    FOR             reduce using rule 48 (expression -> expression > expression .)
    WHILE           reduce using rule 48 (expression -> expression > expression .)
    PRINT           reduce using rule 48 (expression -> expression > expression .)
    ID              reduce using rule 48 (expression -> expression > expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62

  ! '               [ reduce using rule 48 (expression -> expression > expression .) ]
  ! +               [ reduce using rule 48 (expression -> expression > expression .) ]
  ! -               [ reduce using rule 48 (expression -> expression > expression .) ]
  ! *               [ reduce using rule 48 (expression -> expression > expression .) ]
  ! /               [ reduce using rule 48 (expression -> expression > expression .) ]
  ! DOTADD          [ reduce using rule 48 (expression -> expression > expression .) ]
  ! DOTSUB          [ reduce using rule 48 (expression -> expression > expression .) ]
  ! DOTMUL          [ reduce using rule 48 (expression -> expression > expression .) ]
  ! DOTDIV          [ reduce using rule 48 (expression -> expression > expression .) ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 98

    (49) expression -> expression LESSEQ expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    <               reduce using rule 49 (expression -> expression LESSEQ expression .)
    >               reduce using rule 49 (expression -> expression LESSEQ expression .)
    LESSEQ          reduce using rule 49 (expression -> expression LESSEQ expression .)
    MOREEQ          reduce using rule 49 (expression -> expression LESSEQ expression .)
    EQUAL           reduce using rule 49 (expression -> expression LESSEQ expression .)
    NOTEQUAL        reduce using rule 49 (expression -> expression LESSEQ expression .)
    ;               reduce using rule 49 (expression -> expression LESSEQ expression .)
    ,               reduce using rule 49 (expression -> expression LESSEQ expression .)
    )               reduce using rule 49 (expression -> expression LESSEQ expression .)
    ]               reduce using rule 49 (expression -> expression LESSEQ expression .)
    :               reduce using rule 49 (expression -> expression LESSEQ expression .)
    {               reduce using rule 49 (expression -> expression LESSEQ expression .)
    BREAK           reduce using rule 49 (expression -> expression LESSEQ expression .)
    CONTINUE        reduce using rule 49 (expression -> expression LESSEQ expression .)
    IF              reduce using rule 49 (expression -> expression LESSEQ expression .)
    RETURN          reduce using rule 49 (expression -> expression LESSEQ expression .)
    FOR             reduce using rule 49 (expression -> expression LESSEQ expression .)
    WHILE           reduce using rule 49 (expression -> expression LESSEQ expression .)
    PRINT           reduce using rule 49 (expression -> expression LESSEQ expression .)
    ID              reduce using rule 49 (expression -> expression LESSEQ expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62

  ! '               [ reduce using rule 49 (expression -> expression LESSEQ expression .) ]
  ! +               [ reduce using rule 49 (expression -> expression LESSEQ expression .) ]
  ! -               [ reduce using rule 49 (expression -> expression LESSEQ expression .) ]
  ! *               [ reduce using rule 49 (expression -> expression LESSEQ expression .) ]
  ! /               [ reduce using rule 49 (expression -> expression LESSEQ expression .) ]
  ! DOTADD          [ reduce using rule 49 (expression -> expression LESSEQ expression .) ]
  ! DOTSUB          [ reduce using rule 49 (expression -> expression LESSEQ expression .) ]
  ! DOTMUL          [ reduce using rule 49 (expression -> expression LESSEQ expression .) ]
  ! DOTDIV          [ reduce using rule 49 (expression -> expression LESSEQ expression .) ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 99

    (50) expression -> expression MOREEQ expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    <               reduce using rule 50 (expression -> expression MOREEQ expression .)
    >               reduce using rule 50 (expression -> expression MOREEQ expression .)
    LESSEQ          reduce using rule 50 (expression -> expression MOREEQ expression .)
    MOREEQ          reduce using rule 50 (expression -> expression MOREEQ expression .)
    EQUAL           reduce using rule 50 (expression -> expression MOREEQ expression .)
    NOTEQUAL        reduce using rule 50 (expression -> expression MOREEQ expression .)
    ;               reduce using rule 50 (expression -> expression MOREEQ expression .)
    ,               reduce using rule 50 (expression -> expression MOREEQ expression .)
    )               reduce using rule 50 (expression -> expression MOREEQ expression .)
    ]               reduce using rule 50 (expression -> expression MOREEQ expression .)
    :               reduce using rule 50 (expression -> expression MOREEQ expression .)
    {               reduce using rule 50 (expression -> expression MOREEQ expression .)
    BREAK           reduce using rule 50 (expression -> expression MOREEQ expression .)
    CONTINUE        reduce using rule 50 (expression -> expression MOREEQ expression .)
    IF              reduce using rule 50 (expression -> expression MOREEQ expression .)
    RETURN          reduce using rule 50 (expression -> expression MOREEQ expression .)
    FOR             reduce using rule 50 (expression -> expression MOREEQ expression .)
    WHILE           reduce using rule 50 (expression -> expression MOREEQ expression .)
    PRINT           reduce using rule 50 (expression -> expression MOREEQ expression .)
    ID              reduce using rule 50 (expression -> expression MOREEQ expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62

  ! '               [ reduce using rule 50 (expression -> expression MOREEQ expression .) ]
  ! +               [ reduce using rule 50 (expression -> expression MOREEQ expression .) ]
  ! -               [ reduce using rule 50 (expression -> expression MOREEQ expression .) ]
  ! *               [ reduce using rule 50 (expression -> expression MOREEQ expression .) ]
  ! /               [ reduce using rule 50 (expression -> expression MOREEQ expression .) ]
  ! DOTADD          [ reduce using rule 50 (expression -> expression MOREEQ expression .) ]
  ! DOTSUB          [ reduce using rule 50 (expression -> expression MOREEQ expression .) ]
  ! DOTMUL          [ reduce using rule 50 (expression -> expression MOREEQ expression .) ]
  ! DOTDIV          [ reduce using rule 50 (expression -> expression MOREEQ expression .) ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 100

    (51) expression -> expression EQUAL expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    <               reduce using rule 51 (expression -> expression EQUAL expression .)
    >               reduce using rule 51 (expression -> expression EQUAL expression .)
    LESSEQ          reduce using rule 51 (expression -> expression EQUAL expression .)
    MOREEQ          reduce using rule 51 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 51 (expression -> expression EQUAL expression .)
    NOTEQUAL        reduce using rule 51 (expression -> expression EQUAL expression .)
    ;               reduce using rule 51 (expression -> expression EQUAL expression .)
    ,               reduce using rule 51 (expression -> expression EQUAL expression .)
    )               reduce using rule 51 (expression -> expression EQUAL expression .)
    ]               reduce using rule 51 (expression -> expression EQUAL expression .)
    :               reduce using rule 51 (expression -> expression EQUAL expression .)
    {               reduce using rule 51 (expression -> expression EQUAL expression .)
    BREAK           reduce using rule 51 (expression -> expression EQUAL expression .)
    CONTINUE        reduce using rule 51 (expression -> expression EQUAL expression .)
    IF              reduce using rule 51 (expression -> expression EQUAL expression .)
    RETURN          reduce using rule 51 (expression -> expression EQUAL expression .)
    FOR             reduce using rule 51 (expression -> expression EQUAL expression .)
    WHILE           reduce using rule 51 (expression -> expression EQUAL expression .)
    PRINT           reduce using rule 51 (expression -> expression EQUAL expression .)
    ID              reduce using rule 51 (expression -> expression EQUAL expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62

  ! '               [ reduce using rule 51 (expression -> expression EQUAL expression .) ]
  ! +               [ reduce using rule 51 (expression -> expression EQUAL expression .) ]
  ! -               [ reduce using rule 51 (expression -> expression EQUAL expression .) ]
  ! *               [ reduce using rule 51 (expression -> expression EQUAL expression .) ]
  ! /               [ reduce using rule 51 (expression -> expression EQUAL expression .) ]
  ! DOTADD          [ reduce using rule 51 (expression -> expression EQUAL expression .) ]
  ! DOTSUB          [ reduce using rule 51 (expression -> expression EQUAL expression .) ]
  ! DOTMUL          [ reduce using rule 51 (expression -> expression EQUAL expression .) ]
  ! DOTDIV          [ reduce using rule 51 (expression -> expression EQUAL expression .) ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 101

    (52) expression -> expression NOTEQUAL expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    <               reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    >               reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    LESSEQ          reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    MOREEQ          reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    EQUAL           reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    NOTEQUAL        reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    ;               reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    ,               reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    )               reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    ]               reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    :               reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    {               reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    BREAK           reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    CONTINUE        reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    IF              reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    RETURN          reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    FOR             reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    ID              reduce using rule 52 (expression -> expression NOTEQUAL expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62

  ! '               [ reduce using rule 52 (expression -> expression NOTEQUAL expression .) ]
  ! +               [ reduce using rule 52 (expression -> expression NOTEQUAL expression .) ]
  ! -               [ reduce using rule 52 (expression -> expression NOTEQUAL expression .) ]
  ! *               [ reduce using rule 52 (expression -> expression NOTEQUAL expression .) ]
  ! /               [ reduce using rule 52 (expression -> expression NOTEQUAL expression .) ]
  ! DOTADD          [ reduce using rule 52 (expression -> expression NOTEQUAL expression .) ]
  ! DOTSUB          [ reduce using rule 52 (expression -> expression NOTEQUAL expression .) ]
  ! DOTMUL          [ reduce using rule 52 (expression -> expression NOTEQUAL expression .) ]
  ! DOTDIV          [ reduce using rule 52 (expression -> expression NOTEQUAL expression .) ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 102

    (26) expression -> ( expression ) .

    '               reduce using rule 26 (expression -> ( expression ) .)
    +               reduce using rule 26 (expression -> ( expression ) .)
    -               reduce using rule 26 (expression -> ( expression ) .)
    *               reduce using rule 26 (expression -> ( expression ) .)
    /               reduce using rule 26 (expression -> ( expression ) .)
    DOTADD          reduce using rule 26 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 26 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 26 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 26 (expression -> ( expression ) .)
    <               reduce using rule 26 (expression -> ( expression ) .)
    >               reduce using rule 26 (expression -> ( expression ) .)
    LESSEQ          reduce using rule 26 (expression -> ( expression ) .)
    MOREEQ          reduce using rule 26 (expression -> ( expression ) .)
    EQUAL           reduce using rule 26 (expression -> ( expression ) .)
    NOTEQUAL        reduce using rule 26 (expression -> ( expression ) .)
    ;               reduce using rule 26 (expression -> ( expression ) .)
    ,               reduce using rule 26 (expression -> ( expression ) .)
    )               reduce using rule 26 (expression -> ( expression ) .)
    ]               reduce using rule 26 (expression -> ( expression ) .)
    :               reduce using rule 26 (expression -> ( expression ) .)
    {               reduce using rule 26 (expression -> ( expression ) .)
    BREAK           reduce using rule 26 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 26 (expression -> ( expression ) .)
    IF              reduce using rule 26 (expression -> ( expression ) .)
    RETURN          reduce using rule 26 (expression -> ( expression ) .)
    FOR             reduce using rule 26 (expression -> ( expression ) .)
    WHILE           reduce using rule 26 (expression -> ( expression ) .)
    PRINT           reduce using rule 26 (expression -> ( expression ) .)
    ID              reduce using rule 26 (expression -> ( expression ) .)


state 103

    (59) expression -> matrix_creation ( expression . )
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    )               shift and go to state 113
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 104

    (54) matrix -> [ matrix ] .

    '               reduce using rule 54 (matrix -> [ matrix ] .)
    +               reduce using rule 54 (matrix -> [ matrix ] .)
    -               reduce using rule 54 (matrix -> [ matrix ] .)
    *               reduce using rule 54 (matrix -> [ matrix ] .)
    /               reduce using rule 54 (matrix -> [ matrix ] .)
    DOTADD          reduce using rule 54 (matrix -> [ matrix ] .)
    DOTSUB          reduce using rule 54 (matrix -> [ matrix ] .)
    DOTMUL          reduce using rule 54 (matrix -> [ matrix ] .)
    DOTDIV          reduce using rule 54 (matrix -> [ matrix ] .)
    <               reduce using rule 54 (matrix -> [ matrix ] .)
    >               reduce using rule 54 (matrix -> [ matrix ] .)
    LESSEQ          reduce using rule 54 (matrix -> [ matrix ] .)
    MOREEQ          reduce using rule 54 (matrix -> [ matrix ] .)
    EQUAL           reduce using rule 54 (matrix -> [ matrix ] .)
    NOTEQUAL        reduce using rule 54 (matrix -> [ matrix ] .)
    ;               reduce using rule 54 (matrix -> [ matrix ] .)
    ,               reduce using rule 54 (matrix -> [ matrix ] .)
    )               reduce using rule 54 (matrix -> [ matrix ] .)
    ]               reduce using rule 54 (matrix -> [ matrix ] .)
    :               reduce using rule 54 (matrix -> [ matrix ] .)
    {               reduce using rule 54 (matrix -> [ matrix ] .)
    BREAK           reduce using rule 54 (matrix -> [ matrix ] .)
    CONTINUE        reduce using rule 54 (matrix -> [ matrix ] .)
    IF              reduce using rule 54 (matrix -> [ matrix ] .)
    RETURN          reduce using rule 54 (matrix -> [ matrix ] .)
    FOR             reduce using rule 54 (matrix -> [ matrix ] .)
    WHILE           reduce using rule 54 (matrix -> [ matrix ] .)
    PRINT           reduce using rule 54 (matrix -> [ matrix ] .)
    ID              reduce using rule 54 (matrix -> [ matrix ] .)


state 105

    (55) matrix -> [ sub_string_1 ] .

    '               reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    +               reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    -               reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    *               reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    /               reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    DOTADD          reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    DOTSUB          reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    DOTMUL          reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    DOTDIV          reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    <               reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    >               reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    LESSEQ          reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    MOREEQ          reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    EQUAL           reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    NOTEQUAL        reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    ;               reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    ,               reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    )               reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    ]               reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    :               reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    {               reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    BREAK           reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    CONTINUE        reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    IF              reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    RETURN          reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    FOR             reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    WHILE           reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    PRINT           reduce using rule 55 (matrix -> [ sub_string_1 ] .)
    ID              reduce using rule 55 (matrix -> [ sub_string_1 ] .)


state 106

    (56) matrix -> [ sub_string_1 , . matrix ]
    (57) sub_string_1 -> sub_string_1 , . expression
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    [               shift and go to state 37
    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    matrix                         shift and go to state 114
    expression                     shift and go to state 115
    var                            shift and go to state 29
    matrix_creation                shift and go to state 36

state 107

    (18) for_loop -> FOR ID = expression . : expression instruction
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    :               shift and go to state 116
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 108

    (31) var -> ID [ expression , . expression ]
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 117
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 109

    (17) while_loop -> WHILE ( expression ) . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction
    (16) if -> . IF ( expression ) instruction ELSE instruction
    (19) return -> . RETURN expression
    (20) return -> . RETURN
    (18) for_loop -> . FOR ID = expression : expression instruction
    (17) while_loop -> . WHILE ( expression ) instruction
    (32) assignment -> . var = expression
    (33) assignment -> . var ADDASSIGN expression
    (34) assignment -> . var SUBASSIGN expression
    (35) assignment -> . var MULASSIGN expression
    (36) assignment -> . var DIVASSIGN expression
    (21) print -> . PRINT ( list_for_print ) ;
    (22) print -> . PRINT list_for_print ;
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]

    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 118
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 110

    (21) print -> PRINT ( list_for_print ) . ;

    ;               shift and go to state 119


state 111

    (23) list_for_print -> expression , list_for_print .

    ;               reduce using rule 23 (list_for_print -> expression , list_for_print .)
    )               reduce using rule 23 (list_for_print -> expression , list_for_print .)


state 112

    (15) if -> IF ( expression ) instruction .
    (16) if -> IF ( expression ) instruction . ELSE instruction

    {               reduce using rule 15 (if -> IF ( expression ) instruction .)
    BREAK           reduce using rule 15 (if -> IF ( expression ) instruction .)
    CONTINUE        reduce using rule 15 (if -> IF ( expression ) instruction .)
    IF              reduce using rule 15 (if -> IF ( expression ) instruction .)
    RETURN          reduce using rule 15 (if -> IF ( expression ) instruction .)
    FOR             reduce using rule 15 (if -> IF ( expression ) instruction .)
    WHILE           reduce using rule 15 (if -> IF ( expression ) instruction .)
    PRINT           reduce using rule 15 (if -> IF ( expression ) instruction .)
    ID              reduce using rule 15 (if -> IF ( expression ) instruction .)
    $end            reduce using rule 15 (if -> IF ( expression ) instruction .)
    }               reduce using rule 15 (if -> IF ( expression ) instruction .)
    ELSE            shift and go to state 120

  ! ELSE            [ reduce using rule 15 (if -> IF ( expression ) instruction .) ]


state 113

    (59) expression -> matrix_creation ( expression ) .

    '               reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    +               reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    -               reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    *               reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    /               reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    DOTADD          reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    DOTSUB          reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    DOTMUL          reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    DOTDIV          reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    <               reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    >               reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    LESSEQ          reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    MOREEQ          reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    EQUAL           reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    NOTEQUAL        reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    ;               reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    ,               reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    )               reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    ]               reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    :               reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    {               reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    BREAK           reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    CONTINUE        reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    IF              reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    RETURN          reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    FOR             reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    WHILE           reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    PRINT           reduce using rule 59 (expression -> matrix_creation ( expression ) .)
    ID              reduce using rule 59 (expression -> matrix_creation ( expression ) .)


state 114

    (56) matrix -> [ sub_string_1 , matrix . ]
    (53) expression -> matrix .

  ! shift/reduce conflict for ] resolved as shift
    ]               shift and go to state 121
    '               reduce using rule 53 (expression -> matrix .)
    +               reduce using rule 53 (expression -> matrix .)
    -               reduce using rule 53 (expression -> matrix .)
    *               reduce using rule 53 (expression -> matrix .)
    /               reduce using rule 53 (expression -> matrix .)
    DOTADD          reduce using rule 53 (expression -> matrix .)
    DOTSUB          reduce using rule 53 (expression -> matrix .)
    DOTMUL          reduce using rule 53 (expression -> matrix .)
    DOTDIV          reduce using rule 53 (expression -> matrix .)
    <               reduce using rule 53 (expression -> matrix .)
    >               reduce using rule 53 (expression -> matrix .)
    LESSEQ          reduce using rule 53 (expression -> matrix .)
    MOREEQ          reduce using rule 53 (expression -> matrix .)
    EQUAL           reduce using rule 53 (expression -> matrix .)
    NOTEQUAL        reduce using rule 53 (expression -> matrix .)
    ,               reduce using rule 53 (expression -> matrix .)

  ! ]               [ reduce using rule 53 (expression -> matrix .) ]


state 115

    (57) sub_string_1 -> sub_string_1 , expression .
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    ]               reduce using rule 57 (sub_string_1 -> sub_string_1 , expression .)
    ,               reduce using rule 57 (sub_string_1 -> sub_string_1 , expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 116

    (18) for_loop -> FOR ID = expression : . expression instruction
    (25) expression -> . var
    (26) expression -> . ( expression )
    (27) expression -> . INTNUM
    (28) expression -> . FLOATNUM
    (29) expression -> . STRING
    (37) expression -> . expression '
    (38) expression -> . - expression
    (39) expression -> . expression + expression
    (40) expression -> . expression - expression
    (41) expression -> . expression * expression
    (42) expression -> . expression / expression
    (43) expression -> . expression DOTADD expression
    (44) expression -> . expression DOTSUB expression
    (45) expression -> . expression DOTMUL expression
    (46) expression -> . expression DOTDIV expression
    (47) expression -> . expression < expression
    (48) expression -> . expression > expression
    (49) expression -> . expression LESSEQ expression
    (50) expression -> . expression MOREEQ expression
    (51) expression -> . expression EQUAL expression
    (52) expression -> . expression NOTEQUAL expression
    (53) expression -> . matrix
    (59) expression -> . matrix_creation ( expression )
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]
    (54) matrix -> . [ matrix ]
    (55) matrix -> . [ sub_string_1 ]
    (56) matrix -> . [ sub_string_1 , matrix ]
    (60) matrix_creation -> . ZEROS
    (61) matrix_creation -> . ONES
    (62) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 122
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 117

    (31) var -> ID [ expression , expression . ]
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression

    ]               shift and go to state 123
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 118

    (17) while_loop -> WHILE ( expression ) instruction .

    {               reduce using rule 17 (while_loop -> WHILE ( expression ) instruction .)
    BREAK           reduce using rule 17 (while_loop -> WHILE ( expression ) instruction .)
    CONTINUE        reduce using rule 17 (while_loop -> WHILE ( expression ) instruction .)
    IF              reduce using rule 17 (while_loop -> WHILE ( expression ) instruction .)
    RETURN          reduce using rule 17 (while_loop -> WHILE ( expression ) instruction .)
    FOR             reduce using rule 17 (while_loop -> WHILE ( expression ) instruction .)
    WHILE           reduce using rule 17 (while_loop -> WHILE ( expression ) instruction .)
    PRINT           reduce using rule 17 (while_loop -> WHILE ( expression ) instruction .)
    ID              reduce using rule 17 (while_loop -> WHILE ( expression ) instruction .)
    $end            reduce using rule 17 (while_loop -> WHILE ( expression ) instruction .)
    }               reduce using rule 17 (while_loop -> WHILE ( expression ) instruction .)
    ELSE            reduce using rule 17 (while_loop -> WHILE ( expression ) instruction .)


state 119

    (21) print -> PRINT ( list_for_print ) ; .

    {               reduce using rule 21 (print -> PRINT ( list_for_print ) ; .)
    BREAK           reduce using rule 21 (print -> PRINT ( list_for_print ) ; .)
    CONTINUE        reduce using rule 21 (print -> PRINT ( list_for_print ) ; .)
    IF              reduce using rule 21 (print -> PRINT ( list_for_print ) ; .)
    RETURN          reduce using rule 21 (print -> PRINT ( list_for_print ) ; .)
    FOR             reduce using rule 21 (print -> PRINT ( list_for_print ) ; .)
    WHILE           reduce using rule 21 (print -> PRINT ( list_for_print ) ; .)
    PRINT           reduce using rule 21 (print -> PRINT ( list_for_print ) ; .)
    ID              reduce using rule 21 (print -> PRINT ( list_for_print ) ; .)
    $end            reduce using rule 21 (print -> PRINT ( list_for_print ) ; .)
    }               reduce using rule 21 (print -> PRINT ( list_for_print ) ; .)
    ELSE            reduce using rule 21 (print -> PRINT ( list_for_print ) ; .)


state 120

    (16) if -> IF ( expression ) instruction ELSE . instruction
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction
    (16) if -> . IF ( expression ) instruction ELSE instruction
    (19) return -> . RETURN expression
    (20) return -> . RETURN
    (18) for_loop -> . FOR ID = expression : expression instruction
    (17) while_loop -> . WHILE ( expression ) instruction
    (32) assignment -> . var = expression
    (33) assignment -> . var ADDASSIGN expression
    (34) assignment -> . var SUBASSIGN expression
    (35) assignment -> . var MULASSIGN expression
    (36) assignment -> . var DIVASSIGN expression
    (21) print -> . PRINT ( list_for_print ) ;
    (22) print -> . PRINT list_for_print ;
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]

    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 124
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 121

    (56) matrix -> [ sub_string_1 , matrix ] .

    '               reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    +               reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    -               reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    *               reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    /               reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    DOTADD          reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    DOTSUB          reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    DOTMUL          reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    DOTDIV          reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    <               reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    >               reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    LESSEQ          reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    MOREEQ          reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    EQUAL           reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    NOTEQUAL        reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    ;               reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    ,               reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    )               reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    ]               reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    :               reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    {               reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    BREAK           reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    CONTINUE        reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    IF              reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    RETURN          reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    FOR             reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    WHILE           reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    PRINT           reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)
    ID              reduce using rule 56 (matrix -> [ sub_string_1 , matrix ] .)


state 122

    (18) for_loop -> FOR ID = expression : expression . instruction
    (37) expression -> expression . '
    (39) expression -> expression . + expression
    (40) expression -> expression . - expression
    (41) expression -> expression . * expression
    (42) expression -> expression . / expression
    (43) expression -> expression . DOTADD expression
    (44) expression -> expression . DOTSUB expression
    (45) expression -> expression . DOTMUL expression
    (46) expression -> expression . DOTDIV expression
    (47) expression -> expression . < expression
    (48) expression -> expression . > expression
    (49) expression -> expression . LESSEQ expression
    (50) expression -> expression . MOREEQ expression
    (51) expression -> expression . EQUAL expression
    (52) expression -> expression . NOTEQUAL expression
    (6) instruction -> . { instructions }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction
    (16) if -> . IF ( expression ) instruction ELSE instruction
    (19) return -> . RETURN expression
    (20) return -> . RETURN
    (18) for_loop -> . FOR ID = expression : expression instruction
    (17) while_loop -> . WHILE ( expression ) instruction
    (32) assignment -> . var = expression
    (33) assignment -> . var ADDASSIGN expression
    (34) assignment -> . var SUBASSIGN expression
    (35) assignment -> . var MULASSIGN expression
    (36) assignment -> . var DIVASSIGN expression
    (21) print -> . PRINT ( list_for_print ) ;
    (22) print -> . PRINT list_for_print ;
    (30) var -> . ID
    (31) var -> . ID [ expression , expression ]

    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68
    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 125
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 123

    (31) var -> ID [ expression , expression ] .

    =               reduce using rule 31 (var -> ID [ expression , expression ] .)
    ADDASSIGN       reduce using rule 31 (var -> ID [ expression , expression ] .)
    SUBASSIGN       reduce using rule 31 (var -> ID [ expression , expression ] .)
    MULASSIGN       reduce using rule 31 (var -> ID [ expression , expression ] .)
    DIVASSIGN       reduce using rule 31 (var -> ID [ expression , expression ] .)
    '               reduce using rule 31 (var -> ID [ expression , expression ] .)
    +               reduce using rule 31 (var -> ID [ expression , expression ] .)
    -               reduce using rule 31 (var -> ID [ expression , expression ] .)
    *               reduce using rule 31 (var -> ID [ expression , expression ] .)
    /               reduce using rule 31 (var -> ID [ expression , expression ] .)
    DOTADD          reduce using rule 31 (var -> ID [ expression , expression ] .)
    DOTSUB          reduce using rule 31 (var -> ID [ expression , expression ] .)
    DOTMUL          reduce using rule 31 (var -> ID [ expression , expression ] .)
    DOTDIV          reduce using rule 31 (var -> ID [ expression , expression ] .)
    <               reduce using rule 31 (var -> ID [ expression , expression ] .)
    >               reduce using rule 31 (var -> ID [ expression , expression ] .)
    LESSEQ          reduce using rule 31 (var -> ID [ expression , expression ] .)
    MOREEQ          reduce using rule 31 (var -> ID [ expression , expression ] .)
    EQUAL           reduce using rule 31 (var -> ID [ expression , expression ] .)
    NOTEQUAL        reduce using rule 31 (var -> ID [ expression , expression ] .)
    ;               reduce using rule 31 (var -> ID [ expression , expression ] .)
    ,               reduce using rule 31 (var -> ID [ expression , expression ] .)
    )               reduce using rule 31 (var -> ID [ expression , expression ] .)
    ]               reduce using rule 31 (var -> ID [ expression , expression ] .)
    :               reduce using rule 31 (var -> ID [ expression , expression ] .)
    {               reduce using rule 31 (var -> ID [ expression , expression ] .)
    BREAK           reduce using rule 31 (var -> ID [ expression , expression ] .)
    CONTINUE        reduce using rule 31 (var -> ID [ expression , expression ] .)
    IF              reduce using rule 31 (var -> ID [ expression , expression ] .)
    RETURN          reduce using rule 31 (var -> ID [ expression , expression ] .)
    FOR             reduce using rule 31 (var -> ID [ expression , expression ] .)
    WHILE           reduce using rule 31 (var -> ID [ expression , expression ] .)
    PRINT           reduce using rule 31 (var -> ID [ expression , expression ] .)
    ID              reduce using rule 31 (var -> ID [ expression , expression ] .)


state 124

    (16) if -> IF ( expression ) instruction ELSE instruction .

    {               reduce using rule 16 (if -> IF ( expression ) instruction ELSE instruction .)
    BREAK           reduce using rule 16 (if -> IF ( expression ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 16 (if -> IF ( expression ) instruction ELSE instruction .)
    IF              reduce using rule 16 (if -> IF ( expression ) instruction ELSE instruction .)
    RETURN          reduce using rule 16 (if -> IF ( expression ) instruction ELSE instruction .)
    FOR             reduce using rule 16 (if -> IF ( expression ) instruction ELSE instruction .)
    WHILE           reduce using rule 16 (if -> IF ( expression ) instruction ELSE instruction .)
    PRINT           reduce using rule 16 (if -> IF ( expression ) instruction ELSE instruction .)
    ID              reduce using rule 16 (if -> IF ( expression ) instruction ELSE instruction .)
    $end            reduce using rule 16 (if -> IF ( expression ) instruction ELSE instruction .)
    }               reduce using rule 16 (if -> IF ( expression ) instruction ELSE instruction .)
    ELSE            reduce using rule 16 (if -> IF ( expression ) instruction ELSE instruction .)


state 125

    (18) for_loop -> FOR ID = expression : expression instruction .

    {               reduce using rule 18 (for_loop -> FOR ID = expression : expression instruction .)
    BREAK           reduce using rule 18 (for_loop -> FOR ID = expression : expression instruction .)
    CONTINUE        reduce using rule 18 (for_loop -> FOR ID = expression : expression instruction .)
    IF              reduce using rule 18 (for_loop -> FOR ID = expression : expression instruction .)
    RETURN          reduce using rule 18 (for_loop -> FOR ID = expression : expression instruction .)
    FOR             reduce using rule 18 (for_loop -> FOR ID = expression : expression instruction .)
    WHILE           reduce using rule 18 (for_loop -> FOR ID = expression : expression instruction .)
    PRINT           reduce using rule 18 (for_loop -> FOR ID = expression : expression instruction .)
    ID              reduce using rule 18 (for_loop -> FOR ID = expression : expression instruction .)
    $end            reduce using rule 18 (for_loop -> FOR ID = expression : expression instruction .)
    }               reduce using rule 18 (for_loop -> FOR ID = expression : expression instruction .)
    ELSE            reduce using rule 18 (for_loop -> FOR ID = expression : expression instruction .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ] in state 72 resolved as shift
WARNING: shift/reduce conflict for ) in state 84 resolved as shift
WARNING: shift/reduce conflict for ] in state 114 resolved as shift
