
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocIFXnonassocELSEleft=ADDASSIGNSUBASSIGNMULASSIGNDIVASSIGNnonassocLESSEQMOREEQNOTEQUALEQUAL<>left+-DOTADDDOTSUBleft*/DOTMULDOTDIVleft\'rightUMINUSADDASSIGN BREAK CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQUAL EYE FLOATNUM FOR ID IF INTNUM LESSEQ MOREEQ MULASSIGN NOTEQUAL ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSprogram : instructions_optinstructions_opt : instructions instructions_opt : instructions : instructions instruction\n                    | instructioninstruction : \'{\' instructions \'}\' instruction : if\n                   | return \';\'\n                   | BREAK \';\'\n                   | CONTINUE \';\'\n                   | for_loop\n                   | while_loop\n                   | assignment \';\'\n                   | printif : IF \'(\' expression \')\' instruction %prec IFX\n          | IF \'(\' expression \')\' instruction ELSE instructionwhile_loop : WHILE \'(\' expression \')\' instruction for_loop : FOR ID \'=\' expression \':\' expression instructionreturn : RETURN expression\n              | RETURNprint : PRINT \'(\' list_for_print \')\' \';\'\n             | PRINT list_for_print \';\'list_for_print : expression \',\' list_for_print\n                      | expressionexpression : var\n                  | \'(\' expression \')\'\n                  | INTNUM\n                  | FLOATNUM\n                  | STRINGvar : IDvar : ID \'[\' expression \',\' expression \']\' assignment : var \'=\' expression\n                  | var ADDASSIGN expression\n                  | var SUBASSIGN expression\n                  | var MULASSIGN expression\n                  | var DIVASSIGN expressionexpression : expression "\'" expression : \'-\' expression %prec UMINUSexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression \'*\' expression\n                  | expression \'/\' expression\n\n                  | expression DOTADD expression\n                  | expression DOTSUB expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expression\n\n                  | expression \'<\' expression\n                  | expression \'>\' expression\n                  | expression LESSEQ expression\n                  | expression MOREEQ expression\n                  | expression EQUAL expression\n                  | expression NOTEQUAL expression\n                  expression : matrix matrix : \'[\' matrix \']\'\n              | \'[\' sub_string_1 \']\'\n              | \'[\' sub_string_1 \',\' matrix \']\' sub_string_1 : sub_string_1 \',\' expression\n                    | expressionexpression : matrix_creation \'(\' expression \')\' matrix_creation : ZEROS\n                       | ONES\n                       | EYE'
    
_lr_action_items = {'$end':([0,1,2,3,4,6,10,11,13,21,23,24,25,26,52,85,112,118,119,124,125,],[-3,0,-1,-2,-5,-7,-11,-12,-14,-4,-8,-9,-10,-13,-6,-22,-15,-17,-21,-16,-18,]),'{':([0,3,4,5,6,10,11,13,17,21,22,23,24,25,26,29,31,32,33,35,52,54,70,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,109,112,113,118,119,120,121,122,123,124,125,],[5,5,-5,5,-7,-11,-12,-14,-30,-4,5,-8,-9,-10,-13,-25,-27,-28,-29,-53,-6,-37,-38,-22,5,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-54,-55,5,-15,-59,-17,-21,5,-56,5,-31,-16,-18,]),'BREAK':([0,3,4,5,6,10,11,13,17,21,22,23,24,25,26,29,31,32,33,35,52,54,70,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,109,112,113,118,119,120,121,122,123,124,125,],[8,8,-5,8,-7,-11,-12,-14,-30,-4,8,-8,-9,-10,-13,-25,-27,-28,-29,-53,-6,-37,-38,-22,8,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-54,-55,8,-15,-59,-17,-21,8,-56,8,-31,-16,-18,]),'CONTINUE':([0,3,4,5,6,10,11,13,17,21,22,23,24,25,26,29,31,32,33,35,52,54,70,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,109,112,113,118,119,120,121,122,123,124,125,],[9,9,-5,9,-7,-11,-12,-14,-30,-4,9,-8,-9,-10,-13,-25,-27,-28,-29,-53,-6,-37,-38,-22,9,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-54,-55,9,-15,-59,-17,-21,9,-56,9,-31,-16,-18,]),'IF':([0,3,4,5,6,10,11,13,17,21,22,23,24,25,26,29,31,32,33,35,52,54,70,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,109,112,113,118,119,120,121,122,123,124,125,],[14,14,-5,14,-7,-11,-12,-14,-30,-4,14,-8,-9,-10,-13,-25,-27,-28,-29,-53,-6,-37,-38,-22,14,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-54,-55,14,-15,-59,-17,-21,14,-56,14,-31,-16,-18,]),'RETURN':([0,3,4,5,6,10,11,13,17,21,22,23,24,25,26,29,31,32,33,35,52,54,70,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,109,112,113,118,119,120,121,122,123,124,125,],[15,15,-5,15,-7,-11,-12,-14,-30,-4,15,-8,-9,-10,-13,-25,-27,-28,-29,-53,-6,-37,-38,-22,15,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-54,-55,15,-15,-59,-17,-21,15,-56,15,-31,-16,-18,]),'FOR':([0,3,4,5,6,10,11,13,17,21,22,23,24,25,26,29,31,32,33,35,52,54,70,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,109,112,113,118,119,120,121,122,123,124,125,],[16,16,-5,16,-7,-11,-12,-14,-30,-4,16,-8,-9,-10,-13,-25,-27,-28,-29,-53,-6,-37,-38,-22,16,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-54,-55,16,-15,-59,-17,-21,16,-56,16,-31,-16,-18,]),'WHILE':([0,3,4,5,6,10,11,13,17,21,22,23,24,25,26,29,31,32,33,35,52,54,70,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,109,112,113,118,119,120,121,122,123,124,125,],[18,18,-5,18,-7,-11,-12,-14,-30,-4,18,-8,-9,-10,-13,-25,-27,-28,-29,-53,-6,-37,-38,-22,18,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-54,-55,18,-15,-59,-17,-21,18,-56,18,-31,-16,-18,]),'PRINT':([0,3,4,5,6,10,11,13,17,21,22,23,24,25,26,29,31,32,33,35,52,54,70,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,109,112,113,118,119,120,121,122,123,124,125,],[20,20,-5,20,-7,-11,-12,-14,-30,-4,20,-8,-9,-10,-13,-25,-27,-28,-29,-53,-6,-37,-38,-22,20,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-54,-55,20,-15,-59,-17,-21,20,-56,20,-31,-16,-18,]),'ID':([0,3,4,5,6,10,11,13,15,16,17,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,37,42,43,44,45,46,47,48,49,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,70,71,75,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,106,108,109,112,113,116,118,119,120,121,122,123,124,125,],[17,17,-5,17,-7,-11,-12,-14,17,41,-30,17,-4,17,-8,-9,-10,-13,17,-25,17,-27,-28,-29,17,-53,17,17,17,17,17,17,17,17,17,-6,-37,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-38,17,17,-22,17,17,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-54,-55,17,17,17,-15,-59,17,-17,-21,17,-56,17,-31,-16,-18,]),'}':([4,6,10,11,13,21,22,23,24,25,26,52,85,112,118,119,124,125,],[-5,-7,-11,-12,-14,-4,52,-8,-9,-10,-13,-6,-22,-15,-17,-21,-16,-18,]),'ELSE':([6,10,11,13,23,24,25,26,52,85,112,118,119,124,125,],[-7,-11,-12,-14,-8,-9,-10,-13,-6,-22,120,-17,-21,-16,-18,]),';':([7,8,9,12,15,17,28,29,31,32,33,35,50,51,54,70,78,79,80,81,82,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,110,111,113,121,123,],[23,24,25,26,-20,-30,-19,-25,-27,-28,-29,-53,85,-24,-37,-38,-32,-33,-34,-35,-36,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-54,-55,119,-23,-59,-56,-31,]),'(':([14,15,18,20,27,30,34,36,37,38,39,40,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,86,106,108,116,],[27,30,43,49,30,30,30,71,30,-60,-61,-62,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'INTNUM':([15,20,27,30,34,37,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,86,106,108,116,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'FLOATNUM':([15,20,27,30,34,37,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,86,106,108,116,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'STRING':([15,20,27,30,34,37,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,86,106,108,116,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'-':([15,17,20,27,28,29,30,31,32,33,34,35,37,42,43,44,45,46,47,48,49,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,84,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,113,114,115,116,117,121,122,123,],[34,-30,34,34,56,-25,34,-27,-28,-29,34,-53,34,34,34,34,34,34,34,34,34,56,56,-37,34,34,34,34,34,34,34,34,34,34,34,34,34,34,56,-38,34,-53,56,34,56,56,56,56,56,56,56,56,34,-39,-40,-41,-42,-43,-44,-45,-46,56,56,56,56,56,56,-26,56,-54,-55,34,56,34,-59,-53,56,34,56,-56,56,-31,]),'[':([15,17,20,27,30,34,37,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,86,106,108,116,],[37,42,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'ZEROS':([15,20,27,30,34,37,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,86,106,108,116,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'ONES':([15,20,27,30,34,37,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,86,106,108,116,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'EYE':([15,20,27,30,34,37,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,86,106,108,116,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'=':([17,19,41,123,],[-30,44,75,-31,]),'ADDASSIGN':([17,19,123,],[-30,45,-31,]),'SUBASSIGN':([17,19,123,],[-30,46,-31,]),'MULASSIGN':([17,19,123,],[-30,47,-31,]),'DIVASSIGN':([17,19,123,],[-30,48,-31,]),"'":([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,54,-25,-27,-28,-29,-53,54,54,-37,54,-38,-53,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-26,54,-54,-55,54,-59,-53,54,54,-56,54,-31,]),'+':([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,55,-25,-27,-28,-29,-53,55,55,-37,55,-38,-53,55,55,55,55,55,55,55,55,55,-39,-40,-41,-42,-43,-44,-45,-46,55,55,55,55,55,55,-26,55,-54,-55,55,-59,-53,55,55,-56,55,-31,]),'*':([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,57,-25,-27,-28,-29,-53,57,57,-37,57,-38,-53,57,57,57,57,57,57,57,57,57,57,57,-41,-42,57,57,-45,-46,57,57,57,57,57,57,-26,57,-54,-55,57,-59,-53,57,57,-56,57,-31,]),'/':([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,58,-25,-27,-28,-29,-53,58,58,-37,58,-38,-53,58,58,58,58,58,58,58,58,58,58,58,-41,-42,58,58,-45,-46,58,58,58,58,58,58,-26,58,-54,-55,58,-59,-53,58,58,-56,58,-31,]),'DOTADD':([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,59,-25,-27,-28,-29,-53,59,59,-37,59,-38,-53,59,59,59,59,59,59,59,59,59,-39,-40,-41,-42,-43,-44,-45,-46,59,59,59,59,59,59,-26,59,-54,-55,59,-59,-53,59,59,-56,59,-31,]),'DOTSUB':([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,60,-25,-27,-28,-29,-53,60,60,-37,60,-38,-53,60,60,60,60,60,60,60,60,60,-39,-40,-41,-42,-43,-44,-45,-46,60,60,60,60,60,60,-26,60,-54,-55,60,-59,-53,60,60,-56,60,-31,]),'DOTMUL':([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,61,-25,-27,-28,-29,-53,61,61,-37,61,-38,-53,61,61,61,61,61,61,61,61,61,61,61,-41,-42,61,61,-45,-46,61,61,61,61,61,61,-26,61,-54,-55,61,-59,-53,61,61,-56,61,-31,]),'DOTDIV':([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,62,-25,-27,-28,-29,-53,62,62,-37,62,-38,-53,62,62,62,62,62,62,62,62,62,62,62,-41,-42,62,62,-45,-46,62,62,62,62,62,62,-26,62,-54,-55,62,-59,-53,62,62,-56,62,-31,]),'<':([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,63,-25,-27,-28,-29,-53,63,63,-37,63,-38,-53,63,63,63,63,63,63,63,63,63,-39,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-26,63,-54,-55,63,-59,-53,63,63,-56,63,-31,]),'>':([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,64,-25,-27,-28,-29,-53,64,64,-37,64,-38,-53,64,64,64,64,64,64,64,64,64,-39,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-26,64,-54,-55,64,-59,-53,64,64,-56,64,-31,]),'LESSEQ':([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,65,-25,-27,-28,-29,-53,65,65,-37,65,-38,-53,65,65,65,65,65,65,65,65,65,-39,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-26,65,-54,-55,65,-59,-53,65,65,-56,65,-31,]),'MOREEQ':([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,66,-25,-27,-28,-29,-53,66,66,-37,66,-38,-53,66,66,66,66,66,66,66,66,66,-39,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-26,66,-54,-55,66,-59,-53,66,66,-56,66,-31,]),'EQUAL':([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,67,-25,-27,-28,-29,-53,67,67,-37,67,-38,-53,67,67,67,67,67,67,67,67,67,-39,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-26,67,-54,-55,67,-59,-53,67,67,-56,67,-31,]),'NOTEQUAL':([17,28,29,31,32,33,35,51,53,54,69,70,72,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,113,114,115,117,121,122,123,],[-30,68,-25,-27,-28,-29,-53,68,68,-37,68,-38,-53,68,68,68,68,68,68,68,68,68,-39,-40,-41,-42,-43,-44,-45,-46,None,None,None,None,None,None,-26,68,-54,-55,68,-59,-53,68,68,-56,68,-31,]),',':([17,29,31,32,33,35,51,54,70,72,73,74,76,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,113,114,115,121,123,],[-30,-25,-27,-28,-29,-53,86,-37,-38,-53,106,-58,108,86,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-54,-55,-59,-53,-57,-56,-31,]),')':([17,29,31,32,33,35,51,53,54,69,70,77,83,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,111,113,121,123,],[-30,-25,-27,-28,-29,-53,-24,87,-37,102,-38,109,110,102,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,113,-54,-55,-23,-59,-56,-31,]),']':([17,29,31,32,33,35,54,70,72,73,74,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,113,114,115,117,121,123,],[-30,-25,-27,-28,-29,-53,-37,-38,104,105,-58,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-54,-55,-59,121,-57,123,-56,-31,]),':':([17,29,31,32,33,35,54,70,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,104,105,107,113,121,123,],[-30,-25,-27,-28,-29,-53,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-26,-54,-55,116,-59,-56,-31,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'instructions_opt':([0,],[2,]),'instructions':([0,5,],[3,22,]),'instruction':([0,3,5,22,87,109,120,122,],[4,21,4,21,112,118,124,125,]),'if':([0,3,5,22,87,109,120,122,],[6,6,6,6,6,6,6,6,]),'return':([0,3,5,22,87,109,120,122,],[7,7,7,7,7,7,7,7,]),'for_loop':([0,3,5,22,87,109,120,122,],[10,10,10,10,10,10,10,10,]),'while_loop':([0,3,5,22,87,109,120,122,],[11,11,11,11,11,11,11,11,]),'assignment':([0,3,5,22,87,109,120,122,],[12,12,12,12,12,12,12,12,]),'print':([0,3,5,22,87,109,120,122,],[13,13,13,13,13,13,13,13,]),'var':([0,3,5,15,20,22,27,30,34,37,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,86,87,106,108,109,116,120,122,],[19,19,19,29,29,19,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,19,29,29,19,29,19,19,]),'expression':([15,20,27,30,34,37,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,86,106,108,116,],[28,51,53,69,70,74,76,77,78,79,80,81,82,84,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,107,51,115,117,122,]),'matrix':([15,20,27,30,34,37,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,86,106,108,116,],[35,35,35,35,35,72,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,114,35,35,]),'matrix_creation':([15,20,27,30,34,37,42,43,44,45,46,47,48,49,55,56,57,58,59,60,61,62,63,64,65,66,67,68,71,75,86,106,108,116,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'list_for_print':([20,49,86,],[50,83,111,]),'sub_string_1':([37,],[73,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> instructions_opt','program',1,'p_program','Mparser.py',36),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt_1','Mparser.py',41),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt_2','Mparser.py',46),
  ('instructions -> instructions instruction','instructions',2,'p_instructions_1','Mparser.py',50),
  ('instructions -> instruction','instructions',1,'p_instructions_1','Mparser.py',51),
  ('instruction -> { instructions }','instruction',3,'p_instructions_2','Mparser.py',67),
  ('instruction -> if','instruction',1,'p_instruction_3','Mparser.py',72),
  ('instruction -> return ;','instruction',2,'p_instruction_3','Mparser.py',73),
  ('instruction -> BREAK ;','instruction',2,'p_instruction_3','Mparser.py',74),
  ('instruction -> CONTINUE ;','instruction',2,'p_instruction_3','Mparser.py',75),
  ('instruction -> for_loop','instruction',1,'p_instruction_3','Mparser.py',76),
  ('instruction -> while_loop','instruction',1,'p_instruction_3','Mparser.py',77),
  ('instruction -> assignment ;','instruction',2,'p_instruction_3','Mparser.py',78),
  ('instruction -> print','instruction',1,'p_instruction_3','Mparser.py',79),
  ('if -> IF ( expression ) instruction','if',5,'p_if','Mparser.py',84),
  ('if -> IF ( expression ) instruction ELSE instruction','if',7,'p_if','Mparser.py',85),
  ('while_loop -> WHILE ( expression ) instruction','while_loop',5,'p_while','Mparser.py',94),
  ('for_loop -> FOR ID = expression : expression instruction','for_loop',7,'p_for','Mparser.py',106),
  ('return -> RETURN expression','return',2,'p_return','Mparser.py',112),
  ('return -> RETURN','return',1,'p_return','Mparser.py',113),
  ('print -> PRINT ( list_for_print ) ;','print',5,'p_print','Mparser.py',122),
  ('print -> PRINT list_for_print ;','print',3,'p_print','Mparser.py',123),
  ('list_for_print -> expression , list_for_print','list_for_print',3,'p_list_for_print','Mparser.py',132),
  ('list_for_print -> expression','list_for_print',1,'p_list_for_print','Mparser.py',133),
  ('expression -> var','expression',1,'p_expression_obj','Mparser.py',141),
  ('expression -> ( expression )','expression',3,'p_expression_obj','Mparser.py',142),
  ('expression -> INTNUM','expression',1,'p_expression_obj','Mparser.py',143),
  ('expression -> FLOATNUM','expression',1,'p_expression_obj','Mparser.py',144),
  ('expression -> STRING','expression',1,'p_expression_obj','Mparser.py',145),
  ('var -> ID','var',1,'p_expression_var','Mparser.py',153),
  ('var -> ID [ expression , expression ]','var',6,'p_expression_ref','Mparser.py',158),
  ('assignment -> var = expression','assignment',3,'p_expression_assignment','Mparser.py',163),
  ('assignment -> var ADDASSIGN expression','assignment',3,'p_expression_assignment','Mparser.py',164),
  ('assignment -> var SUBASSIGN expression','assignment',3,'p_expression_assignment','Mparser.py',165),
  ('assignment -> var MULASSIGN expression','assignment',3,'p_expression_assignment','Mparser.py',166),
  ('assignment -> var DIVASSIGN expression','assignment',3,'p_expression_assignment','Mparser.py',167),
  ("expression -> expression '",'expression',2,'p_expression_uniop_left','Mparser.py',172),
  ('expression -> - expression','expression',2,'p_expression_uniop_right','Mparser.py',180),
  ('expression -> expression + expression','expression',3,'p_expression_binop','Mparser.py',188),
  ('expression -> expression - expression','expression',3,'p_expression_binop','Mparser.py',189),
  ('expression -> expression * expression','expression',3,'p_expression_binop','Mparser.py',190),
  ('expression -> expression / expression','expression',3,'p_expression_binop','Mparser.py',191),
  ('expression -> expression DOTADD expression','expression',3,'p_expression_binop','Mparser.py',193),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression_binop','Mparser.py',194),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression_binop','Mparser.py',195),
  ('expression -> expression DOTDIV expression','expression',3,'p_expression_binop','Mparser.py',196),
  ('expression -> expression < expression','expression',3,'p_expression_binop','Mparser.py',198),
  ('expression -> expression > expression','expression',3,'p_expression_binop','Mparser.py',199),
  ('expression -> expression LESSEQ expression','expression',3,'p_expression_binop','Mparser.py',200),
  ('expression -> expression MOREEQ expression','expression',3,'p_expression_binop','Mparser.py',201),
  ('expression -> expression EQUAL expression','expression',3,'p_expression_binop','Mparser.py',202),
  ('expression -> expression NOTEQUAL expression','expression',3,'p_expression_binop','Mparser.py',203),
  ('expression -> matrix','expression',1,'p_expression_matrix','Mparser.py',210),
  ('matrix -> [ matrix ]','matrix',3,'p_matrix','Mparser.py',215),
  ('matrix -> [ sub_string_1 ]','matrix',3,'p_matrix','Mparser.py',216),
  ('matrix -> [ sub_string_1 , matrix ]','matrix',5,'p_matrix','Mparser.py',217),
  ('sub_string_1 -> sub_string_1 , expression','sub_string_1',3,'p_sub_matrix','Mparser.py',228),
  ('sub_string_1 -> expression','sub_string_1',1,'p_sub_matrix','Mparser.py',229),
  ('expression -> matrix_creation ( expression )','expression',4,'p_matrix_creation_1','Mparser.py',240),
  ('matrix_creation -> ZEROS','matrix_creation',1,'p_matrix_creation','Mparser.py',245),
  ('matrix_creation -> ONES','matrix_creation',1,'p_matrix_creation','Mparser.py',246),
  ('matrix_creation -> EYE','matrix_creation',1,'p_matrix_creation','Mparser.py',247),
]
