Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> instructions_opt
Rule 2     instructions_opt -> instructions
Rule 3     instructions_opt -> <empty>
Rule 4     instructions -> instructions instruction
Rule 5     instructions -> instruction
Rule 6     instruction -> { instruction }
Rule 7     instruction -> if
Rule 8     instruction -> return ;
Rule 9     instruction -> BREAK ;
Rule 10    instruction -> CONTINUE ;
Rule 11    instruction -> for_loop
Rule 12    instruction -> while_loop
Rule 13    instruction -> assignment ;
Rule 14    instruction -> print
Rule 15    if -> IF ( expression ) instruction ELSE instruction
Rule 16    if -> IF ( expression ) instruction
Rule 17    if -> IF ( expression ) instruction ELSE if
Rule 18    while_loop -> WHILE ( expression ) instruction
Rule 19    while_loop -> WHILE ( expression ) { instruction }
Rule 20    while_loop -> WHILE ( expression ) { instructions }
Rule 21    for_loop -> FOR ID = expression : expression instruction
Rule 22    return -> RETURN expression
Rule 23    return -> RETURN
Rule 24    print -> PRINT ( list_for_print ) ;
Rule 25    print -> PRINT list_for_print ;
Rule 26    list_for_print -> expression , list_for_print
Rule 27    list_for_print -> expression
Rule 28    expression -> var
Rule 29    expression -> ( expression )
Rule 30    expression -> INTNUM
Rule 31    expression -> FLOATNUM
Rule 32    expression -> STRING
Rule 33    var -> ID
Rule 34    var -> ID [ expression , expression ]
Rule 35    assignment -> var = expression
Rule 36    assignment -> var ADDASSIGN expression
Rule 37    assignment -> var SUBASSIGN expression
Rule 38    assignment -> var MULASSIGN expression
Rule 39    assignment -> var DIVASSIGN expression
Rule 40    expression -> expression '
Rule 41    expression -> - expression
Rule 42    expression -> expression + expression
Rule 43    expression -> expression - expression
Rule 44    expression -> expression * expression
Rule 45    expression -> expression / expression
Rule 46    expression -> expression DOTADD expression
Rule 47    expression -> expression DOTSUB expression
Rule 48    expression -> expression DOTMUL expression
Rule 49    expression -> expression DOTDIV expression
Rule 50    expression -> expression < expression
Rule 51    expression -> expression > expression
Rule 52    expression -> expression LESSEQ expression
Rule 53    expression -> expression MOREEQ expression
Rule 54    expression -> expression EQUAL expression
Rule 55    expression -> expression NOTEQUAL expression
Rule 56    expression -> matrix
Rule 57    matrix -> [ matrix ]
Rule 58    matrix -> [ sub_string_1 ]
Rule 59    matrix -> [ sub_string_1 , matrix ]
Rule 60    sub_string_1 -> sub_string_1 , expression
Rule 61    sub_string_1 -> expression
Rule 62    expression -> matrix_creation ( expression )
Rule 63    matrix_creation -> ZEROS
Rule 64    matrix_creation -> ONES
Rule 65    matrix_creation -> EYE

Terminals, with rules where they appear

'                    : 40
(                    : 15 16 17 18 19 20 24 29 62
)                    : 15 16 17 18 19 20 24 29 62
*                    : 44
+                    : 42
,                    : 26 34 59 60
-                    : 41 43
/                    : 45
:                    : 21
;                    : 8 9 10 13 24 25
<                    : 50
=                    : 21 35
>                    : 51
ADDASSIGN            : 36
BREAK                : 9
CONTINUE             : 10
DIVASSIGN            : 39
DOTADD               : 46
DOTDIV               : 49
DOTMUL               : 48
DOTSUB               : 47
ELSE                 : 15 17
EQUAL                : 54
EYE                  : 65
FLOATNUM             : 31
FOR                  : 21
ID                   : 21 33 34
IF                   : 15 16 17
INTNUM               : 30
LESSEQ               : 52
MOREEQ               : 53
MULASSIGN            : 38
NOTEQUAL             : 55
ONES                 : 64
PRINT                : 24 25
RETURN               : 22 23
STRING               : 32
SUBASSIGN            : 37
WHILE                : 18 19 20
ZEROS                : 63
[                    : 34 57 58 59
]                    : 34 57 58 59
error                : 
{                    : 6 19 20
}                    : 6 19 20

Nonterminals, with rules where they appear

assignment           : 13
expression           : 15 16 17 18 19 20 21 21 22 26 27 29 34 34 35 36 37 38 39 40 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 52 52 53 53 54 54 55 55 60 61 62
for_loop             : 11
if                   : 7 17
instruction          : 4 5 6 15 15 16 17 18 19 21
instructions         : 2 4 20
instructions_opt     : 1
list_for_print       : 24 25 26
matrix               : 56 57 59
matrix_creation      : 62
print                : 14
program              : 0
return               : 8
sub_string_1         : 58 59 60
var                  : 28 35 36 37 38 39
while_loop           : 12

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . instructions_opt
    (2) instructions_opt -> . instructions
    (3) instructions_opt -> .
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (6) instruction -> . { instruction }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) if -> . IF ( expression ) instruction
    (17) if -> . IF ( expression ) instruction ELSE if
    (22) return -> . RETURN expression
    (23) return -> . RETURN
    (21) for_loop -> . FOR ID = expression : expression instruction
    (18) while_loop -> . WHILE ( expression ) instruction
    (19) while_loop -> . WHILE ( expression ) { instruction }
    (20) while_loop -> . WHILE ( expression ) { instructions }
    (35) assignment -> . var = expression
    (36) assignment -> . var ADDASSIGN expression
    (37) assignment -> . var SUBASSIGN expression
    (38) assignment -> . var MULASSIGN expression
    (39) assignment -> . var DIVASSIGN expression
    (24) print -> . PRINT ( list_for_print ) ;
    (25) print -> . PRINT list_for_print ;
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]

    $end            reduce using rule 3 (instructions_opt -> .)
    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    program                        shift and go to state 1
    instructions_opt               shift and go to state 2
    instructions                   shift and go to state 3
    instruction                    shift and go to state 4
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 1

    (0) S' -> program .



state 2

    (1) program -> instructions_opt .

    $end            reduce using rule 1 (program -> instructions_opt .)


state 3

    (2) instructions_opt -> instructions .
    (4) instructions -> instructions . instruction
    (6) instruction -> . { instruction }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) if -> . IF ( expression ) instruction
    (17) if -> . IF ( expression ) instruction ELSE if
    (22) return -> . RETURN expression
    (23) return -> . RETURN
    (21) for_loop -> . FOR ID = expression : expression instruction
    (18) while_loop -> . WHILE ( expression ) instruction
    (19) while_loop -> . WHILE ( expression ) { instruction }
    (20) while_loop -> . WHILE ( expression ) { instructions }
    (35) assignment -> . var = expression
    (36) assignment -> . var ADDASSIGN expression
    (37) assignment -> . var SUBASSIGN expression
    (38) assignment -> . var MULASSIGN expression
    (39) assignment -> . var DIVASSIGN expression
    (24) print -> . PRINT ( list_for_print ) ;
    (25) print -> . PRINT list_for_print ;
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]

    $end            reduce using rule 2 (instructions_opt -> instructions .)
    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 21
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 4

    (5) instructions -> instruction .

    {               reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)
    $end            reduce using rule 5 (instructions -> instruction .)


state 5

    (6) instruction -> { . instruction }
    (6) instruction -> . { instruction }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) if -> . IF ( expression ) instruction
    (17) if -> . IF ( expression ) instruction ELSE if
    (22) return -> . RETURN expression
    (23) return -> . RETURN
    (21) for_loop -> . FOR ID = expression : expression instruction
    (18) while_loop -> . WHILE ( expression ) instruction
    (19) while_loop -> . WHILE ( expression ) { instruction }
    (20) while_loop -> . WHILE ( expression ) { instructions }
    (35) assignment -> . var = expression
    (36) assignment -> . var ADDASSIGN expression
    (37) assignment -> . var SUBASSIGN expression
    (38) assignment -> . var MULASSIGN expression
    (39) assignment -> . var DIVASSIGN expression
    (24) print -> . PRINT ( list_for_print ) ;
    (25) print -> . PRINT list_for_print ;
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]

    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 22
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 6

    (7) instruction -> if .

    {               reduce using rule 7 (instruction -> if .)
    BREAK           reduce using rule 7 (instruction -> if .)
    CONTINUE        reduce using rule 7 (instruction -> if .)
    IF              reduce using rule 7 (instruction -> if .)
    RETURN          reduce using rule 7 (instruction -> if .)
    FOR             reduce using rule 7 (instruction -> if .)
    WHILE           reduce using rule 7 (instruction -> if .)
    PRINT           reduce using rule 7 (instruction -> if .)
    ID              reduce using rule 7 (instruction -> if .)
    $end            reduce using rule 7 (instruction -> if .)
    }               reduce using rule 7 (instruction -> if .)
    ELSE            reduce using rule 7 (instruction -> if .)


state 7

    (8) instruction -> return . ;

    ;               shift and go to state 23


state 8

    (9) instruction -> BREAK . ;

    ;               shift and go to state 24


state 9

    (10) instruction -> CONTINUE . ;

    ;               shift and go to state 25


state 10

    (11) instruction -> for_loop .

    {               reduce using rule 11 (instruction -> for_loop .)
    BREAK           reduce using rule 11 (instruction -> for_loop .)
    CONTINUE        reduce using rule 11 (instruction -> for_loop .)
    IF              reduce using rule 11 (instruction -> for_loop .)
    RETURN          reduce using rule 11 (instruction -> for_loop .)
    FOR             reduce using rule 11 (instruction -> for_loop .)
    WHILE           reduce using rule 11 (instruction -> for_loop .)
    PRINT           reduce using rule 11 (instruction -> for_loop .)
    ID              reduce using rule 11 (instruction -> for_loop .)
    $end            reduce using rule 11 (instruction -> for_loop .)
    }               reduce using rule 11 (instruction -> for_loop .)
    ELSE            reduce using rule 11 (instruction -> for_loop .)


state 11

    (12) instruction -> while_loop .

    {               reduce using rule 12 (instruction -> while_loop .)
    BREAK           reduce using rule 12 (instruction -> while_loop .)
    CONTINUE        reduce using rule 12 (instruction -> while_loop .)
    IF              reduce using rule 12 (instruction -> while_loop .)
    RETURN          reduce using rule 12 (instruction -> while_loop .)
    FOR             reduce using rule 12 (instruction -> while_loop .)
    WHILE           reduce using rule 12 (instruction -> while_loop .)
    PRINT           reduce using rule 12 (instruction -> while_loop .)
    ID              reduce using rule 12 (instruction -> while_loop .)
    $end            reduce using rule 12 (instruction -> while_loop .)
    }               reduce using rule 12 (instruction -> while_loop .)
    ELSE            reduce using rule 12 (instruction -> while_loop .)


state 12

    (13) instruction -> assignment . ;

    ;               shift and go to state 26


state 13

    (14) instruction -> print .

    {               reduce using rule 14 (instruction -> print .)
    BREAK           reduce using rule 14 (instruction -> print .)
    CONTINUE        reduce using rule 14 (instruction -> print .)
    IF              reduce using rule 14 (instruction -> print .)
    RETURN          reduce using rule 14 (instruction -> print .)
    FOR             reduce using rule 14 (instruction -> print .)
    WHILE           reduce using rule 14 (instruction -> print .)
    PRINT           reduce using rule 14 (instruction -> print .)
    ID              reduce using rule 14 (instruction -> print .)
    $end            reduce using rule 14 (instruction -> print .)
    }               reduce using rule 14 (instruction -> print .)
    ELSE            reduce using rule 14 (instruction -> print .)


state 14

    (15) if -> IF . ( expression ) instruction ELSE instruction
    (16) if -> IF . ( expression ) instruction
    (17) if -> IF . ( expression ) instruction ELSE if

    (               shift and go to state 27


state 15

    (22) return -> RETURN . expression
    (23) return -> RETURN .
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    ;               reduce using rule 23 (return -> RETURN .)
    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 28
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 16

    (21) for_loop -> FOR . ID = expression : expression instruction

    ID              shift and go to state 41


state 17

    (33) var -> ID .
    (34) var -> ID . [ expression , expression ]

    =               reduce using rule 33 (var -> ID .)
    ADDASSIGN       reduce using rule 33 (var -> ID .)
    SUBASSIGN       reduce using rule 33 (var -> ID .)
    MULASSIGN       reduce using rule 33 (var -> ID .)
    DIVASSIGN       reduce using rule 33 (var -> ID .)
    '               reduce using rule 33 (var -> ID .)
    +               reduce using rule 33 (var -> ID .)
    -               reduce using rule 33 (var -> ID .)
    *               reduce using rule 33 (var -> ID .)
    /               reduce using rule 33 (var -> ID .)
    DOTADD          reduce using rule 33 (var -> ID .)
    DOTSUB          reduce using rule 33 (var -> ID .)
    DOTMUL          reduce using rule 33 (var -> ID .)
    DOTDIV          reduce using rule 33 (var -> ID .)
    <               reduce using rule 33 (var -> ID .)
    >               reduce using rule 33 (var -> ID .)
    LESSEQ          reduce using rule 33 (var -> ID .)
    MOREEQ          reduce using rule 33 (var -> ID .)
    EQUAL           reduce using rule 33 (var -> ID .)
    NOTEQUAL        reduce using rule 33 (var -> ID .)
    ;               reduce using rule 33 (var -> ID .)
    ,               reduce using rule 33 (var -> ID .)
    )               reduce using rule 33 (var -> ID .)
    ]               reduce using rule 33 (var -> ID .)
    :               reduce using rule 33 (var -> ID .)
    {               reduce using rule 33 (var -> ID .)
    BREAK           reduce using rule 33 (var -> ID .)
    CONTINUE        reduce using rule 33 (var -> ID .)
    IF              reduce using rule 33 (var -> ID .)
    RETURN          reduce using rule 33 (var -> ID .)
    FOR             reduce using rule 33 (var -> ID .)
    WHILE           reduce using rule 33 (var -> ID .)
    PRINT           reduce using rule 33 (var -> ID .)
    ID              reduce using rule 33 (var -> ID .)
    [               shift and go to state 42


state 18

    (18) while_loop -> WHILE . ( expression ) instruction
    (19) while_loop -> WHILE . ( expression ) { instruction }
    (20) while_loop -> WHILE . ( expression ) { instructions }

    (               shift and go to state 43


state 19

    (35) assignment -> var . = expression
    (36) assignment -> var . ADDASSIGN expression
    (37) assignment -> var . SUBASSIGN expression
    (38) assignment -> var . MULASSIGN expression
    (39) assignment -> var . DIVASSIGN expression

    =               shift and go to state 44
    ADDASSIGN       shift and go to state 45
    SUBASSIGN       shift and go to state 46
    MULASSIGN       shift and go to state 47
    DIVASSIGN       shift and go to state 48


state 20

    (24) print -> PRINT . ( list_for_print ) ;
    (25) print -> PRINT . list_for_print ;
    (26) list_for_print -> . expression , list_for_print
    (27) list_for_print -> . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 49
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    list_for_print                 shift and go to state 50
    expression                     shift and go to state 51
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 21

    (4) instructions -> instructions instruction .

    {               reduce using rule 4 (instructions -> instructions instruction .)
    BREAK           reduce using rule 4 (instructions -> instructions instruction .)
    CONTINUE        reduce using rule 4 (instructions -> instructions instruction .)
    IF              reduce using rule 4 (instructions -> instructions instruction .)
    RETURN          reduce using rule 4 (instructions -> instructions instruction .)
    FOR             reduce using rule 4 (instructions -> instructions instruction .)
    WHILE           reduce using rule 4 (instructions -> instructions instruction .)
    PRINT           reduce using rule 4 (instructions -> instructions instruction .)
    ID              reduce using rule 4 (instructions -> instructions instruction .)
    $end            reduce using rule 4 (instructions -> instructions instruction .)
    }               reduce using rule 4 (instructions -> instructions instruction .)


state 22

    (6) instruction -> { instruction . }

    }               shift and go to state 52


state 23

    (8) instruction -> return ; .

    {               reduce using rule 8 (instruction -> return ; .)
    BREAK           reduce using rule 8 (instruction -> return ; .)
    CONTINUE        reduce using rule 8 (instruction -> return ; .)
    IF              reduce using rule 8 (instruction -> return ; .)
    RETURN          reduce using rule 8 (instruction -> return ; .)
    FOR             reduce using rule 8 (instruction -> return ; .)
    WHILE           reduce using rule 8 (instruction -> return ; .)
    PRINT           reduce using rule 8 (instruction -> return ; .)
    ID              reduce using rule 8 (instruction -> return ; .)
    $end            reduce using rule 8 (instruction -> return ; .)
    }               reduce using rule 8 (instruction -> return ; .)
    ELSE            reduce using rule 8 (instruction -> return ; .)


state 24

    (9) instruction -> BREAK ; .

    {               reduce using rule 9 (instruction -> BREAK ; .)
    BREAK           reduce using rule 9 (instruction -> BREAK ; .)
    CONTINUE        reduce using rule 9 (instruction -> BREAK ; .)
    IF              reduce using rule 9 (instruction -> BREAK ; .)
    RETURN          reduce using rule 9 (instruction -> BREAK ; .)
    FOR             reduce using rule 9 (instruction -> BREAK ; .)
    WHILE           reduce using rule 9 (instruction -> BREAK ; .)
    PRINT           reduce using rule 9 (instruction -> BREAK ; .)
    ID              reduce using rule 9 (instruction -> BREAK ; .)
    $end            reduce using rule 9 (instruction -> BREAK ; .)
    }               reduce using rule 9 (instruction -> BREAK ; .)
    ELSE            reduce using rule 9 (instruction -> BREAK ; .)


state 25

    (10) instruction -> CONTINUE ; .

    {               reduce using rule 10 (instruction -> CONTINUE ; .)
    BREAK           reduce using rule 10 (instruction -> CONTINUE ; .)
    CONTINUE        reduce using rule 10 (instruction -> CONTINUE ; .)
    IF              reduce using rule 10 (instruction -> CONTINUE ; .)
    RETURN          reduce using rule 10 (instruction -> CONTINUE ; .)
    FOR             reduce using rule 10 (instruction -> CONTINUE ; .)
    WHILE           reduce using rule 10 (instruction -> CONTINUE ; .)
    PRINT           reduce using rule 10 (instruction -> CONTINUE ; .)
    ID              reduce using rule 10 (instruction -> CONTINUE ; .)
    $end            reduce using rule 10 (instruction -> CONTINUE ; .)
    }               reduce using rule 10 (instruction -> CONTINUE ; .)
    ELSE            reduce using rule 10 (instruction -> CONTINUE ; .)


state 26

    (13) instruction -> assignment ; .

    {               reduce using rule 13 (instruction -> assignment ; .)
    BREAK           reduce using rule 13 (instruction -> assignment ; .)
    CONTINUE        reduce using rule 13 (instruction -> assignment ; .)
    IF              reduce using rule 13 (instruction -> assignment ; .)
    RETURN          reduce using rule 13 (instruction -> assignment ; .)
    FOR             reduce using rule 13 (instruction -> assignment ; .)
    WHILE           reduce using rule 13 (instruction -> assignment ; .)
    PRINT           reduce using rule 13 (instruction -> assignment ; .)
    ID              reduce using rule 13 (instruction -> assignment ; .)
    $end            reduce using rule 13 (instruction -> assignment ; .)
    }               reduce using rule 13 (instruction -> assignment ; .)
    ELSE            reduce using rule 13 (instruction -> assignment ; .)


state 27

    (15) if -> IF ( . expression ) instruction ELSE instruction
    (16) if -> IF ( . expression ) instruction
    (17) if -> IF ( . expression ) instruction ELSE if
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 53
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 28

    (22) return -> RETURN expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    ;               reduce using rule 22 (return -> RETURN expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 29

    (28) expression -> var .

    '               reduce using rule 28 (expression -> var .)
    +               reduce using rule 28 (expression -> var .)
    -               reduce using rule 28 (expression -> var .)
    *               reduce using rule 28 (expression -> var .)
    /               reduce using rule 28 (expression -> var .)
    DOTADD          reduce using rule 28 (expression -> var .)
    DOTSUB          reduce using rule 28 (expression -> var .)
    DOTMUL          reduce using rule 28 (expression -> var .)
    DOTDIV          reduce using rule 28 (expression -> var .)
    <               reduce using rule 28 (expression -> var .)
    >               reduce using rule 28 (expression -> var .)
    LESSEQ          reduce using rule 28 (expression -> var .)
    MOREEQ          reduce using rule 28 (expression -> var .)
    EQUAL           reduce using rule 28 (expression -> var .)
    NOTEQUAL        reduce using rule 28 (expression -> var .)
    ;               reduce using rule 28 (expression -> var .)
    ,               reduce using rule 28 (expression -> var .)
    )               reduce using rule 28 (expression -> var .)
    ]               reduce using rule 28 (expression -> var .)
    :               reduce using rule 28 (expression -> var .)
    {               reduce using rule 28 (expression -> var .)
    BREAK           reduce using rule 28 (expression -> var .)
    CONTINUE        reduce using rule 28 (expression -> var .)
    IF              reduce using rule 28 (expression -> var .)
    RETURN          reduce using rule 28 (expression -> var .)
    FOR             reduce using rule 28 (expression -> var .)
    WHILE           reduce using rule 28 (expression -> var .)
    PRINT           reduce using rule 28 (expression -> var .)
    ID              reduce using rule 28 (expression -> var .)


state 30

    (29) expression -> ( . expression )
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 69
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 31

    (30) expression -> INTNUM .

    '               reduce using rule 30 (expression -> INTNUM .)
    +               reduce using rule 30 (expression -> INTNUM .)
    -               reduce using rule 30 (expression -> INTNUM .)
    *               reduce using rule 30 (expression -> INTNUM .)
    /               reduce using rule 30 (expression -> INTNUM .)
    DOTADD          reduce using rule 30 (expression -> INTNUM .)
    DOTSUB          reduce using rule 30 (expression -> INTNUM .)
    DOTMUL          reduce using rule 30 (expression -> INTNUM .)
    DOTDIV          reduce using rule 30 (expression -> INTNUM .)
    <               reduce using rule 30 (expression -> INTNUM .)
    >               reduce using rule 30 (expression -> INTNUM .)
    LESSEQ          reduce using rule 30 (expression -> INTNUM .)
    MOREEQ          reduce using rule 30 (expression -> INTNUM .)
    EQUAL           reduce using rule 30 (expression -> INTNUM .)
    NOTEQUAL        reduce using rule 30 (expression -> INTNUM .)
    ;               reduce using rule 30 (expression -> INTNUM .)
    ,               reduce using rule 30 (expression -> INTNUM .)
    )               reduce using rule 30 (expression -> INTNUM .)
    ]               reduce using rule 30 (expression -> INTNUM .)
    :               reduce using rule 30 (expression -> INTNUM .)
    {               reduce using rule 30 (expression -> INTNUM .)
    BREAK           reduce using rule 30 (expression -> INTNUM .)
    CONTINUE        reduce using rule 30 (expression -> INTNUM .)
    IF              reduce using rule 30 (expression -> INTNUM .)
    RETURN          reduce using rule 30 (expression -> INTNUM .)
    FOR             reduce using rule 30 (expression -> INTNUM .)
    WHILE           reduce using rule 30 (expression -> INTNUM .)
    PRINT           reduce using rule 30 (expression -> INTNUM .)
    ID              reduce using rule 30 (expression -> INTNUM .)


state 32

    (31) expression -> FLOATNUM .

    '               reduce using rule 31 (expression -> FLOATNUM .)
    +               reduce using rule 31 (expression -> FLOATNUM .)
    -               reduce using rule 31 (expression -> FLOATNUM .)
    *               reduce using rule 31 (expression -> FLOATNUM .)
    /               reduce using rule 31 (expression -> FLOATNUM .)
    DOTADD          reduce using rule 31 (expression -> FLOATNUM .)
    DOTSUB          reduce using rule 31 (expression -> FLOATNUM .)
    DOTMUL          reduce using rule 31 (expression -> FLOATNUM .)
    DOTDIV          reduce using rule 31 (expression -> FLOATNUM .)
    <               reduce using rule 31 (expression -> FLOATNUM .)
    >               reduce using rule 31 (expression -> FLOATNUM .)
    LESSEQ          reduce using rule 31 (expression -> FLOATNUM .)
    MOREEQ          reduce using rule 31 (expression -> FLOATNUM .)
    EQUAL           reduce using rule 31 (expression -> FLOATNUM .)
    NOTEQUAL        reduce using rule 31 (expression -> FLOATNUM .)
    ;               reduce using rule 31 (expression -> FLOATNUM .)
    ,               reduce using rule 31 (expression -> FLOATNUM .)
    )               reduce using rule 31 (expression -> FLOATNUM .)
    ]               reduce using rule 31 (expression -> FLOATNUM .)
    :               reduce using rule 31 (expression -> FLOATNUM .)
    {               reduce using rule 31 (expression -> FLOATNUM .)
    BREAK           reduce using rule 31 (expression -> FLOATNUM .)
    CONTINUE        reduce using rule 31 (expression -> FLOATNUM .)
    IF              reduce using rule 31 (expression -> FLOATNUM .)
    RETURN          reduce using rule 31 (expression -> FLOATNUM .)
    FOR             reduce using rule 31 (expression -> FLOATNUM .)
    WHILE           reduce using rule 31 (expression -> FLOATNUM .)
    PRINT           reduce using rule 31 (expression -> FLOATNUM .)
    ID              reduce using rule 31 (expression -> FLOATNUM .)


state 33

    (32) expression -> STRING .

    '               reduce using rule 32 (expression -> STRING .)
    +               reduce using rule 32 (expression -> STRING .)
    -               reduce using rule 32 (expression -> STRING .)
    *               reduce using rule 32 (expression -> STRING .)
    /               reduce using rule 32 (expression -> STRING .)
    DOTADD          reduce using rule 32 (expression -> STRING .)
    DOTSUB          reduce using rule 32 (expression -> STRING .)
    DOTMUL          reduce using rule 32 (expression -> STRING .)
    DOTDIV          reduce using rule 32 (expression -> STRING .)
    <               reduce using rule 32 (expression -> STRING .)
    >               reduce using rule 32 (expression -> STRING .)
    LESSEQ          reduce using rule 32 (expression -> STRING .)
    MOREEQ          reduce using rule 32 (expression -> STRING .)
    EQUAL           reduce using rule 32 (expression -> STRING .)
    NOTEQUAL        reduce using rule 32 (expression -> STRING .)
    ;               reduce using rule 32 (expression -> STRING .)
    ,               reduce using rule 32 (expression -> STRING .)
    )               reduce using rule 32 (expression -> STRING .)
    ]               reduce using rule 32 (expression -> STRING .)
    :               reduce using rule 32 (expression -> STRING .)
    {               reduce using rule 32 (expression -> STRING .)
    BREAK           reduce using rule 32 (expression -> STRING .)
    CONTINUE        reduce using rule 32 (expression -> STRING .)
    IF              reduce using rule 32 (expression -> STRING .)
    RETURN          reduce using rule 32 (expression -> STRING .)
    FOR             reduce using rule 32 (expression -> STRING .)
    WHILE           reduce using rule 32 (expression -> STRING .)
    PRINT           reduce using rule 32 (expression -> STRING .)
    ID              reduce using rule 32 (expression -> STRING .)


state 34

    (41) expression -> - . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 70
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 35

    (56) expression -> matrix .

    '               reduce using rule 56 (expression -> matrix .)
    +               reduce using rule 56 (expression -> matrix .)
    -               reduce using rule 56 (expression -> matrix .)
    *               reduce using rule 56 (expression -> matrix .)
    /               reduce using rule 56 (expression -> matrix .)
    DOTADD          reduce using rule 56 (expression -> matrix .)
    DOTSUB          reduce using rule 56 (expression -> matrix .)
    DOTMUL          reduce using rule 56 (expression -> matrix .)
    DOTDIV          reduce using rule 56 (expression -> matrix .)
    <               reduce using rule 56 (expression -> matrix .)
    >               reduce using rule 56 (expression -> matrix .)
    LESSEQ          reduce using rule 56 (expression -> matrix .)
    MOREEQ          reduce using rule 56 (expression -> matrix .)
    EQUAL           reduce using rule 56 (expression -> matrix .)
    NOTEQUAL        reduce using rule 56 (expression -> matrix .)
    ;               reduce using rule 56 (expression -> matrix .)
    ,               reduce using rule 56 (expression -> matrix .)
    )               reduce using rule 56 (expression -> matrix .)
    ]               reduce using rule 56 (expression -> matrix .)
    :               reduce using rule 56 (expression -> matrix .)
    {               reduce using rule 56 (expression -> matrix .)
    BREAK           reduce using rule 56 (expression -> matrix .)
    CONTINUE        reduce using rule 56 (expression -> matrix .)
    IF              reduce using rule 56 (expression -> matrix .)
    RETURN          reduce using rule 56 (expression -> matrix .)
    FOR             reduce using rule 56 (expression -> matrix .)
    WHILE           reduce using rule 56 (expression -> matrix .)
    PRINT           reduce using rule 56 (expression -> matrix .)
    ID              reduce using rule 56 (expression -> matrix .)


state 36

    (62) expression -> matrix_creation . ( expression )

    (               shift and go to state 71


state 37

    (57) matrix -> [ . matrix ]
    (58) matrix -> [ . sub_string_1 ]
    (59) matrix -> [ . sub_string_1 , matrix ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (60) sub_string_1 -> . sub_string_1 , expression
    (61) sub_string_1 -> . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    [               shift and go to state 37
    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    matrix                         shift and go to state 72
    sub_string_1                   shift and go to state 73
    expression                     shift and go to state 74
    var                            shift and go to state 29
    matrix_creation                shift and go to state 36

state 38

    (63) matrix_creation -> ZEROS .

    (               reduce using rule 63 (matrix_creation -> ZEROS .)


state 39

    (64) matrix_creation -> ONES .

    (               reduce using rule 64 (matrix_creation -> ONES .)


state 40

    (65) matrix_creation -> EYE .

    (               reduce using rule 65 (matrix_creation -> EYE .)


state 41

    (21) for_loop -> FOR ID . = expression : expression instruction

    =               shift and go to state 75


state 42

    (34) var -> ID [ . expression , expression ]
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 76
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 43

    (18) while_loop -> WHILE ( . expression ) instruction
    (19) while_loop -> WHILE ( . expression ) { instruction }
    (20) while_loop -> WHILE ( . expression ) { instructions }
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 77
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 44

    (35) assignment -> var = . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    var                            shift and go to state 29
    expression                     shift and go to state 78
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 45

    (36) assignment -> var ADDASSIGN . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    var                            shift and go to state 29
    expression                     shift and go to state 79
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 46

    (37) assignment -> var SUBASSIGN . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    var                            shift and go to state 29
    expression                     shift and go to state 80
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 47

    (38) assignment -> var MULASSIGN . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    var                            shift and go to state 29
    expression                     shift and go to state 81
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 48

    (39) assignment -> var DIVASSIGN . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    var                            shift and go to state 29
    expression                     shift and go to state 82
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 49

    (24) print -> PRINT ( . list_for_print ) ;
    (29) expression -> ( . expression )
    (26) list_for_print -> . expression , list_for_print
    (27) list_for_print -> . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    list_for_print                 shift and go to state 83
    expression                     shift and go to state 84
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 50

    (25) print -> PRINT list_for_print . ;

    ;               shift and go to state 85


state 51

    (26) list_for_print -> expression . , list_for_print
    (27) list_for_print -> expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    ,               shift and go to state 86
    ;               reduce using rule 27 (list_for_print -> expression .)
    )               reduce using rule 27 (list_for_print -> expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 52

    (6) instruction -> { instruction } .

    {               reduce using rule 6 (instruction -> { instruction } .)
    BREAK           reduce using rule 6 (instruction -> { instruction } .)
    CONTINUE        reduce using rule 6 (instruction -> { instruction } .)
    IF              reduce using rule 6 (instruction -> { instruction } .)
    RETURN          reduce using rule 6 (instruction -> { instruction } .)
    FOR             reduce using rule 6 (instruction -> { instruction } .)
    WHILE           reduce using rule 6 (instruction -> { instruction } .)
    PRINT           reduce using rule 6 (instruction -> { instruction } .)
    ID              reduce using rule 6 (instruction -> { instruction } .)
    $end            reduce using rule 6 (instruction -> { instruction } .)
    }               reduce using rule 6 (instruction -> { instruction } .)
    ELSE            reduce using rule 6 (instruction -> { instruction } .)


state 53

    (15) if -> IF ( expression . ) instruction ELSE instruction
    (16) if -> IF ( expression . ) instruction
    (17) if -> IF ( expression . ) instruction ELSE if
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    )               shift and go to state 87
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 54

    (40) expression -> expression ' .

    '               reduce using rule 40 (expression -> expression ' .)
    +               reduce using rule 40 (expression -> expression ' .)
    -               reduce using rule 40 (expression -> expression ' .)
    *               reduce using rule 40 (expression -> expression ' .)
    /               reduce using rule 40 (expression -> expression ' .)
    DOTADD          reduce using rule 40 (expression -> expression ' .)
    DOTSUB          reduce using rule 40 (expression -> expression ' .)
    DOTMUL          reduce using rule 40 (expression -> expression ' .)
    DOTDIV          reduce using rule 40 (expression -> expression ' .)
    <               reduce using rule 40 (expression -> expression ' .)
    >               reduce using rule 40 (expression -> expression ' .)
    LESSEQ          reduce using rule 40 (expression -> expression ' .)
    MOREEQ          reduce using rule 40 (expression -> expression ' .)
    EQUAL           reduce using rule 40 (expression -> expression ' .)
    NOTEQUAL        reduce using rule 40 (expression -> expression ' .)
    ;               reduce using rule 40 (expression -> expression ' .)
    ,               reduce using rule 40 (expression -> expression ' .)
    )               reduce using rule 40 (expression -> expression ' .)
    ]               reduce using rule 40 (expression -> expression ' .)
    :               reduce using rule 40 (expression -> expression ' .)
    {               reduce using rule 40 (expression -> expression ' .)
    BREAK           reduce using rule 40 (expression -> expression ' .)
    CONTINUE        reduce using rule 40 (expression -> expression ' .)
    IF              reduce using rule 40 (expression -> expression ' .)
    RETURN          reduce using rule 40 (expression -> expression ' .)
    FOR             reduce using rule 40 (expression -> expression ' .)
    WHILE           reduce using rule 40 (expression -> expression ' .)
    PRINT           reduce using rule 40 (expression -> expression ' .)
    ID              reduce using rule 40 (expression -> expression ' .)


state 55

    (42) expression -> expression + . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 88
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 56

    (43) expression -> expression - . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 89
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 57

    (44) expression -> expression * . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 90
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 58

    (45) expression -> expression / . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 91
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 59

    (46) expression -> expression DOTADD . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 92
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 60

    (47) expression -> expression DOTSUB . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 93
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 61

    (48) expression -> expression DOTMUL . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 94
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 62

    (49) expression -> expression DOTDIV . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 95
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 63

    (50) expression -> expression < . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 96
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 64

    (51) expression -> expression > . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 97
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 65

    (52) expression -> expression LESSEQ . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 98
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 66

    (53) expression -> expression MOREEQ . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 99
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 67

    (54) expression -> expression EQUAL . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 100
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 68

    (55) expression -> expression NOTEQUAL . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 101
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 69

    (29) expression -> ( expression . )
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    )               shift and go to state 102
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 70

    (41) expression -> - expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 41 (expression -> - expression .)
    -               reduce using rule 41 (expression -> - expression .)
    ;               reduce using rule 41 (expression -> - expression .)
    ,               reduce using rule 41 (expression -> - expression .)
    )               reduce using rule 41 (expression -> - expression .)
    ]               reduce using rule 41 (expression -> - expression .)
    :               reduce using rule 41 (expression -> - expression .)
    {               reduce using rule 41 (expression -> - expression .)
    BREAK           reduce using rule 41 (expression -> - expression .)
    CONTINUE        reduce using rule 41 (expression -> - expression .)
    IF              reduce using rule 41 (expression -> - expression .)
    RETURN          reduce using rule 41 (expression -> - expression .)
    FOR             reduce using rule 41 (expression -> - expression .)
    WHILE           reduce using rule 41 (expression -> - expression .)
    PRINT           reduce using rule 41 (expression -> - expression .)
    ID              reduce using rule 41 (expression -> - expression .)
    '               shift and go to state 54
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68

  ! '               [ reduce using rule 41 (expression -> - expression .) ]
  ! *               [ reduce using rule 41 (expression -> - expression .) ]
  ! /               [ reduce using rule 41 (expression -> - expression .) ]
  ! DOTADD          [ reduce using rule 41 (expression -> - expression .) ]
  ! DOTSUB          [ reduce using rule 41 (expression -> - expression .) ]
  ! DOTMUL          [ reduce using rule 41 (expression -> - expression .) ]
  ! DOTDIV          [ reduce using rule 41 (expression -> - expression .) ]
  ! <               [ reduce using rule 41 (expression -> - expression .) ]
  ! >               [ reduce using rule 41 (expression -> - expression .) ]
  ! LESSEQ          [ reduce using rule 41 (expression -> - expression .) ]
  ! MOREEQ          [ reduce using rule 41 (expression -> - expression .) ]
  ! EQUAL           [ reduce using rule 41 (expression -> - expression .) ]
  ! NOTEQUAL        [ reduce using rule 41 (expression -> - expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]


state 71

    (62) expression -> matrix_creation ( . expression )
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    matrix_creation                shift and go to state 36
    expression                     shift and go to state 103
    var                            shift and go to state 29
    matrix                         shift and go to state 35

state 72

    (57) matrix -> [ matrix . ]
    (56) expression -> matrix .

  ! shift/reduce conflict for ] resolved as shift
    ]               shift and go to state 104
    '               reduce using rule 56 (expression -> matrix .)
    +               reduce using rule 56 (expression -> matrix .)
    -               reduce using rule 56 (expression -> matrix .)
    *               reduce using rule 56 (expression -> matrix .)
    /               reduce using rule 56 (expression -> matrix .)
    DOTADD          reduce using rule 56 (expression -> matrix .)
    DOTSUB          reduce using rule 56 (expression -> matrix .)
    DOTMUL          reduce using rule 56 (expression -> matrix .)
    DOTDIV          reduce using rule 56 (expression -> matrix .)
    <               reduce using rule 56 (expression -> matrix .)
    >               reduce using rule 56 (expression -> matrix .)
    LESSEQ          reduce using rule 56 (expression -> matrix .)
    MOREEQ          reduce using rule 56 (expression -> matrix .)
    EQUAL           reduce using rule 56 (expression -> matrix .)
    NOTEQUAL        reduce using rule 56 (expression -> matrix .)
    ,               reduce using rule 56 (expression -> matrix .)

  ! ]               [ reduce using rule 56 (expression -> matrix .) ]


state 73

    (58) matrix -> [ sub_string_1 . ]
    (59) matrix -> [ sub_string_1 . , matrix ]
    (60) sub_string_1 -> sub_string_1 . , expression

    ]               shift and go to state 105
    ,               shift and go to state 106


state 74

    (61) sub_string_1 -> expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    ]               reduce using rule 61 (sub_string_1 -> expression .)
    ,               reduce using rule 61 (sub_string_1 -> expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 75

    (21) for_loop -> FOR ID = . expression : expression instruction
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 107
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 76

    (34) var -> ID [ expression . , expression ]
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    ,               shift and go to state 108
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 77

    (18) while_loop -> WHILE ( expression . ) instruction
    (19) while_loop -> WHILE ( expression . ) { instruction }
    (20) while_loop -> WHILE ( expression . ) { instructions }
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    )               shift and go to state 109
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 78

    (35) assignment -> var = expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    ;               reduce using rule 35 (assignment -> var = expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 79

    (36) assignment -> var ADDASSIGN expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    ;               reduce using rule 36 (assignment -> var ADDASSIGN expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 80

    (37) assignment -> var SUBASSIGN expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    ;               reduce using rule 37 (assignment -> var SUBASSIGN expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 81

    (38) assignment -> var MULASSIGN expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    ;               reduce using rule 38 (assignment -> var MULASSIGN expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 82

    (39) assignment -> var DIVASSIGN expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    ;               reduce using rule 39 (assignment -> var DIVASSIGN expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 83

    (24) print -> PRINT ( list_for_print . ) ;

    )               shift and go to state 110


state 84

    (29) expression -> ( expression . )
    (26) list_for_print -> expression . , list_for_print
    (27) list_for_print -> expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 102
    ,               shift and go to state 86
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68

  ! )               [ reduce using rule 27 (list_for_print -> expression .) ]


state 85

    (25) print -> PRINT list_for_print ; .

    {               reduce using rule 25 (print -> PRINT list_for_print ; .)
    BREAK           reduce using rule 25 (print -> PRINT list_for_print ; .)
    CONTINUE        reduce using rule 25 (print -> PRINT list_for_print ; .)
    IF              reduce using rule 25 (print -> PRINT list_for_print ; .)
    RETURN          reduce using rule 25 (print -> PRINT list_for_print ; .)
    FOR             reduce using rule 25 (print -> PRINT list_for_print ; .)
    WHILE           reduce using rule 25 (print -> PRINT list_for_print ; .)
    PRINT           reduce using rule 25 (print -> PRINT list_for_print ; .)
    ID              reduce using rule 25 (print -> PRINT list_for_print ; .)
    $end            reduce using rule 25 (print -> PRINT list_for_print ; .)
    }               reduce using rule 25 (print -> PRINT list_for_print ; .)
    ELSE            reduce using rule 25 (print -> PRINT list_for_print ; .)


state 86

    (26) list_for_print -> expression , . list_for_print
    (26) list_for_print -> . expression , list_for_print
    (27) list_for_print -> . expression
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 51
    list_for_print                 shift and go to state 111
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 87

    (15) if -> IF ( expression ) . instruction ELSE instruction
    (16) if -> IF ( expression ) . instruction
    (17) if -> IF ( expression ) . instruction ELSE if
    (6) instruction -> . { instruction }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) if -> . IF ( expression ) instruction
    (17) if -> . IF ( expression ) instruction ELSE if
    (22) return -> . RETURN expression
    (23) return -> . RETURN
    (21) for_loop -> . FOR ID = expression : expression instruction
    (18) while_loop -> . WHILE ( expression ) instruction
    (19) while_loop -> . WHILE ( expression ) { instruction }
    (20) while_loop -> . WHILE ( expression ) { instructions }
    (35) assignment -> . var = expression
    (36) assignment -> . var ADDASSIGN expression
    (37) assignment -> . var SUBASSIGN expression
    (38) assignment -> . var MULASSIGN expression
    (39) assignment -> . var DIVASSIGN expression
    (24) print -> . PRINT ( list_for_print ) ;
    (25) print -> . PRINT list_for_print ;
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]

    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 112
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 88

    (42) expression -> expression + expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 42 (expression -> expression + expression .)
    -               reduce using rule 42 (expression -> expression + expression .)
    ;               reduce using rule 42 (expression -> expression + expression .)
    ,               reduce using rule 42 (expression -> expression + expression .)
    )               reduce using rule 42 (expression -> expression + expression .)
    ]               reduce using rule 42 (expression -> expression + expression .)
    :               reduce using rule 42 (expression -> expression + expression .)
    {               reduce using rule 42 (expression -> expression + expression .)
    BREAK           reduce using rule 42 (expression -> expression + expression .)
    CONTINUE        reduce using rule 42 (expression -> expression + expression .)
    IF              reduce using rule 42 (expression -> expression + expression .)
    RETURN          reduce using rule 42 (expression -> expression + expression .)
    FOR             reduce using rule 42 (expression -> expression + expression .)
    WHILE           reduce using rule 42 (expression -> expression + expression .)
    PRINT           reduce using rule 42 (expression -> expression + expression .)
    ID              reduce using rule 42 (expression -> expression + expression .)
    '               shift and go to state 54
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68

  ! '               [ reduce using rule 42 (expression -> expression + expression .) ]
  ! *               [ reduce using rule 42 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 42 (expression -> expression + expression .) ]
  ! DOTADD          [ reduce using rule 42 (expression -> expression + expression .) ]
  ! DOTSUB          [ reduce using rule 42 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 42 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 42 (expression -> expression + expression .) ]
  ! <               [ reduce using rule 42 (expression -> expression + expression .) ]
  ! >               [ reduce using rule 42 (expression -> expression + expression .) ]
  ! LESSEQ          [ reduce using rule 42 (expression -> expression + expression .) ]
  ! MOREEQ          [ reduce using rule 42 (expression -> expression + expression .) ]
  ! EQUAL           [ reduce using rule 42 (expression -> expression + expression .) ]
  ! NOTEQUAL        [ reduce using rule 42 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]


state 89

    (43) expression -> expression - expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 43 (expression -> expression - expression .)
    -               reduce using rule 43 (expression -> expression - expression .)
    ;               reduce using rule 43 (expression -> expression - expression .)
    ,               reduce using rule 43 (expression -> expression - expression .)
    )               reduce using rule 43 (expression -> expression - expression .)
    ]               reduce using rule 43 (expression -> expression - expression .)
    :               reduce using rule 43 (expression -> expression - expression .)
    {               reduce using rule 43 (expression -> expression - expression .)
    BREAK           reduce using rule 43 (expression -> expression - expression .)
    CONTINUE        reduce using rule 43 (expression -> expression - expression .)
    IF              reduce using rule 43 (expression -> expression - expression .)
    RETURN          reduce using rule 43 (expression -> expression - expression .)
    FOR             reduce using rule 43 (expression -> expression - expression .)
    WHILE           reduce using rule 43 (expression -> expression - expression .)
    PRINT           reduce using rule 43 (expression -> expression - expression .)
    ID              reduce using rule 43 (expression -> expression - expression .)
    '               shift and go to state 54
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68

  ! '               [ reduce using rule 43 (expression -> expression - expression .) ]
  ! *               [ reduce using rule 43 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 43 (expression -> expression - expression .) ]
  ! DOTADD          [ reduce using rule 43 (expression -> expression - expression .) ]
  ! DOTSUB          [ reduce using rule 43 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 43 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 43 (expression -> expression - expression .) ]
  ! <               [ reduce using rule 43 (expression -> expression - expression .) ]
  ! >               [ reduce using rule 43 (expression -> expression - expression .) ]
  ! LESSEQ          [ reduce using rule 43 (expression -> expression - expression .) ]
  ! MOREEQ          [ reduce using rule 43 (expression -> expression - expression .) ]
  ! EQUAL           [ reduce using rule 43 (expression -> expression - expression .) ]
  ! NOTEQUAL        [ reduce using rule 43 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]


state 90

    (44) expression -> expression * expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 44 (expression -> expression * expression .)
    -               reduce using rule 44 (expression -> expression * expression .)
    *               reduce using rule 44 (expression -> expression * expression .)
    /               reduce using rule 44 (expression -> expression * expression .)
    ;               reduce using rule 44 (expression -> expression * expression .)
    ,               reduce using rule 44 (expression -> expression * expression .)
    )               reduce using rule 44 (expression -> expression * expression .)
    ]               reduce using rule 44 (expression -> expression * expression .)
    :               reduce using rule 44 (expression -> expression * expression .)
    {               reduce using rule 44 (expression -> expression * expression .)
    BREAK           reduce using rule 44 (expression -> expression * expression .)
    CONTINUE        reduce using rule 44 (expression -> expression * expression .)
    IF              reduce using rule 44 (expression -> expression * expression .)
    RETURN          reduce using rule 44 (expression -> expression * expression .)
    FOR             reduce using rule 44 (expression -> expression * expression .)
    WHILE           reduce using rule 44 (expression -> expression * expression .)
    PRINT           reduce using rule 44 (expression -> expression * expression .)
    ID              reduce using rule 44 (expression -> expression * expression .)
    '               shift and go to state 54
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68

  ! '               [ reduce using rule 44 (expression -> expression * expression .) ]
  ! DOTADD          [ reduce using rule 44 (expression -> expression * expression .) ]
  ! DOTSUB          [ reduce using rule 44 (expression -> expression * expression .) ]
  ! DOTMUL          [ reduce using rule 44 (expression -> expression * expression .) ]
  ! DOTDIV          [ reduce using rule 44 (expression -> expression * expression .) ]
  ! <               [ reduce using rule 44 (expression -> expression * expression .) ]
  ! >               [ reduce using rule 44 (expression -> expression * expression .) ]
  ! LESSEQ          [ reduce using rule 44 (expression -> expression * expression .) ]
  ! MOREEQ          [ reduce using rule 44 (expression -> expression * expression .) ]
  ! EQUAL           [ reduce using rule 44 (expression -> expression * expression .) ]
  ! NOTEQUAL        [ reduce using rule 44 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]


state 91

    (45) expression -> expression / expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 45 (expression -> expression / expression .)
    -               reduce using rule 45 (expression -> expression / expression .)
    *               reduce using rule 45 (expression -> expression / expression .)
    /               reduce using rule 45 (expression -> expression / expression .)
    ;               reduce using rule 45 (expression -> expression / expression .)
    ,               reduce using rule 45 (expression -> expression / expression .)
    )               reduce using rule 45 (expression -> expression / expression .)
    ]               reduce using rule 45 (expression -> expression / expression .)
    :               reduce using rule 45 (expression -> expression / expression .)
    {               reduce using rule 45 (expression -> expression / expression .)
    BREAK           reduce using rule 45 (expression -> expression / expression .)
    CONTINUE        reduce using rule 45 (expression -> expression / expression .)
    IF              reduce using rule 45 (expression -> expression / expression .)
    RETURN          reduce using rule 45 (expression -> expression / expression .)
    FOR             reduce using rule 45 (expression -> expression / expression .)
    WHILE           reduce using rule 45 (expression -> expression / expression .)
    PRINT           reduce using rule 45 (expression -> expression / expression .)
    ID              reduce using rule 45 (expression -> expression / expression .)
    '               shift and go to state 54
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68

  ! '               [ reduce using rule 45 (expression -> expression / expression .) ]
  ! DOTADD          [ reduce using rule 45 (expression -> expression / expression .) ]
  ! DOTSUB          [ reduce using rule 45 (expression -> expression / expression .) ]
  ! DOTMUL          [ reduce using rule 45 (expression -> expression / expression .) ]
  ! DOTDIV          [ reduce using rule 45 (expression -> expression / expression .) ]
  ! <               [ reduce using rule 45 (expression -> expression / expression .) ]
  ! >               [ reduce using rule 45 (expression -> expression / expression .) ]
  ! LESSEQ          [ reduce using rule 45 (expression -> expression / expression .) ]
  ! MOREEQ          [ reduce using rule 45 (expression -> expression / expression .) ]
  ! EQUAL           [ reduce using rule 45 (expression -> expression / expression .) ]
  ! NOTEQUAL        [ reduce using rule 45 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]


state 92

    (46) expression -> expression DOTADD expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 46 (expression -> expression DOTADD expression .)
    -               reduce using rule 46 (expression -> expression DOTADD expression .)
    *               reduce using rule 46 (expression -> expression DOTADD expression .)
    /               reduce using rule 46 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 46 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 46 (expression -> expression DOTADD expression .)
    ;               reduce using rule 46 (expression -> expression DOTADD expression .)
    ,               reduce using rule 46 (expression -> expression DOTADD expression .)
    )               reduce using rule 46 (expression -> expression DOTADD expression .)
    ]               reduce using rule 46 (expression -> expression DOTADD expression .)
    :               reduce using rule 46 (expression -> expression DOTADD expression .)
    {               reduce using rule 46 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 46 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 46 (expression -> expression DOTADD expression .)
    IF              reduce using rule 46 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 46 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 46 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 46 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 46 (expression -> expression DOTADD expression .)
    ID              reduce using rule 46 (expression -> expression DOTADD expression .)
    '               shift and go to state 54
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68

  ! '               [ reduce using rule 46 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 46 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 46 (expression -> expression DOTADD expression .) ]
  ! <               [ reduce using rule 46 (expression -> expression DOTADD expression .) ]
  ! >               [ reduce using rule 46 (expression -> expression DOTADD expression .) ]
  ! LESSEQ          [ reduce using rule 46 (expression -> expression DOTADD expression .) ]
  ! MOREEQ          [ reduce using rule 46 (expression -> expression DOTADD expression .) ]
  ! EQUAL           [ reduce using rule 46 (expression -> expression DOTADD expression .) ]
  ! NOTEQUAL        [ reduce using rule 46 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]


state 93

    (47) expression -> expression DOTSUB expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 47 (expression -> expression DOTSUB expression .)
    -               reduce using rule 47 (expression -> expression DOTSUB expression .)
    *               reduce using rule 47 (expression -> expression DOTSUB expression .)
    /               reduce using rule 47 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 47 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 47 (expression -> expression DOTSUB expression .)
    ;               reduce using rule 47 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 47 (expression -> expression DOTSUB expression .)
    )               reduce using rule 47 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 47 (expression -> expression DOTSUB expression .)
    :               reduce using rule 47 (expression -> expression DOTSUB expression .)
    {               reduce using rule 47 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 47 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 47 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 47 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 47 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 47 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 47 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 47 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 47 (expression -> expression DOTSUB expression .)
    '               shift and go to state 54
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68

  ! '               [ reduce using rule 47 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 47 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 47 (expression -> expression DOTSUB expression .) ]
  ! <               [ reduce using rule 47 (expression -> expression DOTSUB expression .) ]
  ! >               [ reduce using rule 47 (expression -> expression DOTSUB expression .) ]
  ! LESSEQ          [ reduce using rule 47 (expression -> expression DOTSUB expression .) ]
  ! MOREEQ          [ reduce using rule 47 (expression -> expression DOTSUB expression .) ]
  ! EQUAL           [ reduce using rule 47 (expression -> expression DOTSUB expression .) ]
  ! NOTEQUAL        [ reduce using rule 47 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]


state 94

    (48) expression -> expression DOTMUL expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 48 (expression -> expression DOTMUL expression .)
    -               reduce using rule 48 (expression -> expression DOTMUL expression .)
    *               reduce using rule 48 (expression -> expression DOTMUL expression .)
    /               reduce using rule 48 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 48 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 48 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 48 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 48 (expression -> expression DOTMUL expression .)
    ;               reduce using rule 48 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 48 (expression -> expression DOTMUL expression .)
    )               reduce using rule 48 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 48 (expression -> expression DOTMUL expression .)
    :               reduce using rule 48 (expression -> expression DOTMUL expression .)
    {               reduce using rule 48 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 48 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 48 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 48 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 48 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 48 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 48 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 48 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 48 (expression -> expression DOTMUL expression .)
    '               shift and go to state 54
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68

  ! '               [ reduce using rule 48 (expression -> expression DOTMUL expression .) ]
  ! <               [ reduce using rule 48 (expression -> expression DOTMUL expression .) ]
  ! >               [ reduce using rule 48 (expression -> expression DOTMUL expression .) ]
  ! LESSEQ          [ reduce using rule 48 (expression -> expression DOTMUL expression .) ]
  ! MOREEQ          [ reduce using rule 48 (expression -> expression DOTMUL expression .) ]
  ! EQUAL           [ reduce using rule 48 (expression -> expression DOTMUL expression .) ]
  ! NOTEQUAL        [ reduce using rule 48 (expression -> expression DOTMUL expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIV          [ shift and go to state 62 ]


state 95

    (49) expression -> expression DOTDIV expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 49 (expression -> expression DOTDIV expression .)
    -               reduce using rule 49 (expression -> expression DOTDIV expression .)
    *               reduce using rule 49 (expression -> expression DOTDIV expression .)
    /               reduce using rule 49 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 49 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 49 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 49 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 49 (expression -> expression DOTDIV expression .)
    ;               reduce using rule 49 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 49 (expression -> expression DOTDIV expression .)
    )               reduce using rule 49 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 49 (expression -> expression DOTDIV expression .)
    :               reduce using rule 49 (expression -> expression DOTDIV expression .)
    {               reduce using rule 49 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 49 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 49 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 49 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 49 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 49 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 49 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 49 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 49 (expression -> expression DOTDIV expression .)
    '               shift and go to state 54
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68

  ! '               [ reduce using rule 49 (expression -> expression DOTDIV expression .) ]
  ! <               [ reduce using rule 49 (expression -> expression DOTDIV expression .) ]
  ! >               [ reduce using rule 49 (expression -> expression DOTDIV expression .) ]
  ! LESSEQ          [ reduce using rule 49 (expression -> expression DOTDIV expression .) ]
  ! MOREEQ          [ reduce using rule 49 (expression -> expression DOTDIV expression .) ]
  ! EQUAL           [ reduce using rule 49 (expression -> expression DOTDIV expression .) ]
  ! NOTEQUAL        [ reduce using rule 49 (expression -> expression DOTDIV expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIV          [ shift and go to state 62 ]


state 96

    (50) expression -> expression < expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 50 (expression -> expression < expression .)
    -               reduce using rule 50 (expression -> expression < expression .)
    *               reduce using rule 50 (expression -> expression < expression .)
    /               reduce using rule 50 (expression -> expression < expression .)
    DOTADD          reduce using rule 50 (expression -> expression < expression .)
    DOTSUB          reduce using rule 50 (expression -> expression < expression .)
    DOTMUL          reduce using rule 50 (expression -> expression < expression .)
    DOTDIV          reduce using rule 50 (expression -> expression < expression .)
    <               reduce using rule 50 (expression -> expression < expression .)
    >               reduce using rule 50 (expression -> expression < expression .)
    LESSEQ          reduce using rule 50 (expression -> expression < expression .)
    MOREEQ          reduce using rule 50 (expression -> expression < expression .)
    EQUAL           reduce using rule 50 (expression -> expression < expression .)
    NOTEQUAL        reduce using rule 50 (expression -> expression < expression .)
    ;               reduce using rule 50 (expression -> expression < expression .)
    ,               reduce using rule 50 (expression -> expression < expression .)
    )               reduce using rule 50 (expression -> expression < expression .)
    ]               reduce using rule 50 (expression -> expression < expression .)
    :               reduce using rule 50 (expression -> expression < expression .)
    {               reduce using rule 50 (expression -> expression < expression .)
    BREAK           reduce using rule 50 (expression -> expression < expression .)
    CONTINUE        reduce using rule 50 (expression -> expression < expression .)
    IF              reduce using rule 50 (expression -> expression < expression .)
    RETURN          reduce using rule 50 (expression -> expression < expression .)
    FOR             reduce using rule 50 (expression -> expression < expression .)
    WHILE           reduce using rule 50 (expression -> expression < expression .)
    PRINT           reduce using rule 50 (expression -> expression < expression .)
    ID              reduce using rule 50 (expression -> expression < expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 50 (expression -> expression < expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIV          [ shift and go to state 62 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 97

    (51) expression -> expression > expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 51 (expression -> expression > expression .)
    -               reduce using rule 51 (expression -> expression > expression .)
    *               reduce using rule 51 (expression -> expression > expression .)
    /               reduce using rule 51 (expression -> expression > expression .)
    DOTADD          reduce using rule 51 (expression -> expression > expression .)
    DOTSUB          reduce using rule 51 (expression -> expression > expression .)
    DOTMUL          reduce using rule 51 (expression -> expression > expression .)
    DOTDIV          reduce using rule 51 (expression -> expression > expression .)
    <               reduce using rule 51 (expression -> expression > expression .)
    >               reduce using rule 51 (expression -> expression > expression .)
    LESSEQ          reduce using rule 51 (expression -> expression > expression .)
    MOREEQ          reduce using rule 51 (expression -> expression > expression .)
    EQUAL           reduce using rule 51 (expression -> expression > expression .)
    NOTEQUAL        reduce using rule 51 (expression -> expression > expression .)
    ;               reduce using rule 51 (expression -> expression > expression .)
    ,               reduce using rule 51 (expression -> expression > expression .)
    )               reduce using rule 51 (expression -> expression > expression .)
    ]               reduce using rule 51 (expression -> expression > expression .)
    :               reduce using rule 51 (expression -> expression > expression .)
    {               reduce using rule 51 (expression -> expression > expression .)
    BREAK           reduce using rule 51 (expression -> expression > expression .)
    CONTINUE        reduce using rule 51 (expression -> expression > expression .)
    IF              reduce using rule 51 (expression -> expression > expression .)
    RETURN          reduce using rule 51 (expression -> expression > expression .)
    FOR             reduce using rule 51 (expression -> expression > expression .)
    WHILE           reduce using rule 51 (expression -> expression > expression .)
    PRINT           reduce using rule 51 (expression -> expression > expression .)
    ID              reduce using rule 51 (expression -> expression > expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 51 (expression -> expression > expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIV          [ shift and go to state 62 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 98

    (52) expression -> expression LESSEQ expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 52 (expression -> expression LESSEQ expression .)
    -               reduce using rule 52 (expression -> expression LESSEQ expression .)
    *               reduce using rule 52 (expression -> expression LESSEQ expression .)
    /               reduce using rule 52 (expression -> expression LESSEQ expression .)
    DOTADD          reduce using rule 52 (expression -> expression LESSEQ expression .)
    DOTSUB          reduce using rule 52 (expression -> expression LESSEQ expression .)
    DOTMUL          reduce using rule 52 (expression -> expression LESSEQ expression .)
    DOTDIV          reduce using rule 52 (expression -> expression LESSEQ expression .)
    <               reduce using rule 52 (expression -> expression LESSEQ expression .)
    >               reduce using rule 52 (expression -> expression LESSEQ expression .)
    LESSEQ          reduce using rule 52 (expression -> expression LESSEQ expression .)
    MOREEQ          reduce using rule 52 (expression -> expression LESSEQ expression .)
    EQUAL           reduce using rule 52 (expression -> expression LESSEQ expression .)
    NOTEQUAL        reduce using rule 52 (expression -> expression LESSEQ expression .)
    ;               reduce using rule 52 (expression -> expression LESSEQ expression .)
    ,               reduce using rule 52 (expression -> expression LESSEQ expression .)
    )               reduce using rule 52 (expression -> expression LESSEQ expression .)
    ]               reduce using rule 52 (expression -> expression LESSEQ expression .)
    :               reduce using rule 52 (expression -> expression LESSEQ expression .)
    {               reduce using rule 52 (expression -> expression LESSEQ expression .)
    BREAK           reduce using rule 52 (expression -> expression LESSEQ expression .)
    CONTINUE        reduce using rule 52 (expression -> expression LESSEQ expression .)
    IF              reduce using rule 52 (expression -> expression LESSEQ expression .)
    RETURN          reduce using rule 52 (expression -> expression LESSEQ expression .)
    FOR             reduce using rule 52 (expression -> expression LESSEQ expression .)
    WHILE           reduce using rule 52 (expression -> expression LESSEQ expression .)
    PRINT           reduce using rule 52 (expression -> expression LESSEQ expression .)
    ID              reduce using rule 52 (expression -> expression LESSEQ expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 52 (expression -> expression LESSEQ expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIV          [ shift and go to state 62 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 99

    (53) expression -> expression MOREEQ expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 53 (expression -> expression MOREEQ expression .)
    -               reduce using rule 53 (expression -> expression MOREEQ expression .)
    *               reduce using rule 53 (expression -> expression MOREEQ expression .)
    /               reduce using rule 53 (expression -> expression MOREEQ expression .)
    DOTADD          reduce using rule 53 (expression -> expression MOREEQ expression .)
    DOTSUB          reduce using rule 53 (expression -> expression MOREEQ expression .)
    DOTMUL          reduce using rule 53 (expression -> expression MOREEQ expression .)
    DOTDIV          reduce using rule 53 (expression -> expression MOREEQ expression .)
    <               reduce using rule 53 (expression -> expression MOREEQ expression .)
    >               reduce using rule 53 (expression -> expression MOREEQ expression .)
    LESSEQ          reduce using rule 53 (expression -> expression MOREEQ expression .)
    MOREEQ          reduce using rule 53 (expression -> expression MOREEQ expression .)
    EQUAL           reduce using rule 53 (expression -> expression MOREEQ expression .)
    NOTEQUAL        reduce using rule 53 (expression -> expression MOREEQ expression .)
    ;               reduce using rule 53 (expression -> expression MOREEQ expression .)
    ,               reduce using rule 53 (expression -> expression MOREEQ expression .)
    )               reduce using rule 53 (expression -> expression MOREEQ expression .)
    ]               reduce using rule 53 (expression -> expression MOREEQ expression .)
    :               reduce using rule 53 (expression -> expression MOREEQ expression .)
    {               reduce using rule 53 (expression -> expression MOREEQ expression .)
    BREAK           reduce using rule 53 (expression -> expression MOREEQ expression .)
    CONTINUE        reduce using rule 53 (expression -> expression MOREEQ expression .)
    IF              reduce using rule 53 (expression -> expression MOREEQ expression .)
    RETURN          reduce using rule 53 (expression -> expression MOREEQ expression .)
    FOR             reduce using rule 53 (expression -> expression MOREEQ expression .)
    WHILE           reduce using rule 53 (expression -> expression MOREEQ expression .)
    PRINT           reduce using rule 53 (expression -> expression MOREEQ expression .)
    ID              reduce using rule 53 (expression -> expression MOREEQ expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 53 (expression -> expression MOREEQ expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIV          [ shift and go to state 62 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 100

    (54) expression -> expression EQUAL expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 54 (expression -> expression EQUAL expression .)
    -               reduce using rule 54 (expression -> expression EQUAL expression .)
    *               reduce using rule 54 (expression -> expression EQUAL expression .)
    /               reduce using rule 54 (expression -> expression EQUAL expression .)
    DOTADD          reduce using rule 54 (expression -> expression EQUAL expression .)
    DOTSUB          reduce using rule 54 (expression -> expression EQUAL expression .)
    DOTMUL          reduce using rule 54 (expression -> expression EQUAL expression .)
    DOTDIV          reduce using rule 54 (expression -> expression EQUAL expression .)
    <               reduce using rule 54 (expression -> expression EQUAL expression .)
    >               reduce using rule 54 (expression -> expression EQUAL expression .)
    LESSEQ          reduce using rule 54 (expression -> expression EQUAL expression .)
    MOREEQ          reduce using rule 54 (expression -> expression EQUAL expression .)
    EQUAL           reduce using rule 54 (expression -> expression EQUAL expression .)
    NOTEQUAL        reduce using rule 54 (expression -> expression EQUAL expression .)
    ;               reduce using rule 54 (expression -> expression EQUAL expression .)
    ,               reduce using rule 54 (expression -> expression EQUAL expression .)
    )               reduce using rule 54 (expression -> expression EQUAL expression .)
    ]               reduce using rule 54 (expression -> expression EQUAL expression .)
    :               reduce using rule 54 (expression -> expression EQUAL expression .)
    {               reduce using rule 54 (expression -> expression EQUAL expression .)
    BREAK           reduce using rule 54 (expression -> expression EQUAL expression .)
    CONTINUE        reduce using rule 54 (expression -> expression EQUAL expression .)
    IF              reduce using rule 54 (expression -> expression EQUAL expression .)
    RETURN          reduce using rule 54 (expression -> expression EQUAL expression .)
    FOR             reduce using rule 54 (expression -> expression EQUAL expression .)
    WHILE           reduce using rule 54 (expression -> expression EQUAL expression .)
    PRINT           reduce using rule 54 (expression -> expression EQUAL expression .)
    ID              reduce using rule 54 (expression -> expression EQUAL expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 54 (expression -> expression EQUAL expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIV          [ shift and go to state 62 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 101

    (55) expression -> expression NOTEQUAL expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    +               reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    -               reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    *               reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    /               reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    DOTADD          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    DOTSUB          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    DOTMUL          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    DOTDIV          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    <               reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    >               reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    LESSEQ          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    MOREEQ          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    EQUAL           reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    NOTEQUAL        reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    ;               reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    ,               reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    )               reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    ]               reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    :               reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    {               reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    BREAK           reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    CONTINUE        reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    IF              reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    RETURN          reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    FOR             reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    WHILE           reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    PRINT           reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    ID              reduce using rule 55 (expression -> expression NOTEQUAL expression .)
    '               shift and go to state 54

  ! '               [ reduce using rule 55 (expression -> expression NOTEQUAL expression .) ]
  ! +               [ shift and go to state 55 ]
  ! -               [ shift and go to state 56 ]
  ! *               [ shift and go to state 57 ]
  ! /               [ shift and go to state 58 ]
  ! DOTADD          [ shift and go to state 59 ]
  ! DOTSUB          [ shift and go to state 60 ]
  ! DOTMUL          [ shift and go to state 61 ]
  ! DOTDIV          [ shift and go to state 62 ]
  ! <               [ shift and go to state 63 ]
  ! >               [ shift and go to state 64 ]
  ! LESSEQ          [ shift and go to state 65 ]
  ! MOREEQ          [ shift and go to state 66 ]
  ! EQUAL           [ shift and go to state 67 ]
  ! NOTEQUAL        [ shift and go to state 68 ]


state 102

    (29) expression -> ( expression ) .

    '               reduce using rule 29 (expression -> ( expression ) .)
    +               reduce using rule 29 (expression -> ( expression ) .)
    -               reduce using rule 29 (expression -> ( expression ) .)
    *               reduce using rule 29 (expression -> ( expression ) .)
    /               reduce using rule 29 (expression -> ( expression ) .)
    DOTADD          reduce using rule 29 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 29 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 29 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 29 (expression -> ( expression ) .)
    <               reduce using rule 29 (expression -> ( expression ) .)
    >               reduce using rule 29 (expression -> ( expression ) .)
    LESSEQ          reduce using rule 29 (expression -> ( expression ) .)
    MOREEQ          reduce using rule 29 (expression -> ( expression ) .)
    EQUAL           reduce using rule 29 (expression -> ( expression ) .)
    NOTEQUAL        reduce using rule 29 (expression -> ( expression ) .)
    ;               reduce using rule 29 (expression -> ( expression ) .)
    ,               reduce using rule 29 (expression -> ( expression ) .)
    )               reduce using rule 29 (expression -> ( expression ) .)
    ]               reduce using rule 29 (expression -> ( expression ) .)
    :               reduce using rule 29 (expression -> ( expression ) .)
    {               reduce using rule 29 (expression -> ( expression ) .)
    BREAK           reduce using rule 29 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 29 (expression -> ( expression ) .)
    IF              reduce using rule 29 (expression -> ( expression ) .)
    RETURN          reduce using rule 29 (expression -> ( expression ) .)
    FOR             reduce using rule 29 (expression -> ( expression ) .)
    WHILE           reduce using rule 29 (expression -> ( expression ) .)
    PRINT           reduce using rule 29 (expression -> ( expression ) .)
    ID              reduce using rule 29 (expression -> ( expression ) .)


state 103

    (62) expression -> matrix_creation ( expression . )
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    )               shift and go to state 113
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 104

    (57) matrix -> [ matrix ] .

    '               reduce using rule 57 (matrix -> [ matrix ] .)
    +               reduce using rule 57 (matrix -> [ matrix ] .)
    -               reduce using rule 57 (matrix -> [ matrix ] .)
    *               reduce using rule 57 (matrix -> [ matrix ] .)
    /               reduce using rule 57 (matrix -> [ matrix ] .)
    DOTADD          reduce using rule 57 (matrix -> [ matrix ] .)
    DOTSUB          reduce using rule 57 (matrix -> [ matrix ] .)
    DOTMUL          reduce using rule 57 (matrix -> [ matrix ] .)
    DOTDIV          reduce using rule 57 (matrix -> [ matrix ] .)
    <               reduce using rule 57 (matrix -> [ matrix ] .)
    >               reduce using rule 57 (matrix -> [ matrix ] .)
    LESSEQ          reduce using rule 57 (matrix -> [ matrix ] .)
    MOREEQ          reduce using rule 57 (matrix -> [ matrix ] .)
    EQUAL           reduce using rule 57 (matrix -> [ matrix ] .)
    NOTEQUAL        reduce using rule 57 (matrix -> [ matrix ] .)
    ;               reduce using rule 57 (matrix -> [ matrix ] .)
    ,               reduce using rule 57 (matrix -> [ matrix ] .)
    )               reduce using rule 57 (matrix -> [ matrix ] .)
    ]               reduce using rule 57 (matrix -> [ matrix ] .)
    :               reduce using rule 57 (matrix -> [ matrix ] .)
    {               reduce using rule 57 (matrix -> [ matrix ] .)
    BREAK           reduce using rule 57 (matrix -> [ matrix ] .)
    CONTINUE        reduce using rule 57 (matrix -> [ matrix ] .)
    IF              reduce using rule 57 (matrix -> [ matrix ] .)
    RETURN          reduce using rule 57 (matrix -> [ matrix ] .)
    FOR             reduce using rule 57 (matrix -> [ matrix ] .)
    WHILE           reduce using rule 57 (matrix -> [ matrix ] .)
    PRINT           reduce using rule 57 (matrix -> [ matrix ] .)
    ID              reduce using rule 57 (matrix -> [ matrix ] .)


state 105

    (58) matrix -> [ sub_string_1 ] .

    '               reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    +               reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    -               reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    *               reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    /               reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    DOTADD          reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    DOTSUB          reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    DOTMUL          reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    DOTDIV          reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    <               reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    >               reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    LESSEQ          reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    MOREEQ          reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    EQUAL           reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    NOTEQUAL        reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    ;               reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    ,               reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    )               reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    ]               reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    :               reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    {               reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    BREAK           reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    CONTINUE        reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    IF              reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    RETURN          reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    FOR             reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    WHILE           reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    PRINT           reduce using rule 58 (matrix -> [ sub_string_1 ] .)
    ID              reduce using rule 58 (matrix -> [ sub_string_1 ] .)


state 106

    (59) matrix -> [ sub_string_1 , . matrix ]
    (60) sub_string_1 -> sub_string_1 , . expression
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    [               shift and go to state 37
    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    matrix                         shift and go to state 114
    expression                     shift and go to state 115
    var                            shift and go to state 29
    matrix_creation                shift and go to state 36

state 107

    (21) for_loop -> FOR ID = expression . : expression instruction
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    :               shift and go to state 116
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 108

    (34) var -> ID [ expression , . expression ]
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 117
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 109

    (18) while_loop -> WHILE ( expression ) . instruction
    (19) while_loop -> WHILE ( expression ) . { instruction }
    (20) while_loop -> WHILE ( expression ) . { instructions }
    (6) instruction -> . { instruction }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) if -> . IF ( expression ) instruction
    (17) if -> . IF ( expression ) instruction ELSE if
    (22) return -> . RETURN expression
    (23) return -> . RETURN
    (21) for_loop -> . FOR ID = expression : expression instruction
    (18) while_loop -> . WHILE ( expression ) instruction
    (19) while_loop -> . WHILE ( expression ) { instruction }
    (20) while_loop -> . WHILE ( expression ) { instructions }
    (35) assignment -> . var = expression
    (36) assignment -> . var ADDASSIGN expression
    (37) assignment -> . var SUBASSIGN expression
    (38) assignment -> . var MULASSIGN expression
    (39) assignment -> . var DIVASSIGN expression
    (24) print -> . PRINT ( list_for_print ) ;
    (25) print -> . PRINT list_for_print ;
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]

    {               shift and go to state 119
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 118
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 110

    (24) print -> PRINT ( list_for_print ) . ;

    ;               shift and go to state 120


state 111

    (26) list_for_print -> expression , list_for_print .

    ;               reduce using rule 26 (list_for_print -> expression , list_for_print .)
    )               reduce using rule 26 (list_for_print -> expression , list_for_print .)


state 112

    (15) if -> IF ( expression ) instruction . ELSE instruction
    (16) if -> IF ( expression ) instruction .
    (17) if -> IF ( expression ) instruction . ELSE if

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 121
    {               reduce using rule 16 (if -> IF ( expression ) instruction .)
    BREAK           reduce using rule 16 (if -> IF ( expression ) instruction .)
    CONTINUE        reduce using rule 16 (if -> IF ( expression ) instruction .)
    IF              reduce using rule 16 (if -> IF ( expression ) instruction .)
    RETURN          reduce using rule 16 (if -> IF ( expression ) instruction .)
    FOR             reduce using rule 16 (if -> IF ( expression ) instruction .)
    WHILE           reduce using rule 16 (if -> IF ( expression ) instruction .)
    PRINT           reduce using rule 16 (if -> IF ( expression ) instruction .)
    ID              reduce using rule 16 (if -> IF ( expression ) instruction .)
    $end            reduce using rule 16 (if -> IF ( expression ) instruction .)
    }               reduce using rule 16 (if -> IF ( expression ) instruction .)

  ! ELSE            [ reduce using rule 16 (if -> IF ( expression ) instruction .) ]


state 113

    (62) expression -> matrix_creation ( expression ) .

    '               reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    +               reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    -               reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    *               reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    /               reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    DOTADD          reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    DOTSUB          reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    DOTMUL          reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    DOTDIV          reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    <               reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    >               reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    LESSEQ          reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    MOREEQ          reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    EQUAL           reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    NOTEQUAL        reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    ;               reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    ,               reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    )               reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    ]               reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    :               reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    {               reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    BREAK           reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    CONTINUE        reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    IF              reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    RETURN          reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    FOR             reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    WHILE           reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    PRINT           reduce using rule 62 (expression -> matrix_creation ( expression ) .)
    ID              reduce using rule 62 (expression -> matrix_creation ( expression ) .)


state 114

    (59) matrix -> [ sub_string_1 , matrix . ]
    (56) expression -> matrix .

  ! shift/reduce conflict for ] resolved as shift
    ]               shift and go to state 122
    '               reduce using rule 56 (expression -> matrix .)
    +               reduce using rule 56 (expression -> matrix .)
    -               reduce using rule 56 (expression -> matrix .)
    *               reduce using rule 56 (expression -> matrix .)
    /               reduce using rule 56 (expression -> matrix .)
    DOTADD          reduce using rule 56 (expression -> matrix .)
    DOTSUB          reduce using rule 56 (expression -> matrix .)
    DOTMUL          reduce using rule 56 (expression -> matrix .)
    DOTDIV          reduce using rule 56 (expression -> matrix .)
    <               reduce using rule 56 (expression -> matrix .)
    >               reduce using rule 56 (expression -> matrix .)
    LESSEQ          reduce using rule 56 (expression -> matrix .)
    MOREEQ          reduce using rule 56 (expression -> matrix .)
    EQUAL           reduce using rule 56 (expression -> matrix .)
    NOTEQUAL        reduce using rule 56 (expression -> matrix .)
    ,               reduce using rule 56 (expression -> matrix .)

  ! ]               [ reduce using rule 56 (expression -> matrix .) ]


state 115

    (60) sub_string_1 -> sub_string_1 , expression .
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    ]               reduce using rule 60 (sub_string_1 -> sub_string_1 , expression .)
    ,               reduce using rule 60 (sub_string_1 -> sub_string_1 , expression .)
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 116

    (21) for_loop -> FOR ID = expression : . expression instruction
    (28) expression -> . var
    (29) expression -> . ( expression )
    (30) expression -> . INTNUM
    (31) expression -> . FLOATNUM
    (32) expression -> . STRING
    (40) expression -> . expression '
    (41) expression -> . - expression
    (42) expression -> . expression + expression
    (43) expression -> . expression - expression
    (44) expression -> . expression * expression
    (45) expression -> . expression / expression
    (46) expression -> . expression DOTADD expression
    (47) expression -> . expression DOTSUB expression
    (48) expression -> . expression DOTMUL expression
    (49) expression -> . expression DOTDIV expression
    (50) expression -> . expression < expression
    (51) expression -> . expression > expression
    (52) expression -> . expression LESSEQ expression
    (53) expression -> . expression MOREEQ expression
    (54) expression -> . expression EQUAL expression
    (55) expression -> . expression NOTEQUAL expression
    (56) expression -> . matrix
    (62) expression -> . matrix_creation ( expression )
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]
    (57) matrix -> . [ matrix ]
    (58) matrix -> . [ sub_string_1 ]
    (59) matrix -> . [ sub_string_1 , matrix ]
    (63) matrix_creation -> . ZEROS
    (64) matrix_creation -> . ONES
    (65) matrix_creation -> . EYE

    (               shift and go to state 30
    INTNUM          shift and go to state 31
    FLOATNUM        shift and go to state 32
    STRING          shift and go to state 33
    -               shift and go to state 34
    ID              shift and go to state 17
    [               shift and go to state 37
    ZEROS           shift and go to state 38
    ONES            shift and go to state 39
    EYE             shift and go to state 40

    expression                     shift and go to state 123
    var                            shift and go to state 29
    matrix                         shift and go to state 35
    matrix_creation                shift and go to state 36

state 117

    (34) var -> ID [ expression , expression . ]
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression

    ]               shift and go to state 124
    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68


state 118

    (18) while_loop -> WHILE ( expression ) instruction .

    {               reduce using rule 18 (while_loop -> WHILE ( expression ) instruction .)
    BREAK           reduce using rule 18 (while_loop -> WHILE ( expression ) instruction .)
    CONTINUE        reduce using rule 18 (while_loop -> WHILE ( expression ) instruction .)
    IF              reduce using rule 18 (while_loop -> WHILE ( expression ) instruction .)
    RETURN          reduce using rule 18 (while_loop -> WHILE ( expression ) instruction .)
    FOR             reduce using rule 18 (while_loop -> WHILE ( expression ) instruction .)
    WHILE           reduce using rule 18 (while_loop -> WHILE ( expression ) instruction .)
    PRINT           reduce using rule 18 (while_loop -> WHILE ( expression ) instruction .)
    ID              reduce using rule 18 (while_loop -> WHILE ( expression ) instruction .)
    $end            reduce using rule 18 (while_loop -> WHILE ( expression ) instruction .)
    }               reduce using rule 18 (while_loop -> WHILE ( expression ) instruction .)
    ELSE            reduce using rule 18 (while_loop -> WHILE ( expression ) instruction .)


state 119

    (19) while_loop -> WHILE ( expression ) { . instruction }
    (20) while_loop -> WHILE ( expression ) { . instructions }
    (6) instruction -> { . instruction }
    (6) instruction -> . { instruction }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (4) instructions -> . instructions instruction
    (5) instructions -> . instruction
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) if -> . IF ( expression ) instruction
    (17) if -> . IF ( expression ) instruction ELSE if
    (22) return -> . RETURN expression
    (23) return -> . RETURN
    (21) for_loop -> . FOR ID = expression : expression instruction
    (18) while_loop -> . WHILE ( expression ) instruction
    (19) while_loop -> . WHILE ( expression ) { instruction }
    (20) while_loop -> . WHILE ( expression ) { instructions }
    (35) assignment -> . var = expression
    (36) assignment -> . var ADDASSIGN expression
    (37) assignment -> . var SUBASSIGN expression
    (38) assignment -> . var MULASSIGN expression
    (39) assignment -> . var DIVASSIGN expression
    (24) print -> . PRINT ( list_for_print ) ;
    (25) print -> . PRINT list_for_print ;
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]

    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 125
    instructions                   shift and go to state 126
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 120

    (24) print -> PRINT ( list_for_print ) ; .

    {               reduce using rule 24 (print -> PRINT ( list_for_print ) ; .)
    BREAK           reduce using rule 24 (print -> PRINT ( list_for_print ) ; .)
    CONTINUE        reduce using rule 24 (print -> PRINT ( list_for_print ) ; .)
    IF              reduce using rule 24 (print -> PRINT ( list_for_print ) ; .)
    RETURN          reduce using rule 24 (print -> PRINT ( list_for_print ) ; .)
    FOR             reduce using rule 24 (print -> PRINT ( list_for_print ) ; .)
    WHILE           reduce using rule 24 (print -> PRINT ( list_for_print ) ; .)
    PRINT           reduce using rule 24 (print -> PRINT ( list_for_print ) ; .)
    ID              reduce using rule 24 (print -> PRINT ( list_for_print ) ; .)
    $end            reduce using rule 24 (print -> PRINT ( list_for_print ) ; .)
    }               reduce using rule 24 (print -> PRINT ( list_for_print ) ; .)
    ELSE            reduce using rule 24 (print -> PRINT ( list_for_print ) ; .)


state 121

    (15) if -> IF ( expression ) instruction ELSE . instruction
    (17) if -> IF ( expression ) instruction ELSE . if
    (6) instruction -> . { instruction }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) if -> . IF ( expression ) instruction
    (17) if -> . IF ( expression ) instruction ELSE if
    (22) return -> . RETURN expression
    (23) return -> . RETURN
    (21) for_loop -> . FOR ID = expression : expression instruction
    (18) while_loop -> . WHILE ( expression ) instruction
    (19) while_loop -> . WHILE ( expression ) { instruction }
    (20) while_loop -> . WHILE ( expression ) { instructions }
    (35) assignment -> . var = expression
    (36) assignment -> . var ADDASSIGN expression
    (37) assignment -> . var SUBASSIGN expression
    (38) assignment -> . var MULASSIGN expression
    (39) assignment -> . var DIVASSIGN expression
    (24) print -> . PRINT ( list_for_print ) ;
    (25) print -> . PRINT list_for_print ;
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]

    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 127
    if                             shift and go to state 128
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 122

    (59) matrix -> [ sub_string_1 , matrix ] .

    '               reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    +               reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    -               reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    *               reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    /               reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    DOTADD          reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    DOTSUB          reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    DOTMUL          reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    DOTDIV          reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    <               reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    >               reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    LESSEQ          reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    MOREEQ          reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    EQUAL           reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    NOTEQUAL        reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    ;               reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    ,               reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    )               reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    ]               reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    :               reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    {               reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    BREAK           reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    CONTINUE        reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    IF              reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    RETURN          reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    FOR             reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    WHILE           reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    PRINT           reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)
    ID              reduce using rule 59 (matrix -> [ sub_string_1 , matrix ] .)


state 123

    (21) for_loop -> FOR ID = expression : expression . instruction
    (40) expression -> expression . '
    (42) expression -> expression . + expression
    (43) expression -> expression . - expression
    (44) expression -> expression . * expression
    (45) expression -> expression . / expression
    (46) expression -> expression . DOTADD expression
    (47) expression -> expression . DOTSUB expression
    (48) expression -> expression . DOTMUL expression
    (49) expression -> expression . DOTDIV expression
    (50) expression -> expression . < expression
    (51) expression -> expression . > expression
    (52) expression -> expression . LESSEQ expression
    (53) expression -> expression . MOREEQ expression
    (54) expression -> expression . EQUAL expression
    (55) expression -> expression . NOTEQUAL expression
    (6) instruction -> . { instruction }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) if -> . IF ( expression ) instruction
    (17) if -> . IF ( expression ) instruction ELSE if
    (22) return -> . RETURN expression
    (23) return -> . RETURN
    (21) for_loop -> . FOR ID = expression : expression instruction
    (18) while_loop -> . WHILE ( expression ) instruction
    (19) while_loop -> . WHILE ( expression ) { instruction }
    (20) while_loop -> . WHILE ( expression ) { instructions }
    (35) assignment -> . var = expression
    (36) assignment -> . var ADDASSIGN expression
    (37) assignment -> . var SUBASSIGN expression
    (38) assignment -> . var MULASSIGN expression
    (39) assignment -> . var DIVASSIGN expression
    (24) print -> . PRINT ( list_for_print ) ;
    (25) print -> . PRINT list_for_print ;
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]

    '               shift and go to state 54
    +               shift and go to state 55
    -               shift and go to state 56
    *               shift and go to state 57
    /               shift and go to state 58
    DOTADD          shift and go to state 59
    DOTSUB          shift and go to state 60
    DOTMUL          shift and go to state 61
    DOTDIV          shift and go to state 62
    <               shift and go to state 63
    >               shift and go to state 64
    LESSEQ          shift and go to state 65
    MOREEQ          shift and go to state 66
    EQUAL           shift and go to state 67
    NOTEQUAL        shift and go to state 68
    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 129
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 124

    (34) var -> ID [ expression , expression ] .

    =               reduce using rule 34 (var -> ID [ expression , expression ] .)
    ADDASSIGN       reduce using rule 34 (var -> ID [ expression , expression ] .)
    SUBASSIGN       reduce using rule 34 (var -> ID [ expression , expression ] .)
    MULASSIGN       reduce using rule 34 (var -> ID [ expression , expression ] .)
    DIVASSIGN       reduce using rule 34 (var -> ID [ expression , expression ] .)
    '               reduce using rule 34 (var -> ID [ expression , expression ] .)
    +               reduce using rule 34 (var -> ID [ expression , expression ] .)
    -               reduce using rule 34 (var -> ID [ expression , expression ] .)
    *               reduce using rule 34 (var -> ID [ expression , expression ] .)
    /               reduce using rule 34 (var -> ID [ expression , expression ] .)
    DOTADD          reduce using rule 34 (var -> ID [ expression , expression ] .)
    DOTSUB          reduce using rule 34 (var -> ID [ expression , expression ] .)
    DOTMUL          reduce using rule 34 (var -> ID [ expression , expression ] .)
    DOTDIV          reduce using rule 34 (var -> ID [ expression , expression ] .)
    <               reduce using rule 34 (var -> ID [ expression , expression ] .)
    >               reduce using rule 34 (var -> ID [ expression , expression ] .)
    LESSEQ          reduce using rule 34 (var -> ID [ expression , expression ] .)
    MOREEQ          reduce using rule 34 (var -> ID [ expression , expression ] .)
    EQUAL           reduce using rule 34 (var -> ID [ expression , expression ] .)
    NOTEQUAL        reduce using rule 34 (var -> ID [ expression , expression ] .)
    ;               reduce using rule 34 (var -> ID [ expression , expression ] .)
    ,               reduce using rule 34 (var -> ID [ expression , expression ] .)
    )               reduce using rule 34 (var -> ID [ expression , expression ] .)
    ]               reduce using rule 34 (var -> ID [ expression , expression ] .)
    :               reduce using rule 34 (var -> ID [ expression , expression ] .)
    {               reduce using rule 34 (var -> ID [ expression , expression ] .)
    BREAK           reduce using rule 34 (var -> ID [ expression , expression ] .)
    CONTINUE        reduce using rule 34 (var -> ID [ expression , expression ] .)
    IF              reduce using rule 34 (var -> ID [ expression , expression ] .)
    RETURN          reduce using rule 34 (var -> ID [ expression , expression ] .)
    FOR             reduce using rule 34 (var -> ID [ expression , expression ] .)
    WHILE           reduce using rule 34 (var -> ID [ expression , expression ] .)
    PRINT           reduce using rule 34 (var -> ID [ expression , expression ] .)
    ID              reduce using rule 34 (var -> ID [ expression , expression ] .)


state 125

    (19) while_loop -> WHILE ( expression ) { instruction . }
    (6) instruction -> { instruction . }
    (5) instructions -> instruction .

  ! shift/reduce conflict for } resolved as shift
    }               shift and go to state 130
    {               reduce using rule 5 (instructions -> instruction .)
    BREAK           reduce using rule 5 (instructions -> instruction .)
    CONTINUE        reduce using rule 5 (instructions -> instruction .)
    IF              reduce using rule 5 (instructions -> instruction .)
    RETURN          reduce using rule 5 (instructions -> instruction .)
    FOR             reduce using rule 5 (instructions -> instruction .)
    WHILE           reduce using rule 5 (instructions -> instruction .)
    PRINT           reduce using rule 5 (instructions -> instruction .)
    ID              reduce using rule 5 (instructions -> instruction .)

  ! }               [ reduce using rule 5 (instructions -> instruction .) ]


state 126

    (20) while_loop -> WHILE ( expression ) { instructions . }
    (4) instructions -> instructions . instruction
    (6) instruction -> . { instruction }
    (7) instruction -> . if
    (8) instruction -> . return ;
    (9) instruction -> . BREAK ;
    (10) instruction -> . CONTINUE ;
    (11) instruction -> . for_loop
    (12) instruction -> . while_loop
    (13) instruction -> . assignment ;
    (14) instruction -> . print
    (15) if -> . IF ( expression ) instruction ELSE instruction
    (16) if -> . IF ( expression ) instruction
    (17) if -> . IF ( expression ) instruction ELSE if
    (22) return -> . RETURN expression
    (23) return -> . RETURN
    (21) for_loop -> . FOR ID = expression : expression instruction
    (18) while_loop -> . WHILE ( expression ) instruction
    (19) while_loop -> . WHILE ( expression ) { instruction }
    (20) while_loop -> . WHILE ( expression ) { instructions }
    (35) assignment -> . var = expression
    (36) assignment -> . var ADDASSIGN expression
    (37) assignment -> . var SUBASSIGN expression
    (38) assignment -> . var MULASSIGN expression
    (39) assignment -> . var DIVASSIGN expression
    (24) print -> . PRINT ( list_for_print ) ;
    (25) print -> . PRINT list_for_print ;
    (33) var -> . ID
    (34) var -> . ID [ expression , expression ]

    }               shift and go to state 131
    {               shift and go to state 5
    BREAK           shift and go to state 8
    CONTINUE        shift and go to state 9
    IF              shift and go to state 14
    RETURN          shift and go to state 15
    FOR             shift and go to state 16
    WHILE           shift and go to state 18
    PRINT           shift and go to state 20
    ID              shift and go to state 17

    instruction                    shift and go to state 21
    if                             shift and go to state 6
    return                         shift and go to state 7
    for_loop                       shift and go to state 10
    while_loop                     shift and go to state 11
    assignment                     shift and go to state 12
    print                          shift and go to state 13
    var                            shift and go to state 19

state 127

    (15) if -> IF ( expression ) instruction ELSE instruction .

    {               reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    BREAK           reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    CONTINUE        reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    IF              reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    RETURN          reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    FOR             reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    WHILE           reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    PRINT           reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    ID              reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    $end            reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    }               reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)
    ELSE            reduce using rule 15 (if -> IF ( expression ) instruction ELSE instruction .)


state 128

    (17) if -> IF ( expression ) instruction ELSE if .
    (7) instruction -> if .

  ! reduce/reduce conflict for ELSE resolved using rule 7 (instruction -> if .)
  ! reduce/reduce conflict for { resolved using rule 7 (instruction -> if .)
  ! reduce/reduce conflict for BREAK resolved using rule 7 (instruction -> if .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 7 (instruction -> if .)
  ! reduce/reduce conflict for IF resolved using rule 7 (instruction -> if .)
  ! reduce/reduce conflict for RETURN resolved using rule 7 (instruction -> if .)
  ! reduce/reduce conflict for FOR resolved using rule 7 (instruction -> if .)
  ! reduce/reduce conflict for WHILE resolved using rule 7 (instruction -> if .)
  ! reduce/reduce conflict for PRINT resolved using rule 7 (instruction -> if .)
  ! reduce/reduce conflict for ID resolved using rule 7 (instruction -> if .)
  ! reduce/reduce conflict for $end resolved using rule 7 (instruction -> if .)
  ! reduce/reduce conflict for } resolved using rule 7 (instruction -> if .)
    ELSE            reduce using rule 7 (instruction -> if .)
    {               reduce using rule 7 (instruction -> if .)
    BREAK           reduce using rule 7 (instruction -> if .)
    CONTINUE        reduce using rule 7 (instruction -> if .)
    IF              reduce using rule 7 (instruction -> if .)
    RETURN          reduce using rule 7 (instruction -> if .)
    FOR             reduce using rule 7 (instruction -> if .)
    WHILE           reduce using rule 7 (instruction -> if .)
    PRINT           reduce using rule 7 (instruction -> if .)
    ID              reduce using rule 7 (instruction -> if .)
    $end            reduce using rule 7 (instruction -> if .)
    }               reduce using rule 7 (instruction -> if .)

  ! {               [ reduce using rule 17 (if -> IF ( expression ) instruction ELSE if .) ]
  ! BREAK           [ reduce using rule 17 (if -> IF ( expression ) instruction ELSE if .) ]
  ! CONTINUE        [ reduce using rule 17 (if -> IF ( expression ) instruction ELSE if .) ]
  ! IF              [ reduce using rule 17 (if -> IF ( expression ) instruction ELSE if .) ]
  ! RETURN          [ reduce using rule 17 (if -> IF ( expression ) instruction ELSE if .) ]
  ! FOR             [ reduce using rule 17 (if -> IF ( expression ) instruction ELSE if .) ]
  ! WHILE           [ reduce using rule 17 (if -> IF ( expression ) instruction ELSE if .) ]
  ! PRINT           [ reduce using rule 17 (if -> IF ( expression ) instruction ELSE if .) ]
  ! ID              [ reduce using rule 17 (if -> IF ( expression ) instruction ELSE if .) ]
  ! $end            [ reduce using rule 17 (if -> IF ( expression ) instruction ELSE if .) ]
  ! }               [ reduce using rule 17 (if -> IF ( expression ) instruction ELSE if .) ]
  ! ELSE            [ reduce using rule 17 (if -> IF ( expression ) instruction ELSE if .) ]


state 129

    (21) for_loop -> FOR ID = expression : expression instruction .

    {               reduce using rule 21 (for_loop -> FOR ID = expression : expression instruction .)
    BREAK           reduce using rule 21 (for_loop -> FOR ID = expression : expression instruction .)
    CONTINUE        reduce using rule 21 (for_loop -> FOR ID = expression : expression instruction .)
    IF              reduce using rule 21 (for_loop -> FOR ID = expression : expression instruction .)
    RETURN          reduce using rule 21 (for_loop -> FOR ID = expression : expression instruction .)
    FOR             reduce using rule 21 (for_loop -> FOR ID = expression : expression instruction .)
    WHILE           reduce using rule 21 (for_loop -> FOR ID = expression : expression instruction .)
    PRINT           reduce using rule 21 (for_loop -> FOR ID = expression : expression instruction .)
    ID              reduce using rule 21 (for_loop -> FOR ID = expression : expression instruction .)
    $end            reduce using rule 21 (for_loop -> FOR ID = expression : expression instruction .)
    }               reduce using rule 21 (for_loop -> FOR ID = expression : expression instruction .)
    ELSE            reduce using rule 21 (for_loop -> FOR ID = expression : expression instruction .)


state 130

    (19) while_loop -> WHILE ( expression ) { instruction } .
    (6) instruction -> { instruction } .

  ! reduce/reduce conflict for ELSE resolved using rule 6 (instruction -> { instruction } .)
  ! reduce/reduce conflict for { resolved using rule 6 (instruction -> { instruction } .)
  ! reduce/reduce conflict for BREAK resolved using rule 6 (instruction -> { instruction } .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 6 (instruction -> { instruction } .)
  ! reduce/reduce conflict for IF resolved using rule 6 (instruction -> { instruction } .)
  ! reduce/reduce conflict for RETURN resolved using rule 6 (instruction -> { instruction } .)
  ! reduce/reduce conflict for FOR resolved using rule 6 (instruction -> { instruction } .)
  ! reduce/reduce conflict for WHILE resolved using rule 6 (instruction -> { instruction } .)
  ! reduce/reduce conflict for PRINT resolved using rule 6 (instruction -> { instruction } .)
  ! reduce/reduce conflict for ID resolved using rule 6 (instruction -> { instruction } .)
  ! reduce/reduce conflict for $end resolved using rule 6 (instruction -> { instruction } .)
  ! reduce/reduce conflict for } resolved using rule 6 (instruction -> { instruction } .)
    ELSE            reduce using rule 6 (instruction -> { instruction } .)
    {               reduce using rule 6 (instruction -> { instruction } .)
    BREAK           reduce using rule 6 (instruction -> { instruction } .)
    CONTINUE        reduce using rule 6 (instruction -> { instruction } .)
    IF              reduce using rule 6 (instruction -> { instruction } .)
    RETURN          reduce using rule 6 (instruction -> { instruction } .)
    FOR             reduce using rule 6 (instruction -> { instruction } .)
    WHILE           reduce using rule 6 (instruction -> { instruction } .)
    PRINT           reduce using rule 6 (instruction -> { instruction } .)
    ID              reduce using rule 6 (instruction -> { instruction } .)
    $end            reduce using rule 6 (instruction -> { instruction } .)
    }               reduce using rule 6 (instruction -> { instruction } .)

  ! {               [ reduce using rule 19 (while_loop -> WHILE ( expression ) { instruction } .) ]
  ! BREAK           [ reduce using rule 19 (while_loop -> WHILE ( expression ) { instruction } .) ]
  ! CONTINUE        [ reduce using rule 19 (while_loop -> WHILE ( expression ) { instruction } .) ]
  ! IF              [ reduce using rule 19 (while_loop -> WHILE ( expression ) { instruction } .) ]
  ! RETURN          [ reduce using rule 19 (while_loop -> WHILE ( expression ) { instruction } .) ]
  ! FOR             [ reduce using rule 19 (while_loop -> WHILE ( expression ) { instruction } .) ]
  ! WHILE           [ reduce using rule 19 (while_loop -> WHILE ( expression ) { instruction } .) ]
  ! PRINT           [ reduce using rule 19 (while_loop -> WHILE ( expression ) { instruction } .) ]
  ! ID              [ reduce using rule 19 (while_loop -> WHILE ( expression ) { instruction } .) ]
  ! $end            [ reduce using rule 19 (while_loop -> WHILE ( expression ) { instruction } .) ]
  ! }               [ reduce using rule 19 (while_loop -> WHILE ( expression ) { instruction } .) ]
  ! ELSE            [ reduce using rule 19 (while_loop -> WHILE ( expression ) { instruction } .) ]


state 131

    (20) while_loop -> WHILE ( expression ) { instructions } .

    {               reduce using rule 20 (while_loop -> WHILE ( expression ) { instructions } .)
    BREAK           reduce using rule 20 (while_loop -> WHILE ( expression ) { instructions } .)
    CONTINUE        reduce using rule 20 (while_loop -> WHILE ( expression ) { instructions } .)
    IF              reduce using rule 20 (while_loop -> WHILE ( expression ) { instructions } .)
    RETURN          reduce using rule 20 (while_loop -> WHILE ( expression ) { instructions } .)
    FOR             reduce using rule 20 (while_loop -> WHILE ( expression ) { instructions } .)
    WHILE           reduce using rule 20 (while_loop -> WHILE ( expression ) { instructions } .)
    PRINT           reduce using rule 20 (while_loop -> WHILE ( expression ) { instructions } .)
    ID              reduce using rule 20 (while_loop -> WHILE ( expression ) { instructions } .)
    $end            reduce using rule 20 (while_loop -> WHILE ( expression ) { instructions } .)
    }               reduce using rule 20 (while_loop -> WHILE ( expression ) { instructions } .)
    ELSE            reduce using rule 20 (while_loop -> WHILE ( expression ) { instructions } .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ] in state 72 resolved as shift
WARNING: shift/reduce conflict for ) in state 84 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 112 resolved as shift
WARNING: shift/reduce conflict for ] in state 114 resolved as shift
WARNING: shift/reduce conflict for } in state 125 resolved as shift
WARNING: reduce/reduce conflict in state 128 resolved using rule (instruction -> if)
WARNING: rejected rule (if -> IF ( expression ) instruction ELSE if) in state 128
WARNING: reduce/reduce conflict in state 130 resolved using rule (instruction -> { instruction })
WARNING: rejected rule (while_loop -> WHILE ( expression ) { instruction }) in state 130
WARNING: Rule (if -> IF ( expression ) instruction ELSE if) is never reduced
WARNING: Rule (while_loop -> WHILE ( expression ) { instruction }) is never reduced
